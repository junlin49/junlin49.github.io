<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MarkerlessARDemo_1</title>
    <url>/2021/04/20/MarkerlessARDemo-1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="ff97fb21afa220be90a7d915ba90e15c9bb8293e37967885b21f0d3dce4e8562">861fa3301ca504d5f4d4ff9ce2916d05b432d1fc65432356a763819399384025ae47cad0859800784659c3fd6dce9dbd85b92ef127d936c211e47a2fd7d75be2d611d0d7e90c9ceef02306cc0035e2aaa058c96938a67f7dc558b733f94a811c359d9442dded77cad372cc7763425a04830a9d61e74931737e5c8cf85f0a10e3b21d70030e7245605e7266b880d5416954c2af5f925102ee074e44f54abf2b483fca840ab297b87c9904341bbb917589bbbece4b6ca4c693dda9f4a26f246e6904c161b71c81cc40096bc1145ab3665d7efbb9d48d5173f3a86e3ac168aa80eb9d27f1e82df4f6315c7e48dce7f4fd094510699316ada4b0ecc4db4d9e8ee7a3b5e12005ce3b8981f1a492e098c698a7f2a1064665ca96f2aa3bd22d459d27fa0435f5398ca50ac8a27fe3727f17b7481e9beb0a616cbd39c22e1eb61c0cf8c6682c80151d3c8ca8bda28805c4155a53a3ad398f9bd0a32286c1c0d7f65480c0936c93a805ae4de596433f45580073a68f13ad07e4c02ed8020d32f76a3ea578f8d307306a3486caea1002ca5f29ce3e801e3b4acac7a76f675787ee2646832a477de3a8a77f0dd78cdbf711edfe1f0c2b357ff8a968717b991efc2a4a6c767b4e7714a2fc7829c922dbc2bcaf879659c847de4f27a149e706b9cb06e21b59d73357e1e1b70226bae2b01a858731d050665f7e1e051004be4bd431ddcca71d34df20423555dfd0d1178c53e1cac5ed91048583fd0ba348652f2a65a0745d718a4441ce06afdcad4699fb1eb6788f344a02abad83c78360d3fe55f697c41c2c257951a067ba6a7aad14118706465276cbd2c21bf4364dbcda177744b4c3a0556aa57ac44f9bd6ed74b4d448afaccced091d1bd857679d1fecd68cd1ecf4acba380e53303b8dfe2e8755426233e0e7dce3742be8e7a14e7c0124f2245e107346d7aeb414d74c19fd78e981bfe86c18b5c6ae5a463b1b0fc1fc71f2f9be85e50a34ed3e355437a1a4232bc221bf14b6cbe917d3522a30e446436aee7050e1b50c28842cfefca4d5f4c30b9137aed51a6fa2908b7efc8c65f6a4331b83ba3954c49eaaa2348528cfa82abe82717b46d6747e7d8ccd124279fdb2b855ddb4aaf0196c9593540a2a376572dfd4b1927c96489223477dc9b286a23d459abaa418cbad4921586d4b40e0fd4a8fe556291a1a6c5f9f97b74c3482d013802331ea18e1d5f6ebcc9f57e49adb234e50040007dc56816e85b1a51782f4f1c1e3eb20d29922af4172868f2bd7ac2b27859edbd6351c956e4d33588e3f3d86cfae9adc618876e413672ec8ea927c935f5611616f1eb9d5a31876d8e988b67383d4ad2c22af78021fc1b547f6c0a715cb20a333513eb82eccb7ad0a49edc47c6053d22c0316de7198bc4b7555208d50a22099490d07fc99a8a0063fcefa988d6763beeac26c29b815237d17461e9f11d1e0d7a5fd89d81792953dc3f81b27076fc2aa59cf05538c1df52a86a9602c5a777dfc48f4906c267fd0659a986fe6810fe94f5cfdc9547e47169d154895f82abb6629bf6ea49c2f99044f9d10805dc8ef934cdd37de97983ac6185742a754b92cd33aab4c7e3346690a6ae66e88718f5ac86e962994f5816219ec09f0eeac1b6a77041498b0bcd99c4a778945e8b7c67a07be4d369e55c66a07bc8df58500ecab39892cebbb9430de7e2571ca7fb86dc8f92e40a87272530fda4c73763e5dfb054ab6f98fec3bc5fe00f8a3c705aeadf76534b4dc22769c4965758a043bfe829015f0217bbd07dc700cb6ed489e8eb7d4097c10871fd8a75a64d7a421cdcff336e9808c9fa3b1b2eddf13ab84d0ad7c61c5be8c5b5c79300b1c890047622d413cad2057e12d7a8bf4039a2c0cdbcd80a6c76e577aa6e24ced7001ab550a75b186dbf453494ac3cba24406517688f9101f0be7bc7904328c09881f8d6cf7d8cd376c4113187301d57c5ddb332466a649a4281cf73ee2158c2d15d8cf5d551f6f02c493e79d7919d47f1ee2bd88c162c311f0fa9d8ced859e12578ebd8695950a6aabf7a6cc13d325b0f9e16c7b29015593637af7b27d36c58f650e214aa3abc581f6e80716a4bd165877bc02c72b3d4ac73f8580216c10a1f8f5365b420be7984f8abea42bdb7bbec4b612240eda62b7e3913f0362067465429709aa03a7e22e10e6354fb68c5304ebf4c4352b09aeefb754e788cfb3bd5ec50566785ef37018477ab0f98fbea21e4b2ff789304c84aa9d088368d39d80ddbcac3b4513c91bdefb6e27d5db7944c93b8fef65f32018d03eb45101f98d123b0cfab2daed7b4a65e6cee1e0f08928c4154beb953a93acbeab48167eccdd3fe86cd2b5e7aeb3b89f2c3afa42e6cd9cb0ad9bc64a11baca44568294448e37e78b100881c2c26287075658bcb66322edd176545dbaf221150991f3eb61aba23160120f58d5f6aa648a2cbe928f9ef6390eabf3154d6877088c1b5842607e9ce374ff9666a2759d7c65f0e3d413f43747ba2b7b1f7d335ba4b0afeb01588e2535907d300ddb6d27cca3093ec332ee5d5942bfb5888a868f45027482275a50a7254c38bfe557aaa611d88eea2454b323eb460e99eb2f1f508ca250604e548db43799ef2796d98e90c5e7cb3ed73f6187e89128de623a3ff16ae0c192ba63a3c6c49f77bb12399c3a7e6f81287936c2bd5a2ecacd91727e978bb97bddd0fb6320032ce115bea54e05665fa9881cf0c8adfcefeec199c183d03ae065c4515ffd582beae8339461c698f4dc1bdfaa88182c6322b48961f42bba88600300778a69de661fa3afda5d4620c466ec6c8fa6eb8f8dcdc3ce3ea9fc39be4b11af11d72f533439ebb5e924886a9016958c5d0c9a798aa5135deb07aedb4c13fdf44a8324b2987b0b296175f37fcc0749b2a490fc72ac0a922ed5c8e91fe99d442dbca889eb56debefdb842a724733a4bf6098931dd28c24f9fa600a310c4c1cd97529f30ada514e6605b32d15ab19ad5e6d8a855189cc37824705f59c3d42852276ccccdedbb2d876928374434cb6deb223f8689b9b35096b33144f5a78789c8022f994f12e93452cbc4da9f1d665a97bf7a5f4ef12910333a472056fdc938c160f372767146397ab6d3b3c7d896d35e669d4348b102b85576efdc862164a928c1f951e9027de3014934146f223ddfa0583044a3a225cc9ccb82a744eb5e4f194d23292d85085bdad8b912da4c00a92b6737e394e2770fed23a3dc70dbdd578d88c5a65c2507a564af6cef9ed9f234a3f0bac2c2019e88994d5eca03a9f31f1f1bee8db678cecdfe6126e78808cec5d3d93c2636374e7cbb4c3467e76d8179b3eb71909b549537dbf03e5a37176ecb689f168ceecd3a646b8cffbe18a5a19e4c711389b64aa296b0204c73776a58170e4a1b452c91646027b5c9c57a4c0194537ead6a4d8d622a030a4319123fe716eee3c455ed0120979c18e9a43da853073cf0ee1498e8d1872d6abb867d8c4cbfacb6ceff135694bdfa1cbb3018c71c50163f1fa9f9d16324c6bd45bcd968b2e783ac483dc929588d677ede1316283f4e38eff6a524a5814daf2b97f7f1b7ccf8d73cee605738c16f5ecbae146be94b862024dd113a04864d9b779b21831ec44fa308cea4aa14240e933c73ff977a4104e7e4229e92311fc24fad2fbe7a7b72a93d0205d7e7cd497b9519c1fafe93caef6538a8e7d66c1ae013726eeee933ed3f7f33f95e30097b69b168fab441f1a8968dcc582c044690a07b872b109ad8e82fa3fae3eab79d32555b49dce5aa3fca7ba10ab4c1bc5b85214812c53a5601b1fc2c00d9f279bfbef4dadd16b6af1e40da8038402740d3c6ac8fb1aa637f3baa60ed45d1543386ff3d202129fe7f5dc08c17bd5b856c413da1bca535f9e1a937c631302e70d6493bbfbed660af675be19591a0a5957ebabfbb51b1b5dc0c870c760c68aa8d3c9d8336d226f983db76bc0a57da4764f84ee09dee14c641890f766ee27f6ce017d0b0ce2c25e52283b6644a36b82eaabf8f079f4ea2c399ac94a12945bf587c177470855b713817c206b6f95abcff3f3e66bc2cf4de8fc22dc67c0a386a6f40acaf03cebd0fe4752d4e30b08330da7fe02bc4ecd64c0594ab4cc30386858e1f5892e3957ea7fc7c8e84306e227e4a02343e4723ee358f9ce36f454931cc3d2ebb894bb0b7811a52e0de5a340355dfc687fab0ac7159b986dc6430584081fed15d5df058fef62f6be6e9945d60cd2671b95ca148757430080817ecacc22baf856007dd17d376cbafa8240321b50e7ee66157c90b44506102c7b4d7953abc33c224664c2a5e1c1634f8d53f11736e255f59f97047e2875c2fde89028d7fd9a3481f41d8e36e9beead747346a00c375bfd5837aa4bcf69e1a271effdbb6e2bc49d564d2a408d0e4f8fbb6ec446653e234168b0f000273759091d26628890d6799fe337cf853200b87b70ad49e310ba4bf8166fa88cadce7781b913b8546dcfc16d3a838db142782bee458feb09fdaf8c2386a05a11a75463ba17312977923972318fb7eabfbc9084a96926b5228cc0dd4f0d21c2382b936de914492d7462099ba3974fd3a16992519a1d2388a1fd05d5564b70ca9104f6cbfd407a565b09cecf697c0bd43f0b974cda1c343d6ecd4a7f212946942f5d863497688980bae10f5acd8cf3e63ea2139b467323cd61704257e50f9a57845ba80433c47524f6a364b0194cdbde08ab6ffb0dd597968866399e96a77af0fc919018ee5eb3fd6247036ce060392f2e43a6b20b160ef96322575212b1efe92b9b8003ed4a7415d0f42f72289519a03e8206a8e47d18202f6512419217f6d1b8038a8463929142e1b2c937ba91c2e3cacb8537ca730e4e9af2c71b2a4a7d3c543a9280f65d233be8bc2455210f94be36b95cda8ba84fbbe206dbf43c8a238ebbf85a4c98f408e48167b88211ecabd73f4dafb281bd231d2807ed95a5baf595f98bb97fa800c3083eda8c580795c48fc9f0c11ffa07d610baa1531ac96f68103d75d9f157ba3c7994031d6b3b176405d2e3ba43d4a3e0b9723cd130812463764dcc12c0e97a28f4a9b7f90ac5fe5b54ab4a07785f55416d75834ac6c68f2e88da30383466382bf3ef9218d7ae3199c8427d16541991c409064c392dae988f87afba15c4d2b907e36d1f254eb8cb0c4be6b1e6aabade40323815f02cdf78cf1e00c822724b58d62e9dbece1f5604b9a5548eec683e565682913af2f8cdc2f2f6f58571ebc79b7a6f89777033e8f4a91f90ba5092e6fd60faaa1c2c9d70b548660c5368bc4700f3fcf44cd06f9ad5299981a57926578c03f3834cbd3176928799727363f1c11eada88ebbbcd3754d531543433af57343f6ee66fc7712f83dcc0ad21aba118f24fe4433433ff3e59b47f8126f069faedf0501eefee3a4784d416ead0833d0ed32518fdc0e303103a21bdad072b43593a678fc6aee96ae6aa214c05d8235066c77d0343d645cad2cdf5ec24ca0085ae4507aafe8bd044bc937bce0c4a22f9f2a99f3ec7ec56039bed6bd62f816d9a7db3cd95d17ceae387abc4cc5839569c0f375ba04ef33ed2d9412727e4e21180eb1c3dc4665bd6e6c9545e8d9f87c580a97972780dadd6b8ded9235275ad2a22e8353ee80b0fdf7b0460e75e93eda8652f05d3b41c891e41f0ca524886078d7d79397a88a254b372c23863ee31d497402509059ffcc6e178a00753ef23ea0a773da9fcf6f432e4bc0f90116b8855d5592a6ee859d0eccacc4aaf2e6c091c947d59c68b85aa780366e32ff5210304e8d38c17a772e15ffcabe370db82407450d8a84f56ed578ca34c346f8c29fead2ef034ff3c840db1b09c500aa2cc0464f7d8c2461f83abab24f2c3c58a9657948568e1c9d0448321ae9f7b8c7b2211529f2c94fd2c046a7c1e616bc4b741861e83b63404bddb71db36eae49e89ec126032f56d53ecfdbb045e4e87826aac95375afac5523c96de5e6931b2b79526952c2f61993dc3934d4d4c17dc2e64b17ce24cb3bb3a740c83964b89c52c65c1ab7006161ea8446cffaa8cddb0ed767ef1b07d28188f13314597b8c4af1fd66907adb61ea2a154e626d9a937137138f5c7e485dce704cc283e559e4ff0960d1ccd0d905215d44813a33c68b2c55264938146d0be28480f4a64324253ba28cfcd5c4fe67711b61845e6519d637b159991dc87b471a8d02ee6235dcc841bd9a1bc6334e7fbd2581e86b6fd09c2f0dbea20bfe7e7da7ff886e2e20a0203281842e1960a75b6e9187e082597855151031f95b7321d223347f911209d017a28994b7f6270a5753e3b76c49fad8fd130a88ca11428d6b52e995a20a4ec56e6320427adece7df481f5be6afd84c06d422992ffa0066644cb455f3ea2ba5fab818459abafb0972592ad95c2070d72562728d88e60f5878e2353b26287f18fb99a8b5eb3ccdd305452b6b757c4ed06189bd0ec88bf7bcc95ee4e1b68199d760ae1db8fdc2bb33acec1087e7d7f4509de42f4aeec14332dad485c30a348f3f35af8cb3302a7ff12243ab333cfcd20b7ad8f432ea9914f1c9262eacbd7b8eeeae2087ea9f3ba18e990b5c4b65f4e17b20a619d6a9b0e9d3505bdc43f708ea8352a7b83c847e8c4ea5c742fa27713874c06a97039c6db3110d46370d1fb887adfc29adbda6fdcf11ef7faf532e91975346444d0202c5797c02f287ab3db730f07e099508861cc2442569da1a9e090fc2a3fe715796b314dee605f35558b3b5feef18f16d8a7f1a7948d4c4ba3cdbde530b7e355da4422f6f58ab128511ef70b725a6dd6a152b2702c26a16ed97e457dea22a520431e7f4c1fc2f58ac50c392798cf5667628b7d14844b9bcf7f061d33ac4c9f4948d972e978c6d472949ec214dbde580d725a647647e597402818c83004314f1c437e45c9f04825e39c7ac202544285f1da70cd6a665c05dc517890956c529c7282fd803f84e173c8cc4bb7445effe130b0b58612246e84c90bda319d74f56e20b27192d6f22385ff891c3dc36dd61df9b2a34ea46c681b733e043c2fba1d3eafdf2e425850dec0bc9d3e8c96f40a30136fd02a197ac0b36e030b6ff18f792a225e798f0c0680330391a28845c308fcb88456fc603111355590f6132b2486661bfd0f06d7c8aa63914559fc1898bf37a260ad32d5ae4ebbe3d8a3d6cdc8e0de422baca1e6f27787abaf3114c7773cf8fd35f233f68df843a196aaffda441f7bb9eadbad6730f48890e89b6fbde0c0618ed233e4ed12df891ad0348103bc23aa76f1f1ca3e6f1acd8f914c12e1570d01deae5c3a327ec7434fd643e092516e90af711d238c78acaa24ed14d42be17f9c0ddcdfa0125ba83b1198c00bbfa664b82dd270b00f2dd91a3eeaa6a811bb89b08d7c813b7440951d7413f6dda16a8a2d39d0c29a7e9f06baa0fc43ca09296e39664fbc810f112fe9fe77b540790a51bb7af443f10c4ff0172e96e94630c1939f06706ffee977b94f8a331bf402009a2fe229f3705a06922cbadda92df8927cfac2308f0eb5dd9c8eec2d38b5bb7ccc1bf389547a279d80c9aa7a489527d835e7f9faffa3229ad7ccd5ae5e63040977f20829f42fd19529b0fedb8d1803d6f92a5c6dab6a0b054956f5a8f2c36f78fe598c80353f966eda028fcc5d4483a3ea0f68c3a6b4f00e930dd16c022bd87fd8148373800ea4266dc22f20d8f6fd9bbc38df1b00a0e6b850c83835054985c43e367af71c3cc97b26a5bad79df3c9dff2a535820e6a9058ea926bd2691dc6a9f67d9268aa52d7f184c09238cf39ed0f2c56d5e121da55421a4ded18e302c03d2501350662a1b1820595857a8d49c16cfbd8a5cb80ea0b48f52bab30295580d7bfefaa1c030268d2ce2058f79d3b29e40d25941e0cefc98e2c2a2aa18599b951334ac6d04f77ff8735862afd2b151e5dfd0d7a89fafd88a7e19ac845b0451ab498d8deae001f2bf28eb230338605bc5b300d4706c83d66f32c72d005eaac681c8151c720cb12e91cabb7f1c9613af2ef4f09d9e911b9756b320364adf87615440310b326debc0b90967a2f50d5155a40ab6a7ecd89cec42155ffe2ab2596625e7c37fc52b33fc61b316a0c684b28f46e7d7501357a425830d492351c9451aca346db51df577d1cf7f7cadbb65a817697a5ef09c4f9ebfae67590c722bd788f625ed30d68453251d302bd9af0e9f629a407abc9fd42139f692b4bc09cd2ac3121ded1b1b8457ee0b8eddf34dfa668363672b022fdf2c9ba8f97e47bf8aced5f909588110b82134809b86f9c7144f15965feb1c28410818b2b39e4c5ac59c52b7092727758bbd6b42021727f88287301fedf734400e5c4df05cf7f386f3ed858177e717d29698c57ad99c67f04b8fdd72bcce3ef57426ec53add4698203f64a7cc69061b89e18d2f2020398448ea8373d653035955fe0e92721892760b95608aeb0843349a7d42c9f0a92cb7eea130457a1b7e32fa177e39facb7e59a25282820ad4978b4f0a80f686c0619797bb6ed1fa473d5f742b46f9768de6d91e574a7616aae29f99d1db6a4b8ed600a933cb9e49a9f581219cf42c2b989af2c9934043b3d346b5fb626d0f9f512f407a7a87f49c7e63b923227f328f82e0c6bf231766a1b9e04304ccc36b500c28df3daa84dd3e632671b323144be80f8bbe9ce035133779ca4f936668fd0da8b3b7479db5bb456b4e5570b2ce8ecbe92bd3144956cf080dd1e67556bec7389e3d64896e9e52099070d6679d681221d737a22e20aea9b8581f8b0fa690b4cf7be2ede0863af2b678ae982d771c9881ff1de9447c8424b43201e0dd53d0b903f515302f65abba11944172f05a0ace22f3a4be7ac93842f845dc5b953caa59e3d2f2222dfd2d8dd18a5227e92cd27d7637feda931c884f76d6b2848eaacf6eb21b9fbb18897214b6cf4857ae12a939756288e9148dca36f54aa00e730a32afb24e04cfe2a7327658295a017c7e98d3fb6fb01e4b91b0ed905bac1abc29eae5bc0e91496a14a8b59f85ef38a7ceeacb02eee661b627ad3be74da9b0bf020e6dd816f2fe0773e17ed0dbd49de97c6319f8c3c063c58d7d08cf07de9bb16e8ec9d92ecc1e05529ebd99e95a2357fede2f5c6d73bee1cc56da639450d3383f7047414734a8ffc25deafd2f11605e2cadb12045335a16f6c0157ca3878d552f077a50b903b2e921c85219a093586a38bc54248223206195411cf58c4281d4bcc556f5338dce6a34a09cf16bf712c823ea579afdb9396bfff65745f747b6be90eee611c40a30cd6b729ce3bbfe6e8a897a9d4f8d7f26010ac510ee67bd94dada7cd50456388f83cebe33c12e53e2cff52515e040810f7b4c1f73beb63fa7b34f813da388a3f545f220fcf7b46fb1af05b069d8b7a2d837ebcb548cea9f30c2b8a128dfd5a5d17754ab864b8cc92f2edfe634eeb4ca21eb91fc1c787eec9d8b8789ee5c368116fd648c6bc180ffb733ad249e797323ca655f49254d4b951009553abdba83219beca361b0bf72b9e6b73b2574673b63248ae68ca017ae7d27a78a0232d0d1ead37badb5152f4b367776ca173b86b813d6506648dac18b9cc72933d3343da55def6ec13ba8bded9f57de066fd92c739d3f871cbce58aa270f58dbf10337a51901eaf3ee6a152b1b811fe1c1273af2cc8a9234c9971018c044ee36e1a44592e16bfb9827562f22039a9e1131d17bc84f064d5ec75c57db7eff22e0f32a9a7e83da7415cf59f54a00b5722e9d4196eba2f8be36b6333228b82c84fb19b76a877e1c9e472e9a63f6cfc72e9b66f4c3b9f043923aa87a1e9599cebabc43c38bd04f9fb2120d8f5093127afe1fa4383451e8e9bb2367b5ced2fedb02cdab54877f80fe1e3d7d4f49e3c9d7b1f3ce76f289b35876259e66999dd5d3923068aec75633ec97e350d53e8f003ff7c2312f33ca4ad9a658cc1b5026afb0cd9cfefc6bf4c99f7167321beec42e3450e4e641fbad9c952eec268bcd72a91f6dfb1542ddff8169d59253aa9ce798f13ba9b8a657b40600f69743a422c4408671fe7bad57006b1e7a7a6a8a6f84d836f41fb65ff07ba999e81f7b52636a9ec158a5c267b771a028e5cb616d9d8512c41c2b201f2165d5cae09185496a2111ae396bf6a5bbd44c6904bfddf7d634c61eb46e4070a029b608360a945cbc6188a530b34ece9b5d4726f13f3742120b016c55f08ffb86a7ceec7aa3f6c0ea4533daa13dd86375145249de2124a2c08f0613db252e3a998b75037830be99f056dc6a7358832d335fb14fec1ecf8cbcc3a8649d68f0a7f192cba362c83a208f9e8bb2af2b8bfb511878d5e7b9d8ef9606f18269eb2288d583ffed5f088d9dbf1c2a4bebc80f0d63973116448a4dbecddb558166a8db97ffe823cbc88983b816d5580a189dd2540b053b3da5cb318728ec95220ad4923e6691ac2b457932a1ba40d7487b82be835a2f8920af064c095ba60281ace7c8045529d344899807581e3a6b0c4008f3a35013696c2a43d82f5a23f1f9ee03462c26fae4ff9b80fd7b1637d1371eabdb61f775dada96f8c89bac711f2832dded9b02642b078a8e3c094413e2e05f6b57613e0eccfc12011e67877c3c05333deba5a09af6e58e1bc8e37a2bc78fd6e187195de9e1ee631a19ae2692b64f0fd9899f54ac85c228bc52f303b1540d210c91a0220ea1bceba542ced1fc3a98e760cc9957ce49f74fbb136e93def8eb1f31e6f54f09b4e4d345e1a37ea242384b29233c5364c8ad44d57a18b421b01b5057fe5d4be95866a0367913a11654815185f0027f72f6ff13982dd6d28c154432492163091143e257c99338eaed72de2fe00457d05ea1d9df7828ca524df64ca5de9e8b74f04242337be409e77694030f8ae1e6dfda41a7b2ede3d50c31b6227a4f7355b56fa96156ff274f92b7bc05db04e873b075aa5e738e8f70838a563544001ceb1c8d8daaa4e7b77c9d44b70aad76217db990189bf982ef1ac866360c37e42337c114255bf3e30b15352ef2c35bd6c15906847fc5a699aaf9ddaa7837aaeffb8655cb6d7adadab118910236546a1c7e5719afdbed2f00caad984ea518cc98571f29a2285f40ccd75f2d653849ccb750616c1d2e69b6400624fa56502379a2c2cbcd3a3302e7486a0501b9b7610094b2a4d2e44e27b84006ac25e14ddfb63d5333857a7973f7a7b51a8947b1287868b1cae8ddd7aaaa098c7b8906bfdb7c1e1f425e8304a1f1abf1ab5e6b708806564b5585808033ae72e233e36884e3763a49a7a473433d68811138705f2a1b2d273a47abb9768f6462472b33a845eae3ba53110914feedc3b1c9756cc0fb3b8beadb8126ed2e2aed0bd8b262dbf86467c7bd7ec39b0b39d172a7cd008d888071b2c1d244a6e04d2a9ee8261aed46c286653ad09f621f0348e8e410acbd8e6e8474506935d04e871e2e6dc5839d7a6626124d3600bd5fbc26f004b02d3d43eae173576ac463efd3d85d331e157b6d460408cfb26f5afccee6b8b95d264f2f8fe54ab263dc2bcf7c4edd6b46f262d3b99077eb2c53d4ae2e4d85807211e00edcf686ed84e453923166dafd0751f4f403eb77824abc4a0581f5338374311e89b98c8bec00edaef69f9edf8825d231d05a594f99cfb13d31c371ecf6ac464688fbb6879c964906af9e030641ce362df2d67d4d011074550540d413be28c17d12ffbccf131045cdaac5ca989cd72b995427d661ae75712ce19c8212f8b9e544c3a60535e329b16b68bb16ff52ff17f157e38fb419a6a097094b01577953070daac7f8b9d63ba981b36c61820cc9fded1e277b369c3980f2417706a1c741ed6f3350143bbef9125c0dbfd672a484dbc24fa2a60edcbd1b81df7e3cb738ce6b667867f1d2ca5ff2004dd5b8259682cd29b8e39000aaaea4b9c02ee03b8ddd14f783e8071412f6ed56674556d97669f3d46a7c59c4495a0368bcf04b2ec20112b8ddb8abbaa098ebe87812e1f5495f65827a7f0bfa9a6c4bc31d7e6b22bf9531600a54331678d5ef69558b51733cc2fa4866a6492234eb018a76aa60cde49fb34a958f8ac0bd61d21f83575d13ed9189e1a70597868cfd59ef2ca0396dbcd3d5c050b855c4898eb8c6455a87865df7d05d2e1ae50bf0be636a4de3858eceff871d9cb4be2f45e05a2450b92c0e5516e9c91ac119b2159e105291f02586b8f29900c2a74950184d1451405cd38d60861871d2df8ddc8fbb06c0a58d69b25511bd6ab0f07c5f070126475fc0aec92c5fc2444d43d522061d1e9c4e0c5631367262dcb43bee20ee7897db74fd86dbf20054d61763669d19def662c6a06c77cc233cf52fe4f91d06881d765286d5a928a2a68d40feaaa224b87665cc4d9ae2ee123dd46b8c07ec9341f0c663bfa8eaf3acc1a510f8e296c71d7ac02a96d05fb1c9a71e998e7d937d8f8ace98fc793002772d0d5a515415704fdfb7b6038f81505636b45f0779dbbfbedff036517dabe44272753334b3ee68e04146dcd8d961ad623f8d605f8497b2799e98a9b00dc9f43fc820c812444b550f0070cabb7bb8322cf4dba0e7ce2b3595d0b93424bb0083b90cacb6cf592c821c04c54368004b709df7e97cb77d0e15a9e176a01a71df4ba9344c9e4d07332d26aceccf7cdca3c97139661c329656bdc0fd545fb755fa325e99faf264dac81953b21b4de63d8a3f439cdfd1c45bfe2dace6654d0da418404fc388479b2a5f98e7977d83f72892b7cfdfd7eff2095de26693712ea77cb7d2a586cadf585fd1bf3c7881ee90290f5d465f857695ea89be1cfcd0ff35dafef3decf5d42052c83e824111060c56870a9b2c45a3dda2719f14f084011f678e9d4e6e4ff8f4ddda2d2b3a48aa389b01c642c0a1e286b4c9fe5da66c5cca92c7a280da17b03079ebd791953a9ec45a19093324d7de691f55d608ad8d41e9bd320ae75c06789893317eff42e7ee30d27d5fd516d62cc0c519a8324ecd9b7be0b9deec89c842f7209b5e35f6e0b21192645d2eda1cec80be496a7b147725dc913097a7d2a94d4909be8e288dc6405eccf76232a9f34c241e43a2bb52221834bab18b718e85545323bf619035b423fd5c696e69841e5362713350c12263b5e13ee4cd5fc353377d1ad4faf7e668d64c8c961e4c266e78550cc345eedd6e3e846f416af0de76e844dd221d59397cd55bf52d47e9022ebd5da8fe5eac08e11c7b0315eb7a564a35513422b2c8bafecf2767e030a80fb863d0b21771776975cbc7b70fa6795c679e107c579408cfbacac4fba0dd604502d32ac8b21be08b570ffac36f8cd6329e7762f03b2e12ae98c8a0b36b7f71051ca5e2666a43a5230af460425523646fa4fd8c1a9e4fb750c64dfeea0ae26a1ad00d486c031ff71d44ac8c82292814d152523a78bd88208cb6626661f66f5cb99924e41a3892b7994961870adf08bb87949ad3cc7630f2e1de2deb0739a23ca154ccb29509001c57cc60c316fab7c34bfbd88aa9ef8604bdf3699cdc610f094821e9f72172d7205f5b399fbefd05cdabf5ecffd839baefa51387d58d0ed50a70c46d298c976d51d20a431f245941d7db2afd5f4b395b8dfee6fc3a1dc9172051035ea16d2a236ad48c399cb6c734936d4a2c4287d96ef1a6b5c9d44a908c78999606a08eca72ab265d4ee3b27c61482b5ad6da31efe7b439479c71ac64396df868322ae83ad42fa4ae55c34b79d03352dcad7cbb61086a36d1d2da083b8cf33ba6a9db36bd0358aa4c3a8b0d98badfc4f0699438277027721b21987292a21fc7964f496f09521ca30a79318c4d058b8350aa72f4bacfc13c6a80095b176daea360e06da349267ed2b143d53fe61bccf33ad7c5cdbde5903abe3650f94d3f27e5095b630077a6e1a29990ea2da9cf807d6c482819f48f97511458560774ffc1ff73af6bd22b23e7a4e2ed7a0c113f2f860276b363032d9b65490568091f536b819bbb9c69cefa4e1c09c7e8257c33b21d0eca496166476f2da5958abaeca6a9be577695f0a2e20e737ba15948feb68004edc3bf8ae1ed13108628078b61763c30be271bd445f256269376fd81c0cae9630817cabb8106a014a85a972cb0ae4843d0992eb6cd9b712741d553f5e8ecd4cfe2198b86e913b65a24c0c9f93ecf4b7eab24356ee516ff3712b4dba3f466042f6d38433beecdf0296752e45dac44a2534d7dbbe3963f74a99332560ca66f2cec5952f25835016cd11be1b4540afd9422429bc8ea63c671adb7b9b5f80d998317c79fd7c1d648d7ee17d1de01b37c245c00896adf39c04009b0ab21bff93ba4220b4caf4d88d7a6ed34a2eedd4f0eea624c218464ff38a861cb92bb9dad2d6d6d4467e16d1aadc97d2075509aa9599ccf09cce19c0627c85baedaabacb1dc5db03e94d573eac657a4524d6f93524a9a2afe26db9a06e70f3dfee4002f878a840834c2857cf28d7d379f623dc9e17c8f3318718296c55d4dc2ba0fb808314f4ea3c85ec4ad8fe75e052e09246ce3aa5a53f626f564203ebe66ad5ad4e73626060c1777aa680f1a9da863a129491af93370a1bf39f6f308549dc0c9df8c3213c7b8f3dc9d80da23da69e330e72a8cf1045c78d6e5127be0815fa1c8899c42ce97859c1ee4750b59bf14385cd242835dffdd30e1c32eed63ec42919a4cf0f067a6182d3e2bfd915f2caae15f700f003a535d95d1b39eee6b6df97517785fa24d142e7b0dd57744c3d0c26ef419af1e8eb1a46a487c90f322950ebfd9112f06abce514b0a344944d24ac268930452d8cd1a711225150b0eb00374e16d6d205b99b4eac44e68ad443e276ebd111484c3f84b3153cf5df1840137c3da38458d12294d89ce28e4466aa4a9c45846d35dfb7b2efcb2c6b64da8c3b996bb8788bf20db7ed3d041cee517da0c342536e88274ede11928b170f883c6f2edf0b1f95079fd15a7c7c49395a70e982edf9ecaf4542491fc7421b802f0e353b7ad645696e51debb963d69ecf78e96706b06e0f97ed02fd93ad07e88a8dcbb19f10e399aabfcc2da2d279653e91af583c3e298dcb875af4d6a592cec02bdcb4a70c89612ba72b9d618a8870e5677483e004a71e327f874a17f880f1bf85aedd14c2d5825e7219195dcb61b0ca0b4d24fc5338165a1ecbf8298e7f497f2293cecc13d4b6b6e2a52fff018cb6994badc349561beec21157d777ac3f2ef4a7f96b7c4797729aec52ea66d1d4a77606152416def338e44fa4b7afb05634e9534786eebe0bf06765589ea4b0fa1ceddc8070d8ba7b597e33deec6e6777f9611ff4371fb39a40da0b04c90f68a6c55d3085be0921fbb5829e2681c8f82ddcd1d6b19839eea5eb87cb45f30dc5eaf45e83e814d54e6e6986ce19b096741009937a326e615e98a2189b0bc7daf208dfb856384f88b81b2ec83b088219860d393872532d6215c72002302fd40d5b6b77989eca3a38bd160f16137667f698dfa549b4b0a5bdce056612b4f22066aae28ed2a75472fc5aa1ec423827e4b21c14bb998d42801f9e92d517e1c53ab5ff6a5ace4f6b1656751d0fe7cf571f787d7fa941c9dbbb76b7a574a4ef8cf7a6d93dc3284f41a09be39e1a4562a7abdc233662c483b15c9a5e77f8d201720d4a093783e1b0c06c1b2ea2f3e0411192a401b096f212b295094d1c5a77b71758bb161adca95bea0dff3aab0e010652b4c1b761be509670f1b9478e6cacbb42b24e74a51c9bdc5e4f3042098a53242667ea35cc89661e60860a010f958af9adaa01f542c176719ba909812e538b9c21f0138ad62ebb6a42ef4b1fba558604cd08e296449cad3a43448d0300b4f638ab7c9c4e0299d0f47b0e38b3b096fe990687035711c3296d34cd2be8699d1e3e1d2a8be1437a0f94a21e1ca4c05fd978d4ecf940cf1a7c8c483b4fd9b7674da0ee3e4342b5e3814dbfa55bcc3144d1839a54ff7e7badf2f511cf65085a6313db79ef6504fe5880f282bc5a590e98880fff1e81dd56ab31dbcde9af32f44df2db56118d2d909fba198cd77a65e9406deaeedb94d14ce79cd0626f2c23f4660886d7b40d86eb932e0ec3ced1379132875f9067318cd532ce7bd3b9b5ef38760bdbb439fbb4af40ed00ad9536eef169c3114ea5a21ecb70323938dd4a9dde438df377dfdddf21bed6ac53fda797f09dce1eaca79e6c49b1d8f3aa123377b8c037817b0f49e594c85116377f2ba9556e7c729121e518a57ddeb57c39d555fbc663223d21160883fb9797bf05b38cc0650a68cdff510fb8ebc8ea96c7f2028a62ac1a7d4bf72075c58196d25aafcbeb7a1858d26af686cb38b1002f93f18623e16461fe8bd27390991a25d90a721ec5e292c82169de24c40864ef375f1408f71ebbe667ccaf12c5cc275b9e632fc840888be06435cd3e0b154dc947696bbdfc2cfaadb8cc27314a1e71be003832a7b6d24c1f7ba70342b57242364c132e0d1ce3cd3c3d7a218e14d92e7ed87ee9460a21c5344b20b64a0cc79c8e2b2b54d0220593e4b24edb16937a7b6cdbc6cbb82d4fadb64e4d27f28af94666a01394af3e3ad1827b91b388a5f6b771fcc529e71118c19d3f6d3e625ae98e911b2dfe6ffdac29475e0baf72fc68c18ff5c4c0905e4405bcb6b770c355271e92400fe2ab58baca0e6d103b07c46a423e4ce6f87f0b4e8faa4fbc94341535e47b15417b722ccf116ab13f0134d0833039b2f914a08b2aec5b582b0fb062ebdbb1fd03cd7ea5063f9ecb4f0099f197f867d95d4bdfd0673988bf591020b52ef3d7f3473ae0984b375ca31f41ad51d92893e2b6b062a1686652b4ee0b58c81d6bc0fed21d6c0cad1409f5fe5e178632ec45c21becd1560192e505cd3c60e1c0c90c88ab91c6dc0341b9916ff1ad6ac2718af036cf3e1d59d99252283dc834ee6c4a44ac44604ad66baa48175201dafe46c697532d662e04d033f477c0fdf447c6e1dfe74cf92f81bdd0307453bfb64deb2c47964f24f050efd2aa4fd8717eb9a64dd29de26ccbe2f96fe4bb6339cab8b69e18287f0608026eaf81c966f3260bfd0b1cdcbe02de83e0db6b6e2adc7100a17ea6558118a22ded771b337829ef9fa5f86f63eb5a9243b9e98329ef0d8abfe282f8add0b41a502f98278e93d58806b06a35708353bf9c0d29011e58e3c94eab1066cf0e04f87d076989211400752ac3bb71813ccf2d1110948414a4c7ea541f8341f028b374e4b80ee164ca705216cc22d17a481614c6b2b4781354b18590d082be4c26fe94a5b6f8b8646fb09f622b9d35b31616d2cf79b17f15133995edaedf4a2fb004c269835b0c2de69a85f68f1fbb9b092600bb9eb4d76d59f7d0edd324e83065f472ef2a66e2dc3b3331ecccfe778d29cf1baf34db2336739a21febc70dd0b9fcb7eea2f7ea5334574af95c9f59047677c30ee7a64c380712ddcbc9c306c09402fc56a675cc2b21bbd8767a01050793178c678af1782438c6adccfb7d9bf2a08e26f7fc02856a7110a8a538c4705dcc477ebca8aa341e9dbb48db5c35c19823c9bd8faae2f08a3562465432d38c9d88dc4da57155a10d05f98fa5737e09d99b1efb5e1389159823c039ecaf0990014e94cfc0befca00796fe384e996d0727a541d8c8ae1c5686fd2a0a9b3af8c44ae357640351e91190deca57bce73124dc892b9ac34a71f2a9ad5fd8af53261f334f414a7533338e9fd63c0a49d5839a2907fbc6ca4a10c2f1453bf4d0322f836e07eec91ef4cf5824a11aa20e8116c30a4e9ac295944b1cc293fe5b2d383b9bb739ff7f11c21bfa961b2afc85fc6c9e2fa670c55a8c0fd08b467976a70c80c5589eb443b50e62d6f263fb52f93321db94abf9e4e7fb8c5c9d9d3f93d93cd6fccacfd22f402ef09b5ab9e255407828265e5614d0f6ff46d4e501b045908613601b9b70393838d0c9a4b32878489a3053ab83ec168fdd9c5e53f962d897d70f8cfab514354d6e477456c7d0702cd2809e1c088d04ec69d24e9781ae228194afdbaaee7d223856194ecbab81585497bb228222e22d7dcd0c4d576d243e2a0e1eb3efc3b9277989980e5a582d59beed39099e0d5ffc8bb011f66dfe788d17397a88d1fdfce7b1c915b2438e1a294b32b60840296b4e1aebcb68e48ed5f261484e21238af765fdc180c4cbded4584dfb754fc4a6df06ff84ec9da8320f0f04758fc84de3738985e439899bc530672f4172304259e7082b25fe5d00e021a9e2efee73f23bed7c83bc17a710a4dca1b19fe3100ebddf3c7f9eb66f6277b0d229a9e6b5f84866c21c7e7209a20d8c206e7acbdc09df5adb80d1dac284103485238371cf617a151e13e169482ff28c06a4eb4e454150b99a45bedf155d1b0918b35d02e0e497813f80f30e79a80619d49583ce350da7dbb2e68f8ee4cd6e23c625c6b15ffae89ca8996afca4f25e622d825d87649a75ae0ec60416e973ccded9ebbe3cbd47345e175ceeb33708edab50c2fc426c6e729589cc6235b8786f389792e1969bb34351ff40e5f9243a7f5f0f4484aca634b74a2d364c00edae54ddd2ff666e710237cb6d4e4a106a2ac7a6d2561ec918cd56466751631127b7d88a8817e35261e4dc42a950ebfd2af7c3bce8376293830e17f1792a5569cfb55459e0120f15162751796df69e2e14bc2e17d27be21cc7a8a1f961416f8b9a890ad866dd0c5cbe65bd6a76fdd4698dca850b80be228e331bb3f2b00bcc2d47823222bc54c05a9b8565b1922c608c9f402a63d2ff053206caf15f9bbaedae8a892218ce2018c21dd05a9671f209f7d91b482a427a63b40f2c2722c1512c8eecfd0b8b2fc3f3d4d6e011621f177b6f7e10d9c52e1a87df1d5919e917970ee09a0ef31409edd710ef36170c1b2558a125e44c485737b01a11ae9c7982514e6830710b10503267eb8035ae1290dfe664d596e48f596ef6c5e997db4eb79854987f3ec5338ab087a8d0574ecbd409f8a563c6360e71b2d0f334af26f2c7847b9427fe2f511cc77fb70981d1164e04b4325b2dee82a6adb8eabc68845e90ef14c51db2166c47d7a55eb4c378b1c7aea045222bb621297ce07bf91b2c56db3ab6850c77e2d79644c06b7f2c01f11626c4cb523a8857af50442605de7b99aa308731bdaf38e8c242ff54073b6888143e5cb0a2e09291a712c637c9c1d4321631bee187fd262e2c1eaa39d594a554896906b9f22f2a384af7d42d5d303a00d25e3e7a8f1cfda0045034f9a4fc44c9d0591b36adc9666eec4edd91563f181847b2169ea11f50dc37972b2c03eebbb3a605945373ebf8653cc67e6b1e8bccae11a8f984fdaf9c84464b792d4e1cdfd644fbecdd398aec044c356f56cd1d25f765db7ab2c3d5fc3a7486cfb2ea3dc616ebfdd42c358d6ad58c0052fd20d192f908a3c2aeeadbb49690560ee222e35881051b798ea9ed50e2aab1a43e2ad6b73fc8525c22c9f6b630d8852b73439488deb672c871ecbd22a7acf82c63981d54af4e699c727b2ec7c49eb4c2af5ee7b004fabea2a048b6e2940762f041d4e4666ad4a854edf11fd463d9ef04156f76b3aea44a5f8e88b3d6274cc6093ea7af5c0f465031bb977e1bf667aa4f5068df55cc71bf8d03eccb283aa55fe709b67a9ce929e3df2bfebe9f682bb614fe6076f0111ee3f9a682f6544b964636b8237eb88185a8b9933fa79222038f96e2e2d6222479a8b43ec9d9c44e7b72b0bcbe8175711b0085e60c81caaff290514377cf5d1989eb75d09a5f4b2ce6c29454335d76d4807416a9147c211b0ff9004b3f825a6e69a52a789c5de712b6adc37ceac110902c0ce121bc2ed1a7a6f7546056d253bf5edc1245694f7f8d36a510fedda9e851494d1bb48943d69b85e3f69a4c6672fc80730bb9ca124721e269700c43003705fcccb7e144a50752970f31ffbcb142bf3a82c238e18bd20617bc85c69772998c125d65ddf56a36a2cf9d6e1ff4a7c867f3bb820c9bc5ed10a8deea677a3eb8aa3dd80b34ffa51c72ab48ef99d7f3922a5de8691e0ff5864de470d7be22e504b1a36fc1b1db70d700b4a8b6ef123389ee59986c0e6b2851659dea5bc5ba142cc6666e81924e37a1898adc9aa4505c0699dfd1e520721fd422d0409421beae9099d3e08b0b6b2ac82da0808b84a7d2c657b763be18dc1ed4bc14cbcc1eb8532346e49b18fc0c2411186f126111f75c21e41e4a8e99e69736ebd14e5682f4b59c65e1c41b18316cee5c0dc27a104569845c81a53b61e1cea06e0a08db2583ef024a9e9fe0a6af18634c57ca2eac35e45ccb53e55cb7e05e0e89c8c76176e9ef1c1031e08d26e16592fa6b3afae22f565014026dd2d1b72ddb91428fff5ac9a5dc7557124762fc2886bb04adc134c8a5bb43b4de0519a384de1f8c7d5128842e11cf760749b98289802a56ef5e87ad43f4a314f8a49d5fe4e2e15a21602b236eb4e2e0e0b435108a2f69c016f2d0efb8bac03c5faccc09af6d98c88c9ff1cc9acd8c30d4bd581e4751116992ff5bd96f9babc3c56f080cde8e28eafaf5477f715c7998ae79633afea1ea1933b17de8d0ab93ea9e7b7f2234527c5c83cdbd04f87169526c750257e604f73b2019b65ff1e07176439df3d2f9a4b0ee437c9b440d4011178850681c2c627ede0a269ba0516ca664e795bb6293799e318d4fca1fff311e7564c52ac177575c629d535a9d8d23af045272d9b9a842bb5e56c623d61f247e20474dfd77dbffe31b70782044cf4fab09976cb8af8addc32916992089f9713fc4b65bfff188f0e28d90c88f50f97ed79c7ff7031f1b1d97842ee8588be8eb89d98795379420d6e1f81d4945e117c1549ae49a6402011c048a91bdc8761e8fd664261a4eed37bb21c54e16a978d9320bea9ae0646d9c20ecdff5e625b57600cc450f510ab2944231aad5016cb375502faa8d5044274c429321f91c0d5e09593e0752494b6a373f92f73f92745e02515e9617417d1dadfee619f2c0b554b38ea7a58f3f900444c36d1047a79ce97d429d02be48aecb4c5f7738cda437368106a5956f2257bfa87303b1a3e8268d2063e563e32cd2c36410bc25730b3a360d2bcbb880e2e2dd09748474acb79cef6ee2b96fbb03bc620d40ef47799a8b9e341facfdcb36430caafe9f6ce1381b25afc5382cc62132827102de4c734ed192eda0454770999ec1ae7f4ef59b4a239a9087011a879b5f29efacdfc3334962b2e650d69725756975428be840ddc5473ba65beca4820884daa907e5c22bb8a0c31a82beeb162eec59fe908fe77b2cafe17ab69a097ffc82ddc40076b0635900170d27de31c5486ca4c75916ae23cd568c1b63c97e634feb78c51a3cbb9391a5dfef79189dd86b39de0975ce20787fb56b5927010c56a50da952b0fa70afb542b410f990144554a16da4e0684afca0bbb54e1e07daa224a1adf90090b94a003ebb370d4881f4bbd20a2b33a4e80d159f8e197003e698f4061340ba14bd225fdc7ac273fc27dab95db8792639a0a0c99aa93ffda7f561ac451dc81cbe30dfdb405b5a8e01e414e77ff27c88c11f45e26800213465e26969fc1d328e667ce9ac589a831fa1f1a3a4b32dfbeeb6155630be9998576e6775b3feafb9cb2b08e78f1c579c1e74ec177d67b90595c06e653bbc23dfd81e5001a9f30939a911c24e7a2288fb74f4018f2f3f71a35824478cdae6efc9d441217e1361652b0bc010ec81d216917f9b0e2ffeda40d2aecc90870b044fd95423810aff4f4e548aaa13087d57ca176ee83e99330e2f90a1bd78de75f482e51e27d108a702a072c59b1111b2ebef029789c6659a1d136e3d72524a6987a2cff4bf7d5ff6cb51e3ff2a2359e55ae64092d660796055c07688fe3ef9ac3d716ed86a12f1b837a8ca7118b66d5bb6a26cca491fbe826b06c0f776149257183c07ff081184ce9208b29b862b834b2e58f836a1fcf356a36d8cd1fa445a9f1a0054a843ce102d9ecaf218d30fea0b49f7652590e6ad22a0d8475f135bb37630fd5064f1cf5c69335e1abd241e7ad255dd28f890fa4b9be528084efe80d20c6145888dc8b706459f075951e6db4a311678973ad5338d0bdda8ea3fbf38defc4898a92320851ba343401d703a0d32a807476b98e0bf1ba80e151efe10034f22dc205418f08febe3fc60c75e055679146f89999225ccee76bdc748bbdf4dea86965481a3dde023c41ddd5b09e04ac81c7fdb8a0d8329a260d47798a76a7834468d25cfe23dd80239d3b7aec41186d3d442a011b4ae527f08fa0eee8c235bbb9fa3b3bf2e4d4bc20ca3e28b1fedf0a7221810b3d35997ba80b41987abcf5951f276c55f35346345fe3154cda05355de77fc01810a26abd4d5013ab7bc3af97c4e0a6aedc9155b54c64d00a830272d87ffa4f2877168f7edc29e8af8cf61b1b66fa2de47906c3d6be9a03c8a35e63f36d44a4eb2ad5125c103707642554a1674a396290a8de77493805aafd24930e2c952aba78a852b4c592e0c1b64f084e29f43704e4da8e591356533cef58283cebd154a044ed70e12690de7b19fdd90381f1ddcb86152d24cbc5110ceab7cb4306e36ffd8a6c56a736242746d8fc11b8003f4458e76de847861ea03f4e920400b7babaca667a27536b9bd1cfa814eab38f6e4b5b8405eeb5bdf358e565c90821cade4d16d82f1c3f1d12a491a1c8b594e3f0aec4cd0ab35b64c9645255aac27a8041f3b32319b8acc4f4b4e6148a57858739b2f5ead6137f22253a8259a4c69044c57af4fb18e797a4c058a97cd3e4328912d7fbf3b9740a758fdac6e221dbf8c549d12a5b9efcc1bd1f0ec0c71036d9e0b0628238a57b91e1bf43af0ab36915de1acf5ff638dddb9f2467c15af436567eaf62480387b6f54873b0e71fd4518dc59348071cb576dc351543cd2e14c929dbc67597bd3617670e8d59f1cbf8b5be930f9a39db0a8cd457589e3fbde32dffde7dba8b9e59e27f98866f7f7fe79be9a29f4fe007d4badf3b52cff3fb20852804943d0dbf543a05450b9e42766ccf74446b3cd5dfca41de86cacb1a9c57f4c0d2884e7182d391c3443bd80141ae5681e351466c6cec8f5fe4583fd21b0407ad1a9399e50de67d07c36d15793a89ac1359d2f01ddee3fd3aefe8b3b43b34064bbcf2588de0bb76c8d66995032d346249ec7b85278694eae8ae759476e62c001093982e44921cc7233c96a36f2f36ccf541939a2cf4436dfea9c132f6de94aebfb70d7e5772b190194b9095b093ccb255cf5c340d5cff2ad6c4b0bc562a32cd413117b37de2d60cd69214fb6d0782988fccaa509bd0bfd3777de56c12de682b0ab6fe4e35ee757a32ed921e7f0c0baabba20a41a751d199e8a72921980692c94f7699e600625a1367042c94009fd7c8002e846115153f63472bc69d3fc080ef97479ac155187d3584ece74f5819c58a93369b7b0901112e85757f18ccbc1b1ccfde1c8734571daea32fecd362455c5a610c12c720f7e00a4eb199c066394de878bcbe135f2f4e6f65ce30276b6ece3464859158b72825d1cfd32d02605b6de3a05b2ae27d35f295e03cbf97196af3f3266cb04c0c6b51e88960b05bde004a883b486661301826ce2fb41332672d6daf1d552b5377147f1893c0f90f0c6a2efcd6eab7f8956d6661d2e43553e06b99aee57517a7461963f4de0810a39604c042e466b729987a63611e533c09fb1d334a5ef971f6b4b8e6c2640c146eacaf742173091c5518e69d388e9bd242758846a021437c924003e2e1fd1061b232bcd4dfb1f28c67fc974f7f48a09ac2c52db69b4834a8178b33f0cc6fb3d7d79fdcbb34d20922037eb400d7d7df3d1f6f8daf01221cd91c06f3de81a00eb2df45aaf35ca2e9d2d57c84bda8ad8cd735e43a722a6418793dd1e841a831d8ced3a47a6a1d04467fa558cc80b84bbc6810f6ba11cdc8d6d66959d8ce9c5aad8236b271386645cb6767c217d67422930d6dab0a678692a94a3922eb21d782050141c85eab4458e643ec4978be75cef19216a4dec92210ff6e8262ecb432621295227489a9463155510dd213f801f84ca4e22ace27fc2c74128b8c236ffeb9cde12f56f19bf2f706c76523f33d8acc1846ea245f6057f6bea0c1b61d7602e345e1d316c400fb3e528f3c3dff83c87cfaf4054b739fd6aff8a7ac56c78f621d1fb0034322f9985c5d4481246e2403cb0a662cc4b9fa1aaae9c05ffc4f7ab4587fd98a64ff493698157855b531d57aa818aa7df3d536c27840063523ebff9a3a9264926e41ca92dea293a581c3a6cc7711f812ff4a88cee7d88e9214abd08c7a20a32b1d338f98f0109ce46e0a0b5c11f10f975c412973f3f81777fe6011dfcaea0d4778945c3b52b538752ca7f5a837452c992b1670afbc39273524cad61699217892f09294276adfb4dac5400004c1df145bd9a32ad97bf5789695fc684bacfbda4f83393553267de2ef4d084a5d93f03a4400538b8abaa7503eb0d4979424f6d6112addc2f1a4db1442d463adda43f17531a4f682d8c857d0f1f413d55dbe60a3cbf2b08a54b1eb6ae9e1cca6c99ea8228a2779618496fef4b85e70b0b87fd7ab4bb9bc196ee9f8db4dff50c54fb65ee4a2f15cd9efb41f6117675985997a45cb66283ac4b24d1d804ab0b81885498f41723c9cfec6c6872d03f11a7c0ca6b2c2a757f63ca334cdeef9b2fe9ced8ff004b67a13341ed81bee3ccdd53f6f431571a2a618b62362deca5d90201c72890aab104ae089449a15ff76e57f5f4f2d92ddc0cb7b038e3a6940bc147e562e87b73ab0f650c64f099ef5f29c225252f06dbde3794001f19a42e61e5a7365e706cf4e339cab8688e95b91479d97e18d0334dfc3d57da43f426ce9463edae0bf43079db5cea057713006138a6265e6e85b4303e8c019a5974f863b98bdc2c6b93670e5141066dfe0915a89d6c00c4d4f71474a5569946695902be32100f2934ce70532911fed93b498fca5bb82658175645749bc9f695bb7ad6c9d39890a47308971725595a09934d61d51c3e15c022a51d7256e1918518c19fafc623f80ebbecc6253a1ff3bcd3b6ca9167fbc3a381aaa94d576299bb7906ecf9b898d9b42b6ec6d267d36446360e06c5bd1c74688f4b513a30e94e7773ea52d70bba65cdf21d1b41e374f79f9cba8a68decbd3c083c6cb8ca249aafed58c5e0a09741b085c56586eb08c1542dbd84fa00b93467939dc0780f88aa9e6318ce117e4ef59ea4432c576d5dbe976bb5478fdc3b5635e0ee81337390e928bcd33f4b87684ae81c1584cb6b5d5c8f85efd5ad1c09b6801840b73b3124909e9df2015d6c5e0f13d573f0c29dc95939635c646fc51ea9603078752ec80bcb646327f5503838e10c0d7c43ba987ab0ded9b3fdce834d1948f0b97cc24c520e2806712f74b0402ebb1a1af1524eb754709adaa88f44248a0326ab247d1f41a5d231dedc12e02dc05e9457f7617ddfb964e8d200170128a709fe577d5620a6bcdb47d5120a9b6a332989170943f5f66c1b74af592c0b37f7ef621e129cc9b0922aee88d00157e6179bed7510a78907d975cc8f4c0ed44f913c3d75e27837b4f0f76e8e05b8dffc309add13c8c0d753c2697cdd8d10981d52f3d9e27159cd3df90ee2eeb492fb71249dbb2316f46fc58d73d4896b820701de97ec9630f581ec9e1a69137bace9e88e6e02beec096b15c53096fe999304ed14dc8c3e4ede761c6bc48fe7ef0345cd0653f79db4247bb288d5a2cb30b8913d8b9cc25c5af96b56b8503cfec1fc46d131ae91905f1486de9e45f48853def35ffd3247929b1a90fdb08ada7ea82c39d593fcbd3632da1fdd75b53ee253ae2204b3fe98e6614600886c0c522df23d2abf37286b08d42884cd44c3331d6b9d9ae4c537845985ef8ee3790474a07f471069281741c499ae10f252a4f2aa40d3732d0bf7342d8603ece7ab484c55f63750e0664881b5de91e97dcac9c74021a8534cd365a629414961f9ab799ccc10b675cca90829bf009e2e474bd645026e602747415a1d45d05eca645a0ace1bcba06c6008eb3dc3601b5a00208454ff18f41801ef2849d0d962a62bbd99b61ea04b885a8c562d6e7f309f1b0ac9b83e5e99c352f5b7f50f6883ac8b43f957fc3e8357604bc07046ac5df8c31ef7e6f86a5369de910b75ecaa1adc72e34ef00ce6d9b1c8cb2f39bccd1211bc9d21aad91193dba605df5b1880272b1ea10b52847dadea5bcac8acd2886f79209950d3b115c81717d2a9b93825ba9d8243ff9229f7bc8d4dcb13399517c7f21653ee867b11dc2f3c5a807bc3423ed5535c37809a1d7701c4cddd29fe939998ef3e84368f1a843478b5f0d25ea1566e201ffdbff11adb79c80ed47b2d170404135edd6a2fd3331bd897d61ad1d422f95e7bd3291aa03252d8456fc769942c23d1380ab79d4d3da4bbb50c4698afb34c939f843c7f4d540ff2133c6a31ac1f04207008515405d128db0a89b1f2981f1f2f796ed385a5897ab18d23f524692fb6ff4dd218ae1e29bb877d452747c88e5ce12e30d5011f28fc7286ace7b72860b1c3db278d646ccb51497dce46ed9901680126f84aa0ea6ee5648379ce4a8b70010f7f5b5e73f703769dc1b10386221fb3f67cd97afb107ef904f5148bb51ad21329c1cdb7a2881b804ef5b81546130373008846b76824f876d846e42fc2528056682b28f19f1f6fcdfc68601a4c411195d625c11444e7b5a797955d37228e8b2fb4aaeb1f035c102dba8cd290805837da6a1dc92355f510b7b29a25e0462a7bb16dae7bf871cf61e277c8732a39b8b71e1338e3d92a5913b2ffa3ea46ce7fde513dd0d736df0879da82419b4312e2bc97a91342c625f28d6472d0d35546e08c1d846b920adee92c7fa21f523d75c08034ca29dbfdd0395987e5fc4b6f184c5bafabf538b60a7eea251205ba552a659b990837ad31937e54c75f52cbf626f580b64506c2745e9f94f25ba556326b1f0ba9b1512709c6196c21a8aa944880c22575bdbf8516f6abec271b21743bffc9c7ff10521525022a39c29594ddab3eeef7d5cc9a4a2a355bb0dea9763ad31aa51ee4e286c62c778c92a62d74aae109d7128bdc2d9158dcc203276875b52d78560a7894375b216a0b42617c1c09b5421057f4c6710a1bb27f6aba52aa3e5f54c0d0310a5e674463adc787aa8de917b30cf799274be1d59868f8861d6dcc50463a53396cf14863d9aec43835ecf117452466248c21128bf02e2afc522f1626e98a7ee8e5f70d09c22989840f957c436f5954b34febb2109464fb8ad3e0ba3ed91c42a44534ba6b222d3f9ae57c688e6645139edbddb1d5ffa9bf8ab7de165c23586e9975a239a9b7af1262fa18a1f5d17de0349abb71959b4a01990e0b05be0a53bf0ec0a95341f7cb27100d0e56b2af5b43e68107a5806cdd8f97eca706445ee5dcd1c43274d20a0f498e3913d94bf9d8054ef9bb96c316f1d2fc33f6195469b2f4502d317e2fd33d2ad5deea315f624a957e24e292d0a84098d9f7de7146eae16be684baab7e1a7d198361582c86b07ebbf0f3148e800d9fd8e12263658c98cc6cf8d856d2e4d4a4061c3e73178788cccaacdf7090ee5b711c8f8a10141416ff8506f7ee83a977b3c2c034ae8d32456e97fd63bb120bef4ad1421c952ad45a6339f87b7987ead1134b4a41209a2f08bc6f6d163568664989d9da9e190bcf91b468539bb948c8037fa3368b3b2928d5f999f95e0ecf09ed4006e3e925ea1261d2ca033ce6a8c88d4d7d3c7dae76e1f6d5fd165094fb13bce385eae25ae2bc571498685aa26e5ca3a789eb1a6b6f860fdd449730441e80af7a7352dc8af1a1f2956fcec0db9aaf9167364225c5bab90310a364f5a3a594256ca814c2188daaaf443dfb03b2718765c66f6a770ddce377efe22631d3272eff4232577da6f4b8b50f6ce7dca08b3da387a36b41445fa5ea6990fed2e739365a6cc672790a066f697b2173b812b239814dfcd77ef226d6ce74d7c969ad7e8e791cb634c2139b0dae2c2c70862e94abd7b080d3f19433cced4ab865d1017ee060781d7b6c2d2dd4a0d073190e564ed22685591a22aecc0013029b12e6a78c928f3f5c4ab31c6ce52ebeb76ef397ba835f45bdfa288e0ea1ed80b44c6f0ee0864da650cf24533a90395ccae1aac9136655070a34d169a32f39344f1b9082267005b3a633e9f7f3e25ef4694d3d7eb0daeb04f227d0f92fa319b0a286d64cb1028cb0c345245a7e5c8044f6bcc922cdb64ab27d125e015f35a5daa2e3e0df1d321adacdf47a36b20bff39fbf7acfb48825f224f1d62feb558977713dee33cc8a569d9442d800550d328488e735b92b69d79a952dc4a33300aa85ce29b3f077c6797a460a9318da2f6d7651c1127c4d7c2415d0c01fa7107096025e4b7df21eceaa233a7e5110c9ae48fb567e1ee614833e8576b28644a736e582663d40085e3935cd907aba99c99f085d07e887de4092d23e03c797b9f7e562183be11e4ec77e8958ca53948b05df4ad19f2b0445db07ec81dd0d22d15fd7cb3e03085369ced3fa6ce5a0a95f4bd3d667ae7d5b50af1530a78677e877fabeae0de8a4286a9d73cfe43244c5b7f3944a408f88c2955383c66ff69941a996072b76de77773a21fe36ea07ece747f3356029ef49b85fae7a9a2fe388d4a7374e497e5f46267ba123af742f3d5402ecbdae683595ed470c54f654b0ac1876041f1efeb7a322600f5611c8d361123dbf43d87039a65b0b427ad0affefab3b7fc5260a5fc62a2458b684b638fe4b23b8228b219ff5ce7b2c5db4556fd6b12a18ec9dac4f7b422ea8a0a8c5b005cfb2513d1d8a05b780b3ac45a94e011c8a93946a43a55a3e5804bf9e4e64900fb03b1e06338bd92402cfa0bf32ebbfd301195b5c11fb4c0ae9330375da48f0fad97adc556daab9a33122cce2256c002be41c74e899559e69bd0868fd6fd30fc77b79ec679ab03ae898c749bd1b1483043be6f906a43f2a8827888b17bafd913cf4c0be1cd5dfcd7fe8c08cf499ee5ce65006cd5e6e88f66b66e4ce883b30a0240cccf8f5b288b26f7bfb81286169ebe40beda2790aa8a330ffd4350b61f5acbf5452aeba733014cd7f19bc1839c4397c376be381ea1b234b0c551ac3408b656b94367d258ee910738d5d00f822adab6f924798f496236d8b8f49914d9111caec077c7b3c9b90fbab6e3c52c8c9eee4534496efee9c4affabfe3d70bf642faf59c5c51fa53ce7af66d6ed595cdc939b36460e41726962bb8bcb084ab0259b900801a442cde83b9851ef7f4243afbfbf3af2fce90d31f53c2a5269ab437f044840590db1a20f4b4d9db245ebaed7c3ff085a2a218cf2c36e6dd6e7c28647dd2e41de4d138eb623dc2fae62efc370b6afb1b6ff42ebb6e0f8d71a2e14d26dc6af826f9bba5f422b4cb4645c81890a9b03876b22bd055f0623e9d27e09253be11ac133be095a2b3f1d96220c0337fe5e9c293ab0be75027c01ce813d1663d0fc6957aa7a7144b2e0ace998d7e69f22afc64debdfe1a7c5e8b3f9ae228ddb01a4cbcad75acbd1c6ea8bc0d395406086e52f2e3a0c00890748249b7d7ad2cb89e92ec62d2cb5505c98f4f3105e45d3b1c4ac5e80db2d84fe506bdfd6b9e3908d511db888d15f65f3ecc3f82128e1821bf94e26c61df30966b7a53a76735c8fad4fc9c0f380900c994af32dbf16c80f9899f95ed5a6c6928843410ba83fd262374b7a8a11477a7fffa402e6a688b5763dd79b5a28adecbfa17d611de8622066bff0689bf4906c39e38d04e3ff0ea31fc3ce5057036d04ecc0389ede9190c0ad23ae5768d27d269f91c0cb3ebe5cbf5db9e609b919975a0d5f663843f2c080197d70e76c90bdbb50126284fa7e6d483c12c1ee0eab6abc8a727192095544ca90d1e3e63a9c22b4a008d858959f3555da65067ad23ea7b1214ecb1d551c71bb189517bf42328fd4c1952c1916161e2e667ec35a76dd82a8df439daea358ec428c8599a1f342b75279ca45fc189957dac539ac1afb690f6d692fe0feb4819cdb80a6fa7266f13074e1e2574909b0d19e8f744cba337d1b3d791546f8a8d6908cedc4ff789dddb7c5142f5a98d2e9ba6344a8660ab6343e9fce3e3a0b11a78df6a3c9402ae3fc80c4b05d063ff312648d4c4bb72e266fc8f9b5bd0650e641269886564903f027da9da13d9285583fb1bcfe021baf21271c273538bbcb15304de3324596f5b223566b312d132c33c8abc34cdedb82717e9e28575146b97811f61bf1d44d5eb65d2985c3ec699b9a6b9e7f3612cb51bfe297df87af0dd63fa676a87917c1e9db4638148366135f71867d9a6b630a57486e9510de30965c38d9d157533a9eff7772eb52830985927a71e20e037cc64b88d1392e127317ecf1cac8f65ccedc141a3af31a4562b692e98c75764e42338756f955c87af2078d3cb792b9c0759e8a192e143fe27295d0ab53b8ec782610ffe20bb790be0293852f5b59e945be8fcd636978276338f18f140e8abed17ea2f7f59dfbf749c575ff0f63c3394af2cced993b4164b88b0294490a87b99e255101724aad245fc0b4a3d36733b3078f64bccc96b5ef95df4d3c91f9632cc309e05a27ad493b48c087a816d15b8a5ea3455c61d314fdeb2feed42dbd1fbb3250be2dbf2ab93d5b7e8819924f6e508df2ea48d437821ff997406357bdbde1edd500a81528134377b30bf0df7f11d3526a68e7725c3f5b2159099758bf20bb933b0c032df3cd2100af6c49019ec5c40152c02e348f25f7215a3bb20a94e256bc80cb036e08149e2653068357f68dba38fdfc0fe7defa70258ea19997985de0d52857666fe79831e4d64413e674b841b75a10fa695f47c9dd72cb6a6a6041ac9407b9b8d7de450db2bd061aefe9bd45788f3aba5ec2de8d3706dd4a9f7752b4f3a6d450fa74b18634abdc451c8628d822be28d4b2b13b8d1db648a9fa041e415020622f017a02b85fd080ea9babfc916de754640b7956b4343c81a766347e9a8b704963744b5eba4e56360937132e539e6da8653c065dac20ab8813f913d0cffffe1ef97cf4a430f18bf129d3eb631436d1cb0e966c0c3a62e6b349f309ae50b93a743d4f9328b383fbb956a0ae385221671f999cc8ab1ffea90165dc10ace60d1f1cbbea43607b6cef1186416e33e02082d208ba891fd0875b875b16e3d1baea073534046d0c62b4b1ac4afdbbafb3332f41bdfdfd559fc53d3d1061f3bd34f8f4f0df17dd1acb99de2c7eb1373c2731141b5c495ecbaec037a9a105ef0e63fae56d947d19cfde117573db5a13e7969c6a10a4d7e24a656524f1b37f908570a1a83168d5a1035ba567acac079b041a5de14764a5429a291f726501848eb157130ddd9989e955c28b179fdcfd8e2b3b64eeecf9a73e3903f6030d0481f7ee7086f4e7d4b85bee7e06867298bafedd5309390a1eb0005e7ff7fc4fc97e2aa7e47a65e79298c6eb92c470765d883a2a27db70430b5304d32d2f68fab116e8d9579d706e4b3924dc9343f03839fbb194b8f0e6427e870b1040fbb6a3f12a7093e8f82c1ba6cf03c355c5312d16e94ddbe736b020f087070c135e18aa116d44dc23f99896a7092caef8d1fca48553fde57c0f4aae7411991fdd493c076f0280f70ce4a45cba08ba1d8ef4d0bfb99ba2f35fb8689ce156b9f106cba8eadfa887967a373b4eed028592355e700fd3ad8b9cc522be9e350b2726bab1bcaf80dc4546ca7b67e77df379bb9e6dc50d2c6e5da733375a391376ead5acaf24e8d5594af163f8c032af5984218e806cea150b93137ed919d0562d9193df44ecc1bb5854ae9f3a8d7aed2215c41cb189a94427bfa7a9fd44915121eaa3d49c9d330f90f48befe702c038bd62a5f857a9bedacda5d2958135071523c5c4e8098697728d8b20de24ee0660f4dd9b3325b9c3125a4e70e473dc48b5e5bba6d8689722eb9659621f4fd7ceb5c67b98271616f26dd7123006fc8699c24c2346bb0ee326e27cc24a36fbc979e12d6481ca52c646ee9568791b434ea5589b3df78622bc94a516ded0f7850fe0af8366a1002e09fcfa21566d50d3bdce8db6d9b56eaf8ae4b15164fd0577664f52d6387d7895eae739cb45ff9b7c4e0dda02cb530f4eaf21e3d6d136077e885ba6e861554627fe1974121b7d5f4dcc79aa11c781c4554a80cb2aa5ad4ea17703619c53eb1c7260535dcb208e227de60e6b55afb3ef85f02204daaf5b7ba9a6b62adfcedf42a38f5d944def1005e1a9c11a28678523d56073339ded69a8dedc8a18632750417b219d265e11ee4590ae2c22edbd3d8d68032dc85347ba6e317342734283452e37535a54707c6ab8ffc200ab211d8d9a1b7c0e08163be150a95fadd9c8b7cdcd9c74b64a02368a8ff393de02ad54469793d320866e459484728eb84fa92949b1448c747de24e8e5dc08a3f67f434b0ee8bbd96c4e1ccb8df3dd07ba0e1144e945b07473317caaa928700e94f5f849d2cb1a3a2ef7eda40f25aec736355d1bc62e0cdf611d1df4349e5b6593c2855a26b778ca39b64f7bc8a823555796a183098b8c265b454ff4be656e7e13cc6bb0dd9808b81ed4f3192a12422a5a8ea6555fd4014d5b5ffee09c19173195507e1b04195884f4a408d8ac650ef4f02e90cd9049056df729e6e50ff425ee6576ee6470af99dc1d3a308bc85e603ff3b936d540694fe3575f5a04f96ae3de959186e164294103a54091a014c2f9d896831d6b0bfdc68831fa0a1622cbddb546cd6888f1a7a4f241cc2524718da8fc2ea427c0a337e8d20bb56823aa1a6a498969c35f405c5742b7fa487a71db54ce28694d2ec9b8d861d7476f5e480be9b268c1279fd6cdd9f63fd2b5f034a452c21e089d05db9a7459eda523d006d6c27719f7339d3268b87ef9b62a54448538c7312bdcd0b9b981ef86e7afee88f3798f5cd169e9e7e96434f09bbafd42991c1a7edb38ec2304c4a2f55e31a536b9c0f3355418a25e1e20cbc72b9682e957b8a62e943c43775bf0370f82f64a0fb4d8eee9366b9da561cb0a8657070e80f2130d4495925d310aef0d3cc037a21fc23dde99807aff0399c9312a97fb74dc486ea0a4e2f81f757a14ca060ee6471c33dddb65bdf11c88316e7fa4eb7fee378db5f8e02234d27b7a5d2d75a7c96d39118a34845a6f6f721067fb7a3353c0f2c5cc5dc4a25c950cb4480f05f2561b7874e1b3ab34ffc87b80c78f7934b2c23e559f3f5153920283e20693fe5d32aaea771fc9951b9a3a741daeaa4139b54def6388601ec03a34e23567ea8088b75f3eb80efff29422766d4b5517d5e5fc27a7259da530782cc1107dbcc9f177e821ef8bc7a69c666dd296763492490f450d914c4ff3fde007284c153e0611a9c18bff68c694781ec11b149772c4525a3805fa85204356f4eca4466fea5a709882be70b4d92a0beb2e108e5f3292008930f36c5663291ab4352d1a305489ff047d7d94212fa57033996dc10c6d9e0a7bc67deb0345d15ad4491a4e3df3ac1d3d0d6b63b89c93ae372e40d818815803ed1b934a8c65400b6d1bf9107a942f60263b6d0d9f0fbcc96862618d76572587e0b4f8e96398b00856eace0a9a6b3328ae27aa66d2d1f672b297c18806860779c23661dabc46897c8495a34e00a9dac3917e02862ee47cf15ff0da9944d58ad6654b84616657ffcbb7f25582f7dffca0a01f4de644c0c92a30b3abd3149ce2c2938be0f1717b4c75770712d5d6b51e66cca94565860daff408514899251743a48397d46d01abf7e92601c6c013ee1b4e611aaf5aab07d0f7ce70821685074f39967fd51ed0fb0c0a03127a04c3b35096e8ae88b80845b494b2c7349d8d09096385017ed41bcb33402c1d03de26d6079384de8e93d67c225032f7b443cf88ce04c69f8379bf0362b6b0021c51460490880ce7b7db33101299a06bc92b84dc34feaddd6677deeaba32687f4ecee2a1ce19830c54506de05c4795348b80200d0138ee48ceed2c1733516e5c4a57ee52f92c077f3a654a9d4820a7a10b162a4d6495303caed66d093d19b5c4edc9ffb4597752bc8bfc3b87dd2eebb4398c683929ececa10779aa57bf1d2407caebd88bb3f4e2265857b17a5ceee603f69f5bd91910fc29f77b042e3838342fe9d100e42d8e35fb68631c3f715cef6f5345fb94df5ec24767a9b9415b50a74e4227b54039f5dd1e67a6e1a73031d4c08ed3d20dc42687373f340d67705182ef4cdeb9195d47689e9f2e6f60b939a05232e6fb00c13f16144e6f7e99af8a261941fd552f4167d82b13444462a8fa731707d2e4dc6a631bb34556497c5d74fa0aae840b480e7c6394a29ed117660ba6fc402bc55e1fa233c2bfd154d0bc3f8b3d786b8bacaa2c01bab1528bcdd9e37414b124623dcf7058e34b98f47e6a0fbf7d3b78f16dd3ba956630524ee009a1bd7969427cf1b81cbaa72e86adb9b8674107cb16573d77f090f0fac193f810ad1b0ae5e29d5dc8d464f3c1bae92812324967dbc76af79f9aa0db871333f0fdeed03c7048aca276c931ad27759c3e4ce012554fd133b5ad6fae8064ad1e3705a26fc4cd6f6342c8db6a57e1b5d5378a0c31169648689a7a277619f802d58854a16928def8d49206ead640d394af21af77cdd8cc6f06fa4c68bbbc78b30652a6d0b149e8e68452dff6a8592309b4431f039f505edd5142438c3264dcef12689123c57dbf8379eb6492bd2e9c34e54285135f08cb53e3aad7d26f3972e5d6b6f299ab9f11f49334f6644b16b24440d1435aa87ebecba593b86ca21e9825798e2095960a7c0078bc89da674ac0431bd069333c96d6592e60c3154cae05309448dac61b70faa69c9a8a1577e403b0f50d2ab8bb3d37b2d41c912d9d609487763cf40ea5e78d2b3e00f62fe472808a5064e8f51451fbfbd810c3e8dd2bd8f3b3961acb4c088dd238b1a7c106556b8b9c1bed5e017b557df7fe36e31d7fac729b07b1172d5482112a3a155c5a71628b7dbbadb6df3ef9db9500771c743a303c0995b1bc77518e10b0136be260e83c074a403d8eeee963b0445a95ad8e8fb5b469af61d5611ff99ca489ae6691507e5156a9bf9520af7f1ec49508f0d4eb41b762d6c7de1c784b4badb47da228aea2e1d724aced23eab399399d7332d161eba4f563efb329f9781774f63d66cae79424b8ed211039bcfdce75b5686b3f9c7b7c332bb18d485c96b5bbf6bad91a91db7ab8f51379def22e5295501d7633387e0544242fc65872b4bec6aacc447aa2f3eb5d69870ae95671ed4a18bc966ad24e314b992fe17a63b56e874f2228546e9b80f7e3510336d0fbfb901d40d70d5b4b0529f8af77d3b9212c4411b0657158c0db40871a95d123f776a022370bf6fd2499e46dc1f61f5e6cfbbaa49fb7c9a7d4deda5d974e45e5fd597eecc6a3db49260a703dee85dac1c13471efa5b913914b8be3c2562fa138ad59cea5f0d502f9c34f1ed8f4b73e0fe269c63dc5b4a8e99f708341889d5f0f661d238e7b8be78fc6d78937abea11a63954cce1ca949ecc052749a725d9fce7d7c5acc2d52306647e686858f9db43456b7a6ea7c52ed17c78f6165cee8e6ac73f80c9e888a971510a65187aaab649fd875e03b1e6dc52183851a8601ce34166385193ae1213855dd984bd7d622745115b2a81e3fa74c727c4f51a8c4175f1079115d116ed98c3b9e89c34068ba0b976f116aee10357a9979d8982e47e3247172e692ec797e9858e97fb42b90cd696fe421eb777ad6eece67fd231bb9df2737335d73555a30d98fd787bbc747dfca19c62d61f62cfd0648a15a0f5187db586a1fa9af1e438d99b6b15c8dbcf36a1462d2235bfb4bff9812cfd70706032f6359e0d71e1c19d5664bd220f70d64e15a42e6049fa52471fa5dd1fff8f9fc95c6af9c438325a3885770062ef3896b6a27f3fc6301ecbf6869f155f71b4049d4da16755606490bcd65ad9828cb0b2cd78c3c3a441f812b3d45fea316c7e4dc12e2eda8fbebe29fdbb8e8955cfaee734f8ac02ab3a5653c0f198c559ad260207b594c8794953788406fa58f915ab9d7e1e5a8b405e581eebb4ab248c65fe7910a0d98744de524b6bb1d055347ce703f2c8c061765050bf8550814660b1941db78a4814cb8bb4a94f2dcd1de4b381a725820946374e6fc6c5ff376983e900897b8cd712c7dcb5dc8e371d6d2fa2226f88e157d5a7c317fa206f2ded99c88cda3def5243b66d17b10408dbb750c4de2a7c02069449f4dbc458c0d9c778ce7e4e0cd66c65e5aea5b1f23cc8bcf4385a6cd03abe44cab1310374f8f998b2bf4f0b97e9760136bf7edb47ab70903660fc943fe4439b26bca9ff94eab3feb9146fbdcb4f110fbc3d7b14496dd4f235993639efc48fec16677e4611fea6a49f4ec3e20700637ef92d0addee4b97f4e5f5bc6127ee0168478effa6855b4728c19ecf8431ea0e7c561cc2dd0673a3d37c435207e1508b4f070b1fd9d84fca5a662ee572f28546430994e6b72ec1f648328351e02cabfb521008d81c5252d4948f549fa20aa750f47f143c91412247c7f527132a9bf7c568637e9e75381222f73282a19f8086eb94ec00d219072460f5b0ff32247181b9a14e86d716f26ff7e9a88687359c90b4a40898fc14a2285225bf9aa409eb6f2d5207451ea6d031f7f1e809332f3c97aed0bba7a5dc4cab24edd2ce504225e8740dade981bc3f13936fee54d943d04ec5e4c2b154726451bdaea7d9735ed1bcaefd7b7ff1128ac8deeb567ab3b571fb4ebe28bcf2dc7326d2229e3a3ea55762a9125f5971d7648cbf4f8e17464896ec27ca516d4ddfd788f14bb701b9cf1221d327adf4cfbcc8c81ee860ebd8f2b1dbe782fd4c5c380a9d086a9659d589671dcb3fc3dbfd6f5e93189f689309733d6ea8a24437acfcf9c3ff95ab77d6123e612bc7de169d74f115774ed072899a11173ece048307e40df7286dacc87cea41f1cc7035e882d2ac7b7d52f7dce1362064767a471594207de7ccf927850949c0c5a0f35b3726700df3f06514d69e3d3d6f59a0341b1a2f201e0e1cbafd524fff0a6d179171c0ec010c7a289937839e1084fc01ef4386ddf202cfb4eaf5f47f9e20e84723243212ecdf61ca84f7169123cc8ca2059531f69d614d564ccc535d863104bafeb9403f4c201c19414eb2c4c2fe464a3a33347029b773e8cbc59a9ede1ac2e0325bea0fc1c16197f5b4e1a9f3c6d542cefda48a933b8c2ac989ed7e8025ea7ecf227d5693a527a93c3fb7508a1bd2526134a850331dcae6ab12db0e9a1426a05daf2c1ea7d84775ef5d8b81fd834998bf294fb4f228b955d9f66d90ceee35b774b0fdd60d96d3529736f5372a78debeb42672123d940eb7d5302926b4a193947eeb62018c148b37b2276bad75095300cd797694efe553ab0a01370961d6deed137fe849ff8fd4b90142f911e70b4c2a62bf104e3b6954926bf015b55d53b3d7abc3f09b5db306d2dd717ffc0a36dd95243a91082c61c91aa9a302d2014514e3e2e3a2fdc93542dd225bb5b14572b583a8835c97fc79cc29a734814649912cef6f3867431806a4e8e6150e9dc72d26cb47d4e5572e326fd7ec4a2ee223206c7b8f1dc191ac36571ca3d940c782caee97accf8ee39c16578c6920fc19ede4a628360ae206795ef4d532e382a60aa36b7b81ec37cc5bec99b6cb5fb378d24b26aaec0fbbc43c8e005c0df636a7a1de0cc6c6a9c9302d0a9a21d77fd9c2e6b3ec6c260a0ad6e63fcdfd326bdffd73e05f830da68857a305d4c7489e962d47417708c82119312a93225b294abc88124fc9807a2e8abdd93a24201dde40964075e1f5de7374b3b4d980175346f4a8e6d3b9a9d8fd297356515ac3bfef0885e41b64eb01ccb2a137e5514162aa92bd937aa4a50ef6714cd7b9f8636ac9adf1b56aade22e1d4935a0c82484060ce6b9e49ac523777361b072600a1053c66bbdb824d820c449d82c847abf48cf9f4af8d0886d27f421c1f82bfac1d31b03cebc76461720062b1f525c3ca6c4c5e3b1e2b4782fced0867eb2995b8f76f07d8bc78792aa241de24f27c3ec1c4f24a91a4fa2fc27caa5b07a8379badc28bf1fc2de63be90019ff2fff4854796d45c36a19ed125e37d91b1a81e0fd0d1a1f340ee8a209479962db1c59a65f85a219bad4935c708904c10f6276cb2cf79730563b218793d2e77c147203ed25fee4d94902cb1a7a611db1eda48a7a0c95580aba59e0f7918349a1d370dbe829ff6eba1893267c4dd929d2ce48c02b04e73313ffd52576972c79bea53a56b8d5608052970dd80472db4ca640e10191fc691619109b8c83899aef11ac55d222b0f0e048fef063760c994bae3819c82c536242068d964aeec7ba66569609ee84f9f437b6864e3b6e31b73bf52c8e2970ff2e065050353d7465998b27ccf7c8f698d34559191e31bb5a1cf7cbd34fd03ea23ca7e9cb858f3dd8ff1e25fa010fb40e6d93180e496fbf58cd09c72b6d6b12d8ebfac814e28ee3557e4e9f892a05a62110cb207396b871eef648c84dc29f66bfe491194c4ef29eb330aa4405d89678d5880304bf154288da52095f2310cc69d4d94f13582423f9f97c424a844d327501b2ff5671f28d0b15b054aff18eb845286838ef460d5d0a32d958e4f449f2c9402e5c8e22d9262f769d15b1a99cac3954741d332fa9b91210a88ce73b9e1fe2fe78be01247e8bc6e501804532bb9ed16eefd7a989cd309137cfaedfdf3353536445e20c1344660bb3c56ffb60917575a6ca5cf658a23589c1f4353ce1c9d6bcc585555f038487e6c0eecb57e2150c53eb51c42fe8c6ccfee12b99c3ef269f1f81ba4a185820ea2b110b7965ed9531c62e20924196ed8eaadcfd4fe8bc9ca5c1dfc0fff9ac73d0ba1d16fa7ddb343a179b3cfddde3892bd5a0db18fc0cfcd974ca15880537847beed4471d20f62863407f19b0c3c1c054f142b2611e054b93a88f7d88d5924cf934da49d74881e6000d812a7bda416c29860a53470262d2fd3defbaa84051a64fc47fac71da8205b46cd932ba1c43343edf1f9ece934b9f568ed6cef5d803f2cf8e1046589d08855cdb9fa9e0fa5d53b24bf984cabdcfb157bcea3dfd8313d5251b3487d796aa341676ad9169192d8c9028de5100c1faf0000207d63eb97940749f3e8ef0fe4c2a0bfbd47a502fcd086daa97c180b50fa7a4d2f82cd9658ab81eaf17375934cecd2c77a73768cf548cc30353aadcc8b208b6bc883bb034eb999b2cdd2b2ae45e7883fe0097c43826dd68b198f6f841cac2ea35e70c28b3e5cc867cef9b8d390d2d9571c1a33f04f92fe487983f63e70762f95334fd1a691ea3d908b492601af4a406006249e2658ea70954272307b7625e98018bfc535dc218688dc98832c9aae446f6fd1ef39efb9082501675a885ddd0ed09334560c6ae8403a6a2ab7a9063e1fb3aa7b003e66e7fa399983a79cee2a3972f468a2449b79d034f8e67ecbf907270a5a121ff527bada2b552d26896e5e3e06554c91bad89385dbb93c6b133da704f0a7075e04f4f56a8df047c6ae737181a870dc96343a68e8e58474e7baa8395ce46277cec6c29a258df88891688e67ae212fca34dbd7a244770818474bcd3dba93b94ff3bc4fc9b5d251b6046d269bfde654e699094f49244934b3a9c86007b53368d2815886a65fc046bbbab9d1909b379cb920f5cb4a1feda3264aa6c7e249b6dfc83230476f715888259c5918bd3dcb85e887a0a3f20bad18405c2039e40834d3e479e365a7a6e1173e8627c645664e3390749670e8d90c284aa3a316890cbf72db44c169e9c66a2bc62fea17378f0e6f555918c8d3c01fd5a26db4331b33a80574db261b77b8e96c3fc032aaeea216ed33d38f5ae211258556f4915f316f4c2f371397d3aabe4b5947798af77d2d0708ccb79a137932a03aa29a661cbd148d957336baf2f25d526055444555ab894d0ef4a5268149869196a0134c40e9dbbb8ca948c5494ee1664d57fb7aa3ae44c7e09ef6b4df88eb7e29a819e32a407dc592071e4c03297abaab924741154437c51c07d48ba846ae76932b1decf08c7296a0b8b674678832e889c20f6bc6364585b660f5248cbab0688f0677e58c12f65c181105842448b69f8d594180436d846d21ba9ce893136ea70a1787cd244f9ac299ffdd330533bd7c9e524e6a0345b94ec02c77a3b52bc49f47bbe77b39e68aa9e06789f77682edae47f797edbb170971eba32f6e503292c97154716cbdf2c0661022c6a9c5e92b5187f13f160eee69235228864239d1be741d056e5f40dfd1b3f25003e4828b1c8f073f4600a7a19446ba650dcb0f67140ab0a65031e6688a175dd565e985b05338d901c81179f2157f3ad3c71b0447b713e800023710daeba07d92892c3903036bd1b743a1716d16de147de9de9e9fd3bf1071c6666c34c0313488138d3a2ddc9b71ba32e50ff84e973489d8c0c339763181bf96d3d41705c8cc16a93c219faf21ac15166619e021753eb1cfeaf60823ec93ac39b68a087c9974307b6149da1ab3dd1f244599841e2cc4ecfddbe067862aa50be713ef6b07d941f700ef3086dd1006972ca2443892c8a99899f79be8c0f6a23b5c595e469a192336f9c0ddd24775031691f472ba2976f2a41f4f62834fed49a1f97d48967592ce3859eff71e70b9c3b3efebeb4bafbb48d53b46a8599803f7f318adc0d2803c7468c897d1e7272924c83a8816eefbbeb636937c30099da852275fe76eec63a723fc1e6d2fc084010da59b89dd45bda6b7a239b085427b2bfe06952047344e19723b2f7f1386dc131ca435a2c480d069645dff7a8978198283fde939b288462744fe530ffe51c0f524dce0e050fc9c022fdc008081955c2a2695066536d252d37e1071c5a608a13e5e240336c6030735ea8a1feaac34ac234e4384b1f3e2e769dd1d9ebf532cb4b5a24155cbd8c26b33902eea6835e699da83a20f6c538a92212f08bcd0a68cc953a0379911650458006495d8c32fe54565807619162d9590726e6ddc06bcdb888e89eb531e265d1e807d08b66bf8eb460de31f15b793003aeb67caf7a6493f4e878835d9a9f6ccd2f84660261b1951c71a6bb45326d5f5fe3b6cf3a22faf3fe7d3460bd5e783fff2f5c0b68bcc3ad1b896c6f0b7f56b50ba958c56f3070aca23e45f2fd3be251ae494521be234238809d068670724fe5f444a6b119167f61f1c3ce5b38978d2314be9d2d8d54e9e7f3435b75b108c7eb31d50b9db95d151a34b364f64e820191fe3999ca32bbc7b4cf6e5ba814c4d52dbb7990b91a5fc9aea1f41e7b537c5e7d49070098f543c999ebfa820ce1d029666df26503606a3b1404c9d1fb40d1077449463c9d23cce3a7fad6bb596422c1abe8898057f162e146236b02050966bb259ead89c3a401977aa48797dcc8f4f78f3caf79e79544c1471c906f71fcff46ba3092133d574c7dd9b23dd1f8947818432f8ca3ec0fd210a667dcbf22decbca395bd4ff1a72a2577c5ac1c956aece03ba38e9a70506fb88320d90a331af8c5ac3dc99c9ccb861142bed5383554f3c7794fd86f74a3e7b4f9dc3d2f4f17af4fa17f4ad00af15690d0efed6f8cc50519d8bab7cb945031970688dc83ab819e16af31f82f7ace336dfe9606974ccd5d9096be7f1db51c2aab643a1ef74fc3dc3475db0d7ba1483159cba48b6e76fd3c8f98bb1c7e2c3899f493d56742756146473fcfd61f2e52f838a312d8148a66dadd5b157451331744257faadd0a934e6c1d60cb70206d2744d6ad607deb7f3ed64c30ec729bbaca6df6d1443298fbcefaa0a566865802a3fad275275613b10e2812273e8b2cf025c2d629e757e7d4591e8e6b40fe321aa81374b4a52d88ea50f131922242c74030f5496c50de8c7687ac63e371ec3340ed21078bb4fb44058b2bd41b8080f55ef2e3ad8041882da794e8d047994bac14cbd0821bbf239f1ed8caf63192fe147bd7285e7117ef1a72838cd1af46781a96b013cada5eea799b022ac07ccd5c807e22033cd18db867620c7d2e815892f14c74e7d8d7e5b96d6fbf6ac724a23362090b641927bd4014e92231c2206ec6ca5c714ca13f7db4ba08bd8ae62241444ff7a92adc549336e200e4b3e0faa7038d4303d423e05b404b31d9470410a5f6b6cb71c1d4101389855abb27af88077020bd852b767f087eb4a698948c4c64f23fbcda498f4eac0f1f8726e33512e00336097f40ba2f40d7d6fd2740f10f26f2ae5f4aae29350e797dcbf3e08a72afd3ebb1c7a3fcc4a2156f14b102d3448a69901349851c89c3086521ccdaf1f0c749317ef6dfa9c6328699bb6a9f964d800b5ce8b9f561a223fd99b1f0c5f53d8943d33dda9214774a39f9fb85a42b332351838446260bf2ece1c2ba1f6ee77f1fc1e7616430a15fea6a9a7a4d70303e3a830d88c28dae670e9548939329412d39989e221a34e47df7b54184ac97a42c7104b6bd8fc514fc709b40f3fbd46083dce2ec70011767207a59b65892be1fcdcb71cbf1bbf71128af57d35aed205bfd49bc49e995e7409b5066b3196d593bd5ec9dc3b40b68efc82e3cb3209f1ba882158efc509db71f7cad9dc8d499e5e4d8a2cfd0dfdc65f593fd032b1cc1f615a111940f6d5aefb961addd11dfce5c6773a742412da1b8281e89ac53c0f38293a8aedcef59fcce46e7e51b620efc28da2471bf89b06bdb451f31ac5b7c20f2c5b29b544bf8a1465a18fad14fbe0f029f4ace9f9bd7a7881025721968d339b1d55e0af6f33f0c895ce09180b93678abe2364393ea970915c3a91c1b649d63918513f99e209fc7a0d9966028cf2cca1437e5d833235ca1fcd2ef2b9618119bb72c95ff3732ca6b9cdcdfd53952269b6d4cdaa003a3625829287cdb967dcd85017c968d908853cb540f73545738a6216ea3a0d055a0fb1cdb0d82d147301297d10a8ca81d18a32be61127aea43935ac1ff50a1c2ac88e3cd33ae07d2bbb048be2f854401d628e1f7c819b2de6c0c2fca13e91bdef06ec6c5730c22b57c157ca0d97191e9725274d961f9646f19ed81216912647a5ee67e3a736825f2025cdb567fbcc288fc22b75070348dcc75b4f40592297d034cb0093a457c12a79f7319fc29fd0ef6ee5a2cee0ad64e3b33b7ab6dab57d814046149f1a039d4957ce68959944a463a0879ac97e7aa070ad8d8bade749bbb3941de63a0419842bbff678e821b97250a6f2c08c65cf3b59cab16d7a1712ee7869df44ab6ba60b1930146151980772cd4d59af04ba602dc2b978c6f4bd15a226b5f9bffc2456ad3ef15e8b8f9ca25acb0d87ff9ec2c84356d899e3781327af1ac43423189697bb6186b20455784273cb3120f0cdf19c960e60b68a0736555f9f5186989fe641e1430df44df8f62884550d2060a164fb935940995a82e37a2bda4fbcc151badd09dc41bc93d71ac568e417195bd46ba59ccfa9a9593bad1fb843d07aaa161008e64a2acb4ddedc2587500595c0e9d747ca72c100197adba3f336855cfe9702a5838edebd41ccbf57839c0e3515c3a3a429b7b9b469d20d7de2eaf1ec498b5b36eb89f01ca60a349c8d8acaddebd344d1bcd1871ca76270d7d0d87b8cf522a13bc76bc852039b587e37f4568d7b6cb6d9ec2abaf79c563eebb96cb8407158f424340b88c9ce25c9ee012195d8796d444421aee67c1acd4f2997699d4721c208b8a3d78abd67474a34080dc6d24be5c2d9c69e2cdbfe075d9a26a6ba2e3342084415616e1767e3effebbe97936b5412e53feed25dd375f648189704d0eef4d0fb17adc922eb0ffd5fe9530fd3e3d7b8c0b58e73fec27b7beeaadc13bba2bf60522b6977f11002b7ab5ce2072a87628726d7e0f8009f529d8b3e4f5c8bee74da6f367bfec1cf8c64cfcca7fa06b93021bd622c248d4322e73bac2262b3717e6b5849a932f3771c0490e99c4ebdfde37bea9bdcc0648b0a0ccabf9c15dc69974a0469c60a7774ef165bf431124937d712adb2280ad3930f4cc242b151bafd325fdccb88b8f6c0f016baf79447280e4f17026b843492eda77f175fea1c3fe90b4a2166196886a8732559614bf8107b544d13a1df03318b1c67fc134beabd925eac458a70515e94eecd195e0ebb329adc30bd029a00d84faac97615918507ab89880950fc917537b86f1c088452a6df72923d7c6de11e2d2dd62ed2321d65ef5449aba65e87cfe47a9204f93fbd0013d89ea993b39427ece46fb3e535bd53cd4e9fd8bbc4b1430913b641196b8c4c584dc4400bf74e50ba898aee00ed4b6732f2531551031882bcdf2d93cf8bf5f369bd1fabe621b980c4ae51317447a04e587c551b69ce5133b77089cbb6c2ed0c45e7484e1bfed38bfe7d03888360fb03d3542f508c6e3f8679643a3c7badbed91fba9c572a6bdc384d330a81b9d21730f40ca7b5cc545c23f6ebf2bf71a8a73867e4384c20e14f9b94a2c9227a1f9d9516f922554bbfb0cbf8ce1acd1b5fc0bb221916cf7b621f639b3a34c1d3a6bf4687d7db8be477a1ae30edb45b0874ce066671ec2e2f6db2caa9e0c172f9eb8f4b6802f42b1d6cb7281897d19daede99a2a05670f44ef090dac29c1cf829e20f3b5cbd2e4a49ee8542505183dfb0f3741956d2a7ef7871da638a1573b543bab1c8aa20e27ed954b183389519b0b24ed27f3f3b2b869ac55821d61bc67e85a2346636e7d9c9f39db3b9ca7ad3cda49cfe532fe2ab660380efd24ca1ff99db4db8f31e10e03f205e8173c741ea6db024b41a013d04e74d387c1376b3efd450cc2cc8829a9f401e675fb1521bca2c4384f06b4da4f2a20fbff94cc8c49e66e27b36a53579f80519633857ce0cbedc81cbdd9045325b108703b7d858664bcac4dee023746376f8d4344a3a512ae7df5996972eaa649844f0d7faf7fac24e34991b126e0d1b26458493a5ac0d0a76667a580ce91f1b7509ff6e53bb27129ab42b706c384f0f08760cf05d2c63b82d8b875280efd5ca601a75a19d7b1a21025aa3868db5bd08cb39cb670cf6e436af8b49007d1c59eb38071c6970680ec407885243eb322ec5dde90a5a63cf9e21035c52c3a52d46498b754c07e03edcb97137b9c28e4f92648d3f231737d34860f81e708c2ae67fce121004c357c69f81648ee4473bc2d69a68ccb331c598d178e66aab87cb53905d3d0488c68040327293abd58815686e6cc1019ecddf42c2bbcfcf642acee1885d88e84df65a1543cd8266e837b651a6ebfba21dcc3ab1b5960ac46fed9820430dd4be5dd51d8f3940668e5c24d18fc7bc2db8fcba066233de71db3428c0705d94292e78baee3da077c3c41360ad2120638cf27adccd5da88a22e98132120ded6a780ec8ddc012392211cf34769e8911404044411cf15ec689f1fffb433b723fba1c69937e8c4fbfbddd7299189a2b9eb5fbb5fb3bb7773e899d92bc443541e7e935c5deb3c63dfd047552c1af98c5122e6029b4ea67eb3843b14c2a75128c6f7149c4cec4575e1617816f1ff04e5e09366714b410292fafbe3c8de4a683a83fb7ef920389831b091ef4564c936c39cd7e4b2852d13695712453dc863f86e7212b7d93c74a7b4e22f4b879bbbf1216a9adf1dc3c584b8eb6d76e7ab9064545b32adcf23eb14ee7094842d72c89efae7dc9355c58e66db46ef6012dc5d98d664fef2c7a3db02f55349ae62d0c3dfc4e696ba8cee77b712ad62402997bf44fbac9c24ef272ae1cacc98b089a458218258f2480a637896b305020d6e2cd3e5be9d108aaf7a6e588a53c6a3440b0f3e88e0711f646029b0d51b46f97d87bf6320990b938591fe7074950d3b213e318537100b745ef08893181ef9e5c2cc507ad9aa1236f14938fd329359a702eece297b678dde5f257f5c17ecbd79f6438d36e3cd1521adb212ec2fe23cc5e752dc0cac95200e388cfa2410c298fa9a8953eb41316c94068f7501a52ee287c8e54b5e050c532bf50b20544f5c9e63df8224f7528273db4842a860458a845d64adcfd7690a795db52ff3dacf6ca887172698db4d2987ef0358b905fe9d3f13c7b9f0b3b643295ae5c08747d39e6c724fc717b49d2b3d57a541be2d6ae4239f0164d556266bae41066ce9d2b9b01b31851dcac0e94c8bdc0ba8519ff8c7ab72d67402ee5c865ae6cede807fc1aaa2143a8e9f47370b5e5157f6ecd1321fcd57d16d888e539be807220ab75ae38c8b0f3a6757d9fa4d95eed19a77e924cc15874807ca6a8204bda0ca3a48fba73cc7edfa6ae1820b89ba6c9d7d0c89b2208ad0772684a92ee17879171041cdc55b932c31aa1f8971de86cb0ab4d3e82a1272493b29d78bdae2ef1f8ed75e5e89b116aeb31b791f32a822eb1026ad487322d8dbb47eefde056fdb182135b65a72b880851c958d4eb79b6da2188606b5b96de7ca44026fc471e924415866ccf3960cee91fba817c7eaa330a29678eee8cc10f3e3d7075b08c881adebd4ea5ec41847a7a035faaeab8bf9d1db5f4f05fc98dd57dd884500077db6f13b4c8fea845be1a17fcba0cc36d9a37683adc80a1f7fd24b201e4ecb3f306d1d6b72945dcc92f5ea622e25440d84e33af598622177de45ba14bb77bd416992e1bb1e2a7b2b165d1ed2bf4790eedff82e1cae3fb4171ca8643f075f4c550a6453267a926b29204d64e7ff8d77a06d11329b1ae59a3a9966f93c9e788c45a0dd01a0706ad0766b82b64eb4fb58a89aa34a3778da4c47a59f241f3d4efcddcc958f4f0ffe763c68498d97f4d4f191ac166796ee562073e84e80ae0dacc94f5ae08b53accbd6335b68bbd3b496fc6c8f97111926df847c53643cfd0181ce4a52a6bf8824f04854774f1e90465d81950dc5ca722790c97fa367716298dca8a364a3c8cc944637e80f71606e13fb18273c8f70e2f2ae5604cda89437f8980f08916fb12ec51e18d8a1213c0e8839678e582ae35c29bbe75be6a6e9b58938721bd70a595600b5aee29b568b2ed9eb600a95b6a0b1f90f3d2bee47b71ee12fc9095e6768810d916c79d0e51b0a2f9789e5abc4bf3ffb3c39030ecd7382808610027f89c7121e6eae9577c7d2bd64eb3448065a26e06b13cabfe8b4814ce128e6a11f76c989693fbf5619278058d427822d81ecd89e12c921479c9367a0851a22ed8492e0dff9c3ddf02006985c61d82f66a09122f512432aac717e4f228202d507df8eccbaebd06a38b7f27348f8852f46616be0ff323f961601dc321402f63d0d4c2678eb2063b98b52fae2978bfc934f184b99fca71ea17f6493ca84b3fa44a1af7ade9e3ab0fa4185538b0a7a38ccef91fc505ef45926325e1e4ed41028ee89325aa1748448f68e10a34379a1ecdcd1d05a32ec8391e89bf950ed367b46d2aee0171e880cc69b2b8c4e6e8bde0c080017914e437603f816a147387d8591f3804e2a9c8e1234170f3a0ad67be3d79ae1266dc0be2b440392ab3e82afef19a2eef01db3b0d063a6a0082d9fc1ebc0eca86c99aacebf99685878752612f3d4ad651264e2b221d831a560ee0f2ff09417add166834d0b62aa1d8c4f3fed17dbd21483aeed444aaa083c61fc69d87101afe0b6467a609cac60b3165da2f616b5b1afb9f9d5b964d0be8f76569fb8f5ba41eea8822d06df9139c5062fadb5759fd23463af9e6ebd1e65dbf9c10092b1e7432815fd0e0fc8a4b5ec8810cddbd721faccb3e61839e6b261560a51ab4f40c90e4059e00fc9a8b5100335ace230b35fe63e5ac487040ddb0295e185d1167b3118ff6a4c0f69339cc91dea17ec3d5b632e452cb94255941e98818dafec8ab408b044820c3594bea83a88f171cccfa4e81a14bdaba5bedd1ea2772f28d5552ec211af366ddf173b1cafdb957753b2aaa84762ebd79eefe11631be51ab5c2b070e304d4114287a6a5eb4cd3de46c4aed8029a2e78f0064b237c539281480e11acf1843e7a6215ae27f0fc74839b050e4e0e591b48ca0dcc50025b29d899ffa601be0708a682c8c576111fa493be4ef62d86bb8b804cf35db5229b5bba5b39a4cb01707fbd5528dbf7a97021e82fd554ffa82088daa285a7bc03b05f72a31ffb5b143d033f30863a50ea060ffa3e54ae2974b16a8f9e070dca7470650f5a194b5daa49fabd7cbd9da19ac223107872bbd75b247f279cff4959107a7e73ba60ee948873ca7885d8967f2a2f71a291b473ae1de52d346b66adfbbaa9903a68e8ec738e882a1eb119ef2fe38510bcba637aba525baf761c23c42eeb9e896b7a82acaddb30ea8fc76004ed666b99b9819c68eb1f9314acac105107cda5142837342b34269280a0061b357ac1f8a70cfd117f467f340be99eae05d91336629a91266e0e5f738fd6f333f64b66083fefe01e2ed40950c4ee15762ca93b0e135dc44ba2d2c6f54c16b8eb6dcbf878c2232827f1d45021e084d543ef0adcb66db28d91f02d8f8029a4d2977edc160cab6bbba8c7511bd699e4ae7dbaca76d254dae3e16549faf7e09da018f1318b28ba294c5e39f54a35e736f5420729b34269c0b9da2a86f72a909765a291e7f5fd207d3d32fbbaab7880d1a21768337dc85dcdd16e13fa1ce087942d4397a11b3e3766fe53fb4b818a1aebe426b37baa8e5cd4b35da76ce8a6ce89cab3f33737f8c90157d553b37ff814e028b61382ec611516f46081757b45254c82b91fe8e33579ae4a49d5f489d348968cdff3f12a4f154d2f2a416394e5bc682775a308cd1dce2780e945fd6b5585cdd55b1ffdc8d18eff0efde600331734c70599f50e3d677638f33946f1405269e79550b651045f78313c866558a1bf25c96937ddfe1b36500be36a4f18c77ebafbbd2c0d80b085b39e27f028348af637213270e311d0dcaf1c5e4eedf536cddcaddfe65de7cbcccad8d5c4f31d0987c12be86ada73f0fe6e433c9b2884ab84a8fb387abe80f93076b1f60b4838b1ad035e85466754bc125c2b6584d99c331cd831db68b5d11e84256b280d87ad330055e464785eace9cbda8bd4b86b8a453a377c19ffa8fd354ce368b193fa13f472c106b0a982b845356dff064d49b3cf9b0efe6ba45bad9be3d90c0df452cb3f3555e18ada9869e4567255eb5cd44d49a4d7d86c2f5801224a1116c61c98994104cf29450f4da94cd31e54715d35c2b25ead3fe80cfc238585ae71dad21de7cafea27954fecfe56b166775b04c58becd5e9c548222636562cb0e2f42aa718e04bc4caeaa4c203233eb2189655849196aab978b2ae9141b9bb053f4773db0c39463a89ce7212f9c3185a77e814e8c656a47ad58c7c70f212eb9c2c3df8ce5fc476b141dc36df8cdf7f3b1331446657c3c5570dccfedf28cced1b51712d6129912e36d0f8ea5bf7cf59f34206ce4e5a5308648a7d70b728bc0d8e34e03bf77cf39bb06008282fc4f871a7558b2158cec54b70128844498a627124f8d862d7c7e3a0641a2b00255f701594b674b6cedc62e46d9eb3b3a1dcf6bd4845688823117ef784b9e6a4f73b0a62ed25e5ae0644e09cbd7004e4836fbf65a9617ba5031dbdfa06e1ba002282c9fd3b4e61b73dbf0dc2938c4faf20a8c8d4d095f6f2b35f6fc9efbf0241f429516f01edc0d7102dfc3528850f33d03f4ec19c75c895e8069b695ee5fc3eaef6c3f859782c928b76d91e2198654df31d5da10ee98089f24fbb4f33e3d6bcc16ed73ac97424c0a42eeead208bd9bbc2f0d0299f3c22baab199dcd5ea2dfe1d2b3d24e5defc26daec7d2070a82b5adfb6cea23b44897dd72352647780ed4e1f116c6a86f842c7f6f0bf7257fd564a9b1cc78e90d2b897efc2f583e0f484e04e53eadc67dc0c9a5383d78c9952378d9a670bab7fd9d21ee1cc2b6cd2a46570b30311a60fe8995b84f4b3390c88cdc85ea48319495535b0afa77bb72a3ec7096d7555f51ad07ace5ea66cd782090bd0f9eb0808a2a6d1133e56d8d8ba3cb6b3ac707a7b854fc871aefa15112d413f95714715b1ee09c9385841c9510d7dc41be4dfa2ce861fe264811470aa4867d4470299e64a49098e75fc477533a466314c31ee3345e593da8dd6735e6da731b858d2ef82e5e380879c7e71a85b517d1a95ab4ba645eb5f911fbe956a58b598d714c784c8e6b77c66b3e6635973637e05005236add65b433a17d0749daf7f30e847ba87008ceef1d868c7af9048edecdb624aa157503be106a49bf10d63285c3e041be25d3b480d83f4212d223b21eb81a04bdcb07332e8647cc65ba546cceede65f0526928f20960117f8fc3d1855e796f5d0ca7cb4fda22b1ddb65dc2de156fe00980b6b285b4ef14f684abc2e53cdab14b772da0a14f98efefbbee31ee18f3a2084aea99811b5fb90a59a25b78f141f1b8e4937ea5d142776fbd0011f4b86268db8f51cc0b73e3d64dfe9a61bbc7b985b877d099fc2f3e83b523c82ce335bc5a1d2be7653c5d74a9b638ac4b803414a33bd80deea2c21486cd4fe3d97731f2419f0362b45017cab080518c7153231425c538a4e138650428e526fe395e928a340079a5457c7a9650c1e17d3dded69f0febd1da1b151b168544c2f818351cb274d3652b8c691dca480e97517ab702b2eba43f9dfb9cbf94b317249429197a1d457c8985bf80fdce5e97db99113829d1cdeff7af53968ef3d07ec5c48a4be4b9ebec3fa434f20e0e5dfcdbce0ed2266593438a5e25d07e8ab09fc51f2d87bba27ac38d58d5a0b9c3f11e3f774ed25519289646644ad1d1a984ed9b660ee953765d0881b6a3c7e3a4a4542c13c1b959f9bd588544feb196dc7265df2b9e6705dd5475183ef9dd1a0aa785c29201978ba72077b7b5a756c410380c65f59d363b0bfd5509fc41bc74d734931508a2de4700c3370344706ddfc51578ac6e473f46d8c414ab8f6ce5294332bbf376a1f1a864e508d42854f72c45956c5ce59a7b5f2335f94a5b81b31e88e45a75b48b3893fbb39766190208ac9391a1873a3b8aea2f280af3b7e1a3ecbeb4a2cd732e0182250ac4079b997b8ded40d3b8986d23752a11b302c810eb7a67b4de2b4a6c1d933394065c19d7c9d217a224c16aa8c30461d57fb8dfcadee536d7ac57f8d23a39da28c327bf9ac9b68d0a50f597f32d429e0f00b08bd37ee2d09accf958443ab955d1b0d5b9452c25d6c81de38f2b60d8d8913833319b80822e52d24002db13c7d74747d780ab230f9232ca664bc964d05421818298779c1b84c48dbd7ef4eaaaf664122b64fd1518a51a9b78bfb4bd83f6887bcba258ac8c07d0cafaf3169edf5c04085dccd3976598d18193e6c1035508951aec40973175b1ffe0c323d4b8a2fbbf9e9e1cea90aceda7122770796f384084aca641795efee7e5699ae9a4b75dfde90cdbc9e629ec491d2f23400992c19aa920c9a5ab599174b3485b0830474d975560674c3a44a9395c5fe27456b0634ee823f8616462da1f286be3972cc57e7e6f58fbbe7f47f113531d40f8fd585472f1c8451cc9e921019d6bd76fbe093a449843bb54ed028d519ca14dad8b2994d63a858676473b1bb6aadaca2282f904f5f57f55c07a09f0cb9666ab4755e0ded07023932beb1c3782b398eb9dd7e5ee6af4ad2cb3603970c96fe5ba025b0a21185bfaba593c897c74c312c2ff2e7e438604d4cd5a341ad037c072bcb60065d57603b6ad2a11bfb01b9d6176884aa29a7db4c5141c9e66b4f239efdbf3c66152542caef9beb104eadf3d89d1de3b745b18dea7b74896ccc6c4988ebfd72dd50cda13bee6f1f2dfc4a133c9c50a4d0de6d8a200d930dffb8bd8266a618d21030a789c83d727a3ef72b95e5a5faadb43572a60eb4ef141f1d947bccec1d832f6a1d1310864344f3defdfe59145d56a55176755fa4e9195fd926acd869120576bdd22e6be132c7f3dd05752347cb9eb3f3e8cb304e8d8e93fc2ff47356a60afa890e369549ced857f95965b18f5a5f4ee9b721bbd85ac20b07460a132044fb05773f424b24eefc356fccd5ab17ebd7ebef7597962ac4b03ba7d2c4fd3b3beeba07fe17f7956efd370d03fb5a68440d12f9c9a7fc52b0a88242f87df46119650303b468e19f571c2b616afa70eabe8b2cfdd15392a5a1494e8164ffcbd3e175af42dd87474c30301a258a0716e01a661d845dab308224201b3d008009b7d4885f07c971301b686ae86f6b5b314c4fd4ffe098544ad8f294e756f66c8054d6c91bb997d826ac72dcdd76b25987d178607901da94dcb607e58d467e8a76831851ba4249b22a7d3a490fd9c12aa02899ab6e22d79e1923aa1a531ae2b46a78b87ed737dab0835d8aa9296ca80562308e3720060a316c6c4c75d81a947b6e55cefbe6ceccbb07cbaedf458a472729d6f65c66c2f8fca0b1031347000091d408a82615e29ed45b231566695fa06ede8135af2c61808a8261f0704d666c4300557c127b05939804d61ddcb92de4120152436fac08c437059e89a890bc721b1d6523b58f9d2487e6180869df721517935b3a65fb58672513f4001088e98a86fac4f77a13dab530099102081bb172ab292247cf8902d9150531c5352bf8d0268646c1e7faf3e9894e8a767b010636ce103ab41769c171e96e32f05f1b932d719e30fb75f822c72d0adda131701843a88d271d6acaeb9970b1c15f486928666224772fde3a0f3eee407bf5422d6baf4e0dc0a016d7799d42e8a96712cc45b487d19db31c7766aa017cb8ddf6c7efd558a5dfed771e4c4f6f966323fafa892be951f6586b776b86250d57b5a337dc3449cca1a93c7c44d85bb6f058b4b15cb48b01bcdbc84b6f59e6b044874f1c996ce5319d1583c5ae7e3eb9ca3244ee48a008435e4e3e1395d5073580971bedeafb1399a6b33b96b3ba08883677c268021eac5b133d8839a61ecbd96e1174500f6fc38d461fa0f725b4d530cd4aeee92410224ae5d7a5224e47dd8e60ebd40cbbf72ebc49fcb50704811e894f1d90d836715712ca5b3126829e0bd8614e74196bff0fbb9c33de4b4545fa20f81b438ec3ff8fcdf31159cb26b902b7b5000d2a8d0421590335f311cf40e543286477b3bfb393f85b75902bdd7ad3f2301c84f091a129b6614defaf087c82d9b79f7c80448aebdfdb87a2a885c569196cf8e546a612180e396a33918f14544e36129dfd42104d56ae8fc038369d9d9e4af686b66746fc736c8478880462526e13b9fbdb921b6c14a6a99241e3e304cd7b6e9c69f4487993ea5412ba60dd2ac2d40a5892cc66c6966d5d1b17be02a713374c6a32d57392a7b5acfff28a86327e72ed28c6a09957014f4e7b4b66d4be0234fd871fefbe250b3a8d953106ae9161b6521ecfc1657bde3afe0f82660eb0181798bb9ebe104c7c324037d5d8efa8e1d4199296a8e7e84152ac509667511856229cbca4a3bc10715616723096a57e3149309b91abfcf8cc9ba28062f0d862af46926425661fc612ef6841147dc3e282dd76db2f7d6cd4f6d1a56ed89fcd9916b97bfa9430776efbfc112f6fda0572d7d6677705d1d7a951fa2f24d02b2e86ba73af1fb0751cc418319187b6275f54e2bb470c856c0c0ba9be7da6bf6cd6a56d2779b2039d20dbc70efe4d9c19a5ee36f7f7c5e0cd2f07c11e44c808ed66879aac7f07ebb4d32c16836fa72a2939872f25d2904361e5b961e5158ea790d6d82dcabf4cd1d4fbe935f23c6e563139c3832d0010c83f5d4783f0f23c5ae56d44991d08efbbdd6844bbb1127cd42511875cc1d57308f5993be7f6d27f81d5d3072b708b05639489828eb20e5095981fb1666f497e1555b5d1606dc58c29815727f1ee44b73a54c5ea6d75849be80597cd9c005e1022d905a9462c0d199f9d891c30c9fe73443009f7d484c3e4b403cfae6e9c37883e602a2a6f9eddf8e97e02f94b6061469b5997e5617903ec53257846dc27c55a615cee8807b01f20c6c40b59248055153d7797de768ba5d5ef2306a51c38750a4d1d3557c9bec0f17c401f1a70e16b9e3a8a30796bd2c9904e6990247eaee4f01bcc0cff2421683b69391abefac03e4c852974fc960f1f090b7771fb04cfd7724da1458ba745abc1c3a46c83806f2dc813ae19222ea219711aa0093517022c5b65917dabc6d0a6d2d7c7f63c3df207846ad51e0c5ad5fa44bc2b83e6b22266e020b1a9cc9ef9cb5c5d61ec996f376490416c9e23c9ec6973d8ee2dde486f72db6687ca51504e850445bd2afde2270c61e0996c61b92197ba998662c97171a5a50b1520aa0f3862605af8089a7035bd513fa23feef45cec2e301c695078e7d537695b6baf94665575c3b3ced827bfdaa92e97a4d910d4874642bdffbed914172bc2ee1470f6b5b9be58b140dd08da5a4fc484febcbdf1b7466102424a748073c5e7d73f199db862d3cd8e91b9e7262c3a351d2a1b9b8ef04192c526a141a93fd7240646f6ff49ff7d9323633aff65f98dd27caad406dbb89f5691bbe6d0cb3b607cf319b6c9cf86687bdea3154dadb6b57ce1dc37ae32920e962b4ab3341fb52c968bef594e1bbc6278961339d15b4fea8bcd266b9418536c5d7a48ba72775fba18de13aaa7b3694563329fd2520ecf3fc0a6d9baa3029ad3097abfc64183a5c7c5917e952c67ea6d226d63b10614f97b730acc8562681b82f59e506c6618ee23931bb33b98ca5accb17f61d337173a86c777aa3aaa4a9df26ea5bb2db7b8fccba6e4a94864d1819c4d5b066b351490881e5181b1652aae577f0910e7db6ed567aae219685ed3549cc54642c3c00dcb7a45709d6d53adf77c9b80553162866dbdfbe80ef5c5453b2ddd3b9fe617cbfa4fb4666ad767666f9d3d056fae8ca78d681f19e4ab6e1978fce714f7d29c1059f1445d3a7867633d287fb40c53b2fbb0eba4748e05ed7df4e6a1f7ba534a27e085b02112106c582e19ed2461c573bdd082724cb1ed92bd8aa157d382901d3983933acd74f4b4d7192ff37c22c87a9c5e2dcbdbd94934be194a106b5a7ae218b62007840d02e2e5bf052dab02df680a77743ecbe1d78487f1dd15a989ad3907a69e3b72e513a1018314be86c1484d5c3169137a8bf89b01f3c7e961616a15d59a4392c6255fa4b6425f1e4f58f2750e9c8d788e435b39c0e2c230e610d9aadb180cdb39ff70f1420884a2a3748bd605ca629f7d33c1f58c0021d35a374cd9cd9e114455707092202272a61bf7d1a836a1510962461afa65ec4e16a7ea2ec66e37374ffe446d02c2cc98fb2d78a8f54ec78721c5c2f7c0d5d32c324bd9a0de04c189eea49214aaad32d3448e14d08047b883baabff3ba1e9856f762ad5510013884a0932e74eb65f6ad97487f29336f725e4c0454fe901ae23fb3ba3b6664fac35c26c49db38b75e21c6f8bf763784d861c28a8b6e50c66a67eea13289627d2f3695d6607fe7f49fe3e85d31899505109ecb2606341be4ec2a09233f25b9c571303350f76519a73b818a44644afb1792bb2fd7cba8d2c6db2132385837a5b0d47c443035d4d89fffb245f4a30ef0de849d3c6edc6d7a87b4236ee4754dd803164df1c38760364e590d9209e44c8d19c5683a2fd6351fbd76df194509e6a269517ad6ed2ac1a1bdfcd26b26674f34956df267f1db59668fc87f7fdd806c860423f560730c7a47604bc7711fb8e378ef3e25232e16b40b9eddfb25ea2fc227bae3953317e275dd6062832bdf90d137f4cf9a71825b8cec074064b46502d676d6877893e4ffd32cf51d82ea1987641097a73f08b5639724ffd4f2f78aa0695e8ad3000dd489729589082b3f4a910cceedba088c86ab13fd8fc1c9d880171f026a21aed610366cbd68b705d6ccdf9372c8daaf9b62b0fa20a7e4bdd199ea4a507e6f3f1ffcef28bd4480315fc91bf232e86f49df6c753909fb623880e3479f40a28f04458e509cc11b09857b93b08a2c11e8fe5118bbfaee93236e419b3aa397115aae1e9d178426dc880ae28fd1304f194226d33570631e05d7eb6d5f3a8a9e15ff877f36c19689a20630c2fe53ecbf77193765618152f54037daf3fd8080b01865186b7327398cce9b851150b0f6f52f3534730ff90ba0fcc8dab4cd8b1503b3ff921865acb114018422443160e495c65b26231b5681d450b6b48de11587e975a949ef4476a6f0a7783e4dc34ae4b0857e47fcac53a7ac71b55858c6ff0dd1c57a2c6a54effcac3481905e857ae6063680c3f3e8ab9c608622bbd5bccd3ac3abb2af37226529f736841cf5044f536ccf61877cf6ee4d47c4247d40a66ab6e83609a3e3ea6d440ddb87b1fccf7131940de354b695d55b3048bd2993834ac5146f15629c578828866046e5b9d76d6df0a58af84e8b38c24c428b9cf6967fcb1983c55ea61d72174da6ecc0077b225d022ea483e2f79bdcb182f217d5e30c420289163de0452e58ff510b2250aa144e20405c55e5988a2832812a51ddc9de089433bb53049c9f0868bcc162e5e5880d4f3adc45ae0bda787da2400443fbb0fc6bf2c86a7965fe599841262be306a9f97f257e59920b688a2d14637d98662f9d4702f4c66a3ad00253775d2a9e1b79fe119fbda9956c5b68d4231c8964f027178248408d059b3357f3596d3deab0febd142d61ce0faf29fc28069a6d305fb940b7e983418e7d0c4889fdf2d1d756be561ba27bd1dcf466bb3e33edc6afafcf221d5818b59767c26e86e463f4b275d2924702f0e97ef85a07fdee9b72864b81aa29c62eac32cbef527526bbd21b4b0ac047319e7b3ca92b7c1a583b7d7fc42e26c71b7413a5c0789bf942ab8d10627db619d75cb1f17ee8f1de90e1e28d0aa4e80cb4da1e79af5a7ed12ec07000ec9a3ff21db4cca867517fe4b8071a82532f13f0223c45589cad249a9d1e428f7597c2b5b1d12ca9d677946db6b98db55dcab4acb39b29a40317e0e99ef382c14c6bac199b8728991a00b3cfed5bbe1709a48330040ac45b18a2629d681467723403803fb7d441b77291fe9e2aaaba6197590caa7853a84c4a425dace412267f1e6e9d80c157ba1fd09a486954feffe4d0db57eca304d6cc46817ddd94b9cd9f815f75f804bbdf57b5298339575574b4cabaa394859ed4473ed43b7a170e4d2e7d7eb748ad35d821f6a8f3348dec09d2f9043917d7abf5c68af0cdd51034a11b7a74913b9f3168cef0c6024f5bfbfdc798320c53b90f1bbf80d5457d9c1613d8de7610fe19e882aed89656675ad676b6c3c306e07c5777019db367aafe12f1042b65f5f9bdd34e7f363bd85d5440c84c4e085149c44e5c568ddd05cb2c1bacdfaeb7d10ee23a9a73d4cd5ef407f5b680ebf121c38c82f1b18490b703f132334891488c47c7f7bd75ec15434bce7c1c6375d6eac81b41d9e1cfef92e0faeb1212149feb8c4376b2c484d03c30a298adf0d57cdd5284bb5344fe83096a788e54d226362c41572073c48218ea7cb6e76cc79c92a7b86969a34e7ae2cdd19fd1570b7e7ffd1d99b4ab5d398ad32a24d344da62107c275fde178645c010fa38969c27093147335904165c128d7419674452f8d4e9ab77c877b05b2b3f8a7a31efa10ec8cdcf0b1aaaa61c3eeef8e187192fdce518858a9876a649668e9483f6c7ca85946cebdaf180883efbb54e9524cac859c3a18b2a543546a420f7070e87d54ab31b190daffccf48a9bc3b839ebf97eb13c6f058130f77702ae8e461517d0f0aafdd3979f8a0011925077fb72c28f5ad97f0c0de19afc0eb98e79c0daa1ac1d8daecf18fd54d5035373836742bf11a37e907d59e66c9e651967943067209aa3c5fd8a6eadaedeea7c7ada1c209fd21acad1f94bc86c3a79864ced1e2977489c10d33902d30abf57d475e8e8acbfda62dec59c88bc70b74f0a5c6e87adf1f879b6bec20549364a33e807b12ec2877a7436b2db37b841741c86cbada068db6970e583d832a195dd7804dd654494a5f10712bf9482e16060b55876d3b8a92cfa9710ff75899c1e1a1125d397b75d1da7d359e9900afa2793977c140e530e83fcb3d6638fe78e0020012be1c8449bb51076b0f5c88df4d1324a81dea690a244ecc9f59f4d7e4029849961832f9bbc687057083560bb2169c07b17463bdc02e681b0e994aa7865bdb76e958bf2a7dd1a16bb7d1ce3497e0772768a475ffd2278c92c83dc2faa951437555b0b74a4d60e92d2656cc6e794281f560167bb42df208dfc0386b6e04f25e93121d7200f2956cf141a4f836ba88cf66339f164bdbcefc79a49efa034a3deb69787b0f6ccdd9fe8296b3cc67a48fb73f041ce3ee46ca7646cca8cd39f1fb6b1867e10afdae2041d1515d867f815a9fdc822bb89ac2d539f70c4e7d6e0cef2d37b7913a59ca45daa374f941e26d0a45f2662d528fdc3e8bec3e502711c0523f744345b7ce9b66ed9845e8bc04d2e6b1f818e8b76d8975aa6171f16c567e5027eb9f38a400970a84bd28c04d18618f7ffa893a73b58c852196dbed9dba18e13b8182d63b1a5b96e82fc77790be3390f29d6d37728bcd01fe2d520657c2a4dc4f8c224938349891f8fa518e000488917c32b05ffb53e9ce7df7fe01677f749044be04e34b61740600f0bbc96b149174d86418eaa6ad162a0a07515a90a0840734b4c2aa9bfc1a3b60fe597c184abcb52c8b7dda773348c2a980862051c7cfdb541777a963685e465e2414cb0d9ad4a434b85a5e246abec6400c1b8f29ee8fc378e8785c3fe7a42f2708d19ed986fe915fc72fbd9185a74aa406970afa793288d98468290f1095382b6189a009f2ed6e4cfec3b9c1a5913a3d6f621b9d18f4256cfe70f27d589b18e98240cf89f8beb43f393d7221555873b29ae7c10ae2577abece642e76c930693d487d14b9eb229076283623b3a93ef7d3b81a1f7c08810881ac97abccb40b2010bd5f797cf5deb1e848824ed6cffc0527c428be208b5204aa302ebd6d5702f376faae87e34d9689f0b3b5d9bdb4d5bb266fe044df9c1457028a65721f53118c55a19d1b673165eba749ac2db17cd9db4c2ecdf970982c225b3011cfe0cd6502aee531ad47feceaf231f0692a6a5d0bd4a015899db5c9bacdc3e8269f2fb4518eaa68937cca30e211b7aa67df210fc5b63b5422b7f946f62cef5394c9b00ab049aeae27a648695e6bfa35543aea4844d080b73eef3ae9bb773c0a6f876d53e968ad5089c394553b4518bb2cb72a270cd8b5480b21f3bee15bef80fd7909166167c3f4471ef0dd73cb28ac1ae2443970af9a0b4ea8c2078eb21ea6bdc2dbc238e59efe3a7ccf0cf0c32c447424d0ec4a87869da04ed42c89988d44fb968a24e9336374059066926bd9df39d28ee1067bbb3b35c9ab63ce3109cf9b8b10b8184d44b497a6eb04bfdbaff920f6990702b2922b0bfdd793fd23e6b9bcbd9277f287d1a7015dd363db6c7536d5477276145e1009ed43565a9aeda50d30d515c47050af4a002c984f30c91e76230a4549d3fad61a6d5fb6a537e4e5bb41c8d698112210c3fd25d86899a79ef2852d7a404dd645fd8861da74d6b9b604d66128e060a00829cfe7058c77c762cf7a781f93785d176bca457ffa2dfaface6b2b6ddc0c88e345952ead9978bc0ba897b3b5dff004073ed2021e675056d851b4a02ee456f11afc7af0203f975f688a9a33d34ef5c02e035f00eb9f6ade762b16ff36cb9b60c94adb586fbf47f0557789f954b7f35670e333eac73c80694ebf1967aa9aca69d134bde56880ad5ffe5559bca8eeb747900b85811f65aa2727e1aefe7827afc079bd325a068a5fa463afc729fa77266e263eba53447b8b1112fb2584a70bea83868e5f2cf0d7d51e10dcf07324267e2612f4483b4d0d0e4cdcb04a6e98874542c44019fb29a6b439e2789f49df1a8321fd6dbb468c1bc5deff631ab2a62aaca3cb0b902d850b2034d9d9dd666a139eb605f8de24c4f9aff7058d61fa604353868ea95329ca94c3e2a94dfde23e92bb0d19a9ca254a16bcb52a34727b0f01badb4799adc6d61babcef4a632a5f2fc704f416a9106dcac8f8e3c38728493fb01ccba07a540d2951f5487efcb1267a5d8e0d5ca9852708698ef9113822e6debda1ba6ca09c62a08ae2d8b6d42e22382dec9dbf11c19ace92d03e99e6dc1cef66b95d257ec36b777fcc88233b26c4622a96beea727ba9b0012afd8254b282612dad23354d2d73c50f394e4564a5e6a6a3c05d183593e31a991a80d577ead4071b9a372457a5bc36dff46d492b0ec72c8dfd386bb6b8242fa23e09fabec3aa1bd2d053456e2c5c257aafe648ec941ba9bac7c5f72f4dcb488eab5bef63582828bf3e21e77a32de60abaf40e05c427f75b75507b233c91d6fae5c32f536d2e1b31f9937c287691eda2029243a764bd8a3d4a57b0913ff60169e282febe555408bf3d32c2f6087d912f229ce046618264f8a27ba2864ce60f7d0a4c2896ae851cba5c3aa38bfbeb9e98d8195308834c2c0a0204247feba30784bc7735d2246d99de94ddcabb5a55da7acd52c1cd36f7070c10c1373fb80187efa971af3b98e8e8766666615c0a21883a2e7e5deffc5ac72319551e2c22ac0fba95e8392f16a1b7e75013da70737aa73252e18b6f4b1e631cdefd45ebc27bef407133293d02f7e27359e3c6d69c943f1b9cc1990c3a70372fdda1b750567335aab8ef35ac2032d46d57a17df36440a3693ac752cbbb09d13f137d79a3c60e73b71ffc0eb4b1b32bbba081b729129eff1ad3d35df0bfef7d23cf8b6c9dcd84c2ca126daf7c81fdf335a29c93777e440998511662fffaf9e2177373fe36e44e71f3bb54cd7ece3c6e75263e24cd893d9a29af61b1644953511618bc2277b3e5033e7a373da31173144b306d4cf6cc933ead36d45a14070db8a2e9cf6ab30d38c9a566b4be267267a16f43a6c04dcfdb85d1c86deb691d00c2d44691c43671ba86a4f4829803b9e8c8b5653306a097e2b130f808011eaf857ce13747f2c0ae69ad2b67e5d054dcac00d2b0c443a19cda62629674284a50839f1c0c3bf64b9fee29f4e0cbd2f95d46f55583c0549203b6218dee8553e6e704575834c043f0ded28b65fcb1990c935fc50f53e92e6be3eb3a38dcf5e990feae5ba65a1e8d1e6e6b756392462186aa2e03add08a7582b1a6ce72ff4eaa0a782e984641899dcf6681b519dc5e07a3b281afc636ee12e9c835e54404c5fa0f8c737728e3c72f4daca4bfa5e25df8dfaee8516cba4816b9611cb5d21db8a47085dad46ab7e2e8c28d6644e9a79f11970a22991b9083630ec387b5bf1feb451e804c1ecb806a53fa9917efc67e776def52f9dbdc1b2191d3ae7baa2eb274cb754110763677e00bbe60f59b38d0d9556f2b70e60a9bc89ac01a0a854be0cb76f78d79e6167213a867961553313b69883a64aad38a0efb9066bb4dabb4c8ce47040b682498389f7cda22cb0bbaeffcc9ae7b730cbb97989422fd3c472af509b6af912c4d9b8d1594ca6ffb82bee0c3976798170b9f3ee64f105b321ee849c5a9bb23d187465cd07552308cc472d37dd8710583191e7fef572b9e7be37e423db5ba102efe777b6c9b0d09865569da21cdb2d8e8a413acd8d3fa9d794abc39776a56669006d9443ecd369d68fe906473f2f41199ffec56330b49b655655da27a39d5e0b883966d127d76f13a2335923dd22c2f2cd4c6da253b68c8f7eca49826c6ea7b55751f03d46f8b7312b15dd65275d54a8ba31b4e407be1597d7e58a85cb27d162ef06a91ac6635f9f01350b24bca95c00d2a3e6afddf361959f922935e68c99ffc8bad1213306a724fc5ff4052082bdb2f08a8b36f3a689cb600c57b634483f23c9fa7823a6e9b9d8a51c6ded69c3c67acdb01f5f8927e82154311aa7ddd2dc7235d50b9a744fee5c556fc329e77c8d085c7a86f2944f54727bdef0b4c84cf492f482e9880e7bfb902c1f375cb5c8dfce8773fbae196e930e59d61c5e56891d026e73be8561e4feacc2c5138971bd0de3c05d727d0ab5af81679f1dc20673d44c7dcbb7099ae1cab36126d3aeb06d75822ab6eb30ed1cc3c7ab864be8cbde51b01a2b0b2ca2a31f065da6f4b189cb70a13fedc31d6c0f7d65c0901eeff1222bf6226cdd9dcadf78dfb019011de56e0752195c8c9e8c7db85d938e23789006fc8fbb4b6e0b52e6d60d8f0c3fece6e9f3965303fe1e43f0280865f039f761c73bdf978e6fb7ccf239ef39f0f76957f16c66eb4ad93a5fab03a35038261d4215f6ea284b15ffee9ee0c7dfe1b261e680df6693f58767101a5da5ce07c9bba49d432148d6565f81a3ba7240288157cc3677044f63d66817682709f6e765d6b06ef21c0c22d0f5bcd74d24a12fbe42551d5d6b0e84b4a36f896c532f1913c66cefa68ac49ad783bb0cca67c157fd8d122cb3792ff9bfc4cb2497b83240b31a628756056a4ca125825954e31178dc11d95f488757733fae094a8e9da8c63a0ec0582313fd08f710ff108e1ffb2e44f313b943824562ed7baca6c1d4ac58707c50bce43a4f01541ff4844f51992768c148614cb6332acafd488a7380d07bc0fbcf11807e787b0826821d898404b901585066f8d65035e027662146f301ad85e35ac145dfce99ced9306d696f8d2d10e83af0bcd7175639754fb333e4f5faa483d17af76f8d10a0ca063f91e7cc0c30e9cf85e9d86abc1b99454aff9b4b7d7d7c183b4a7985194282fcdffbc3eb7b1e1e9f606df2f22a806ae0d3b6af219c75b832805462c5d62764cda2e2f610354ce51534d35a5c26d52009795a4eb70fb2841fa1f2d8c24c503ff33255ea1a35a0c5a0829759d42b03cf8568a7a1a7b05e5e1ed1c30fe1d0f12ce9d4142720643d56fe5f4a0acb9ebeff65e32f6cff12165d50f1ac9ca35121dac9b0883bcba1b7807dd4b0b9333c2b50337a2d846bef030905022eb35640016cc8ed0df5aa77fb9710b09d262c1bb4bdef3cd0a2aca05a1d6fcf9f10e447644bbdee4d461df0c348c7d06b29d90b0073715096105d417b9e19a474aafd4c70bfe96d9d17ff535cd8ceafc1418fd91da3e8bbb515728284bf418cfc93e336ca7a3213c321fa3e59625be6490e2819435977423f516ea36f2dab9b3ad248e425a16588982c66589e95002fe965945b63ff38129d57e9f3a5cded041d28cb50e33ae80c2188df4c62c87c8d476e8b157885a6be3061db133d2e5f926e355a2c530de75fdc8f1d4097f54829a84a97d01de3ba1c80870cafeb9aae022b26f71050a64ac845b8aeb7dafa2f108080d7f1ca4de64c2fc4cf0de9aa92cc5fe1b7f42ec8b529ca2dda4494d509a1d3597777fb88dcc5cd13fa69d8687f4949824ef41345c4adc5df982790dadd13d3fa4ad241fb907446220a45ef131d7d7f79c283580ea6eaded71aeb3abd97843efeb008a328c76a57cc3a26951ec479ea5e574b592694da2ac05ac1334752da6c010406be6bef01b41b7c38bec0a153d75250a147843bbf05732ef0ff7b227032502e0f756070586d4708934241c0fb32301eece210100750a0c8638329b57aa97dcbf6aadd0970ab794b7fcd47f8a6071ccf1c7f25eca436e1e6f22fea7a5dfcf398c57821f4afdab2f95d46e1d9d2de2451f7182e68e33443ab2cddf11704557271d17577f2089e3fb208632f4b38e42529fc2e686ba62b70c410738373e2c8927c5135fe247463653b096c55189fc2b86353f058f8ed8a3003a2efcd47ef5d2f154fbd006ddce7ec2490922f07472ed840fbd8eaf7e1c3918d40649badd22a7be6f9f115205950f5508ad3d2a39c837f94d3b3f10bf705d02d8b327516cf2bd8870e527c865461535a2ad0eee08d38765927f4696987c2ce20fdb156a62254323ee6779979f49bbd8929b3d412cf8dca0bad5f8f5e1ea77473abccf22c4621e73778d4ca836d24d93ae6375eecbe378d9311410ec90177d5161b57e6dea86179c7352ecf5c2191a5d22dec11197ec0405c5156d2a7b064db671c87ad241c9442efc602a2bccefba439dedb1002fe388d91336a714f6a80fbdcf71d625692c995754f225b7765dc1a1870e30b3e75ef11e46e8c90d34fe16147d4eb87024ef5f7b6e5204bdd2fa425184b1df31a88e78311716aadddcb2273ce2f371ccb00eff050cc0e5b589a4477b395003e35037b182a402b69199cb1c4f3f3d2a1ce89fe944a9f4de68282c51d94fe4f5461915d6f3e4e63c6302722237382d70a602328bbdae9c4e1d10209585cad98f1bf0160ef90439040807010ee635096934d75fb2d5302fbc2838b7a6b82232628405e7baa9d9919f2ad1a567f267c02ed7a197cde2513ef46aeaffd4ebc3735db5435db1f3dafd04848eac9b4ce54cdf730eba71a7c6397637b2bc60b594d39e2001c18d7481645f49ea4bd09626e88eecfdde9b3af0b673e26c6a4d492112b58a1b260f282a7d458b1c5092ee4cec97f9a86fce0bbf61b684cacc94bff24c9cd36e351abc2f45084785d5b9eb975c678e169876f1d0bc1f8876bcd6bc53521bb50338d47e94ea6c9307ddf8abf541130b8d14cbe46e0a9b3deff4a808f1af14e6b8611fb842d2f03ec88d22ffec689c3430d4c59e4cec05ea7a6f1d4cde3af28b64a058e2d73a17b767e3ba6784b7af3fc62ad10bf68725d8149496d92eda6486a37de8710c76b297127eb396023ec1a45d7e8cd015c8bde4d12229b2119750da5be8065914541d3971ab23fa36141c5f0acc5f78db71ef7faedd9c4ec41ad2ade400f4aef9aef63e437399f71a25367588d1fc728164b7b50ceaa9ef499994eeb7816663a832d3f5f1f5cb8a2d08333ed42c4b16d01c80f2adaddbb310fc365f5c62661389d5702cb9a02d3928b8eb8add06b312957c7c077a937984e03224d64a8c2a27ade7d23c127c97452cec661740b8777cb7979ede57e80c80bd2f0e042b17decfd8608d12619c076330274750a8dd107af572d1fa387e15a6653120f2b7a0aab9d20a267afe8653c19ae19f24eeaacdf3661353bfcdc42072fcbd345e57519071d8f399ff58c42210d479b57011bfa1fb2e16888ea9e32146ab2b91071577ba9b459067a231ccb78e1c9b2a4afd56a4caf846b49e8bbff7011615a50bf1c5e1dad14284843704393f794dfcb2801a4ede0bdea0b6eefd831b1e5aa05990349446202ce0b859757ba4ec5736991ea2e994b5cfa5a290fb44273bd0eeeeeec2e314a15cdf82749734e00c5da3cd4fdec74e770030dc98f6e9002721350af004f5f0abed5dea7e657fe17623eb8370bd5a2484282c28c551ae187b6ce60c4bd026acdf218f20bb15733684e2237c6b7877318af356b02d80274877ef37e516241979d14ecbaf8cc6c75c91f49a2afba9f5e9965ad265d0e15790a7ec24b48cac70841bfa31be779f4c4d9055619e3ea8ecb3bafdb94237477b0b21fd69a7ed47ee17b2549fe71bce14631c959fdc4c03d8a7619e3e9a27f3e899333529caa27f917a4e2e8aa9217ab9f0e0319d77afd42a1229fc64a2042424444e92893e1846395fee932b440906605f8de44ac4a5c41cc3c55dc410b5a646cdb60db0dbfa3d8294e510705acd3fcd3f3e66b9fbc98916dd7cb00971689f4f71fa07de3437b44459e0dee4b288badbb48fed3d38469b0d7f5817d5bf561dfa3c61439ea846e17dd4350e35641272e1b28f5b5179facf91a157a90fb0295fc16cf15eeeeffcd2b418f09a6fbfbfad16a300de7e85384d28892c4e5a22948b2bc43a171b4f5591bd8b9ead1d27ee9232c984cfe07babb7a475e7bc829f37e0febf83a01ea0413a0d72ee75d3c647d12e4fe87265e32cf1a17d7e850807ddac3f9744ced1759de6b8c044e8e79bae23a9abc57e6f9ded6049071ac6b3404ccd3e1be3372ff6444486aa22d613c0f072503e24ddd51aa1b784a91596d825b1162ff9ca2a06ffb7b3248710ae672fb83aaef404bf3fd1143a95ede968ae5db52b3dae0dcd3f837ca2575d4a7ac8d07e591df6c350f96b5b675e21fac5a15a3d8df682dd8fd8b0adabd5ccd0bd9050cd1e551098103423c4569cb904041b22e15c2e34420118cc4efd89a053924f5e4588d565430f24a129061cf9193e633cefe16ad1a3b1459a3498cf0afcb5f6d9733e5c13e15f4e1f3e8d4bcb56a3e8157f3d7b9d3336d6713f4d0f65c5a21f667dd8dc773b20182361f7c8c4b59c9fc745bbc19a093e8cfdb56ac5a2dc0079bab2b5450b5c28ed08ddccbc0b423d22778164bfd10a82d7a3f516f190de71859fe1f6c8bf20d3ab98cc4f34e006de1add20e460e2fae510a43326e7dc47f7f5959490203418ade604c7d178778e404c10628b215492fafed557c226f741af33e37da8dbe996daa5d00e14b435d4c3e508dbe0e06bbddbbb9300c25c809ff02bf3f0d143392f0fe9e5deb4e5a929fbdd33800e3c5ac2afb3e062e1d17f1e4e3d5e6219cd5d90f80033c3b4967a59805afb3ce944d3fa44a3d18f8ac7bcf0a081d5c5f0bc20aa6cbd060af07a71bedb8dcb976dd4303896cbd688adeaab76c45e7c9ffe12c8a1438b04576925921f092aeb2167bc8ebc53d973bfff9c922db43f4d5cfd938e869165a55024d4c9a4ce477c00710f3103dc5d45702a278a51b6c7fbd7640d3174f921ee53c22faa9b213a237d0f4bf9ca5ed4605513422992651726e17aff5384eb47b8ac4b8d587a4cefb8e62b702b751c41acacc910a57a515820b8be72ee4e68fe360cc6ea29442a4b27e9036ed97f59d6a2c2ede56ee30d4442618746a83381d22bc8f18433cef2f1aaf4ac37ebe5a23f76ae4c99c7c79bfe2cb4e7e0ae88cc547b9d13e3b1df4158dd0d9261c6f97cb6888bcac68176247acbfe58774f3cd05bdc68cb7bebb734f67c4dca790e41cd371e50c5a4a91de870aee4a09742ca506954b5f27e332d61d05aeaa0b5bb5d28fdcd029f2728bf336e00dcf5c39694619c73b7a698fcd80143c1d514fc2631a112e9ce8f165cc2440ee551d8e1add719bf2bcb537d8304baff70aaf494902a2a4fe61e96e78da382eb0166dea162cc4697817252fba61bc225fedf8f3ae69e470964ece22502595f8ce04d502a4d14595d246ebd6368ff10a0ade6ea956d2218577c1043520f74fc586170a543f9aae5a26ea304df35900e81e31506e0f6bb31c74aebb0579cdf5b209f1fef296f7433e3118625a4fdc8dcfb93ef97659aa1739c9db1a9b3b7b0868389542f047c94561ddacf53ad8a9fe67afb0cc89adaf21f2b35606292df56c389d8c4ca3cfb607ff372c00fc0333e90043d357462ce9f1dd9fd6cf9751e332cba4ae3f86f9f08d118223e81db30580d3ff3438649e0a8a740604e4c32f21b849c17f21a12cec4179335d4d309437bfd0ad76e471cd9e38e52537527957f537ee2724166a4e0ac4e7b620769f4383817069c58ee609131a5b962d1625529ac835acbc44661948fd82c61a8747f24b1559c15b52f87c1121fdcdb91a0d66ff4ab0678e9da4de5bcf28f1053235c6f60600d7fe43763ded182b01a4becfdd87f468fb6965bc6ed985d3014711fb5cf6468bc12f3d151cd024d409c7244041b2a74fc1b7860f576927355a0b99605b39e5f199c7bcd1fbace2999c6cb7c25f81dcce4437089833e766056d2b62c5e2ec47abf1015450cbfeb940abfacfbe846a93753c4cb8d7ff0b0abce4f01ecffb506c201629ebd28a47f5372a8e4b12b6122801c2e441bb0dfa7f282574e46d3a61e53dec7ffba2d77a645c5819020e051a2793c23a2d035a034d355e6f98b1be1ed270b9a6426e5c00c7db6d267a3088fb44fd337c6cc33c584b2780b26f93228857ddcea237a0c8550e94b88099788ad2c51aed5ff1ebaaf2b9de7c1e82efa6656d0a4ad205997891b185897e789f0b4f87abfe2b82ab9212ffe1fcd5192a140e2f3a83ba6e04578ab6d4a1655811d143edefc603c3d3123c595fc84f04d57fd6a3b5bb30c3006fa6f0da2d0fa2e8f1bbeca0a5f7e72446685db38596b2a721954170c1414fc2000936d5615afb2c683d61b5d4bceba5ec96b58caa820dd6c4f05890b510598a76e66d3aeea2a4fcdf278b359b4034ee238ccc2b6b52219925ded98badf982b669d4ede6a578d0ffd936ca13e697d635433f26ffcc66fb39aca3b01051fff52ad64490ea2ef93fc24ead3b9b3c32f0b44cb10263bf024a35e5d66e5d4eccfa58cdfa848ef7091b9b252b2ea2ea00973713dee0273833d173bbbbc54e92f92b4ef79b6f25b95ac6e2b3fd52091203db75d7b870f6ef0e2048f8a2274b23713c8b5771bcc9c50e9008d8d15609362c11010039a100790a23bff0930fc3bf3087d4e336f5b2371a64af259eb801cf1bca4f55abca5fd051c314aa091b0de9303405f78625cd40d42697a02b3a3f032f22404daa746657396ec1b3776976929717eb12c3bf2dea00fbf11b3da5db6169dc2596ebd64a797e1e21f28d1dc4f31a107ab2827ca01c87082c2ea415fc7ac544a2b7a8f84c0afef9af089e173d8d50650653fa0f71e403c2a6921e77dc968f336a331e8afcc2d7bfcb9c122eb0ba85246e47a1da95797552ba8f530a7dfd1f1221ed81a4dc8c0c6417711eccf2f985767d54ce38fdd22688707b13a952d1c4ecb2d41167b79f899ccc5157255230d5c6f9281941c24051e117a47b399869a5a886e7a4a24364eda000e19d380d614718c0b39371bad13debb705793962f6148ad250e1415a67949a9b4d5e8a7fd1e50f0d0758dbdfae39d81a0548141cb8e4d48caad1833450b5db1ef2452c8bd8bac9fdbf70a1ca891d65f368e3b149b865a5b30fb36d940ff8c06a9a8065915170564ea10a38c36ad8e619f001cccf9026e6f4bede3b497457e079c5418be7181faa20ed300f0b9b63cd597f235c00420b862e0bf04bba9d707a47aa7eed3dd1f5bcc41031f7775b12ba21d13961e11a6ff0ba95a437068a044fc8e37728ce392ebb21df0002675803e9fa26b9b8ccfe2d4c8d142503b7399b652a42c4b6a7862ac9f37cfe45c5afc5f3d4de9891242c4862987e80a1e512151009268d5c53b17be518aebc88539cc5e78a193271249434963575c5c306b9393c4b42a71167afe607e2c4a24d36733490c59a4260ebbab8b6993e6ca55acdcba8ff6330b03d912f220a4074c111330626ecd08f6bb5f86ee5a92933cbe97cb838ebb7f742d6d6dfe91a619d9fcf4892112695a155a58fc7d066606a5341871aac941efaa2be7f1f84e5af5bfa467ff9f7c397a96b5f734adb20f50bd52c83d77868eef7614d30cbf089dff89a3376b566780bf43cc44cfe671d9524ff2e88c25e73d4bf465524b70a5e6547974b2da74ee9aa7db62f08f4cfa0d32a67ae62c84c28a3c53f14cca71f982e31d3aa1f7bba50422a2056e590b63c3f14401ba7833cebc2bbe47c1e60b4569c105f5c26dc33bf42753244376730052a172aac1c2d033f27c34a61a5d8f3fd694f6e89da5b12071a266442f38814fff3ad017eff68caa4103b0ba58d1fcf2107c1b090174a4a216c7c1db0d7eb3df35fabbe3cec09ccce220b67534afd027f2b50e96a8803ad460a3b35b451e1828d511ce8649b61022a02312f27e98460b9fb5e4aa630910f3d2ba4b027611b31d0faa1c639fff8ccb164e4e94ff9a62eaf6f011f449155fa996be6006b36b011e41e022c15f4cc3834e894e427447a654f4719085a4efcb24841496b6095e996043e9ab7023bfb82654ecd47aa71becc576d519abf421d9b7be65bb0e7e13080b9f9410bedf2aa0e6b44f8991ab7c5462e62230384d618bf7e19f0d87093fdc6af18c2151500b4ae76ee681088fc3d68fcb4421aa8ad2620734fdcefe02502d67cfaae90329b73c1c32dbd477fc78b014376f1d91e7c27ccb01de130b1246625e1d387eea701c6073a9d084253fde4bfd7722674ff3c9ad7b0066e1805d1310eb16065833d4a122d78561f4ebb7f09b829ede7bebaa3e41446377b1ffcc028d04cd53df89398873ada236030a2ae67a76442ee92110d91f5dfcdb30618a05c30f450bb075e37d959639c12efb83481f7517e6dd3f94285f1d9355f49f98fd053f7c85c8360d37860849d34e95c5a315072bd190c012c00cd8b481a45305f5b9db81f88b68cfde3b5fa36bae2d0e2c70f8ac5ac5c393dbe87070c6a0fdfa8e0ee7f4d150556c24bcb75b859d91907cd2cf6800d04cb263eced150abe54337caabe7d2a997ca6938fee18af0b1d6283d8ba9d6b4da7af21d2eb8f97339f2e12b9a60946dc3098d9821f44d9f2ec94aa4034bc4f9cd87be6ed71b70a1a1d227071ac60e95635f46763ec403c91bec20c1e2c61cb402e0562cf69ffae2a6aec8c59523cb5fadf0d4170c453946ecc0db9af21e59826c0c9d238215d9ec249b679039c0b07fb3d656e1f737609dc8e19fb34d771b9eba9fe1ac76f0ea8f34ce6b9bd6adf27ab2cc06bfbc102a0d139a09f4d0afbc4903ec7894ac6acc1f4b5915ba41344f49dec250ac6dcebf75f765efe4eacb22be9fa043658a254c3a038118dc83747346dc33dea8ff35a8714e4aa560976323f4dd28749535bc88d513efc16470c16ccf412fbbbd5654a32698f635d5eb9bc6b1956a7555bd9a02a322f5e09bccb60b2e5512baf91f9ff90314e6cf16097cfb702a33e1b36264d89a0560388e0539a3148ec34a75283c57ccaecc03687e937b8d519cf3b4fbb5db3889a9e66e0b434f051546ec86b1efcda6c718e39cb7c43a67eb0235369bb50fd59d1b38e2dae91247e14dbd848821d66aaa9dfea7e1ab064ce2f444e36f69a70990288c15c7b19d3634546dc00c9a345b7cd46bef37563e8b4ced51b312810fad067583cabfec3839c9142f5b71bc54df2788e1ed59af9642407421e956d0945add94ee0508403452b6e49d08d6f5bd2379a696218272d4092188fbffeb347190ba88d62059307d33134c92191fe555e2895e92a4cae321ffa9e3c3137ae40d050d4d8caa6d6b3f0f08175b9b35ef1ed62cc83eb1b693b6ad196338cd3515c8dffeba541c30416c18502bdc2dd37ef5d983df9fdd11008cefb336b688b0bfcb28c601ecbd1c37f560fc611e0423b1d651677dfc8f9f97f42e6d279594526ff794c2d8f085ba5071c1d8e14a67b879a4399f5afcb0701b342f3c5e90baa23053af1e501a5999c43b47d0077ad85a1354b3584704a973be6604f7cee68fa17c5ecdb2b1186226e80a63ee183cd21d97980f64f8d66dd6bb5a84848327cd17f9ae6d86917713ead7d5d2ee72973b258c1d53a0c160af7ef38eb7e34dc547b903ada642f5648d078fd2e8bae801d277b2fd6640113c1cdecb6e90262cce5a0a56640b37168c938b91237b25f4abc11f47eead3fb0088e52e182d625e56e77a8c3e707fdd2cd387bf8c6bdfebd76e4fcdc3b365768bc99efba5236b5a2f826c6d86d8f83c6bd1629c114beb17813567ed14dd18c76990c0c5edfb683567b6f76b00901fb1e3fdaaf7b5cbb36d47426fddcd3c81a0b49068eb4da4f2e2c335d34cb1fb7ece47da7ed53bdae8dd8e2727c46c849c659483a91493f895f4feb2d06829c9ced334619cd47fca8d64294281411ad84bf85bd77b0c5fb37164051768f02051ffc0de4e3a2eb3ff5ebb3f9096e50469c0b4f5fbad421713c8d113dd76abb7784fa8613d04e19801e9e7c57ab3e263def8e06915c2ad9dcfdea84c41686c64b4a5f32a5ff617e3ef0b9be26296ecf3c3645f709981d78fbe6d1be878ed929cd7b4b30095a48f865e5315067c4940deff2ce013c2c31f1e3187e35e35a7d5292b1be96eb6ba3c4e1a55638018a325242e1c11a26edf62764d90f394b3c4629670be5346ea29d523711343be47a2b6e782babe7389155fa48ada539c864109bf64e2413d19d76d45480a8ac8d54dbfa872d47cd6e48899a4c1f134749c1ef8f1e177da744ca866fc2d11c06d62aaf51d26eb7a6ed8810dd459c62c813b30654e015498f00b153bc554e77ebbd8f7f8f11e10fb82a640ed8674acc85a4b8dcdf02b2fb01b9c76ec7cc65d46e720e592ba7fe9d58b40090d1b65ca768f2c0493aa477cfb6a17814157707ab6d4b1d884eaf3d7de523f8dcc2a092ec6b408dc0e767147806b5fa8726df2d30c03cd49212071f2998c04dd2b46117ef63b246e11f0ce13dc3bd8d2700f133d18ceae538be5974cfbd274a206dede368f925e496085670089ee05f9e159d4675e98c30445973a6d7bf0f292c663d115d6b3c111f88027ee6e8e13124f16887df7c9250926b03c59ad72db6bf3265012e6d25c87ef2927f7037c705c76bd96fb47c4958054c94d2cfd62e17ccc824c0d955e08306cf202ee6e6a87dbfd62cf78948ead7a39d3d7d7f26b3b2e3a2f1fe2ca7d88552fc35c4b0a8b619ddc5fea5beba506832d041ebcd8a0fc7434ec98f4618a00e94b052084905f90b6b37dcf52c4c705c6f06285bdd970d2e9a6d083131fb55b31e8d5146c8777a26074f584d4cedbb48cec9154b66c000115a77c3ab93001586dd3045b13a983890827e2475b04a0b2552dc043692da5ba52d80be88d1a17d4b083a33a1ca7aafc5c0ba19523bc9016565aa7f30fb7fe6d2eb29fbcd1c43ec8a83ec768b5699ce4c4dfe0cc6b77b71d6417cda81eed972909c61435e854214a1aaa36c6fc6964cb2dc8c7e74824999b55c2ed98069e0ff139703f2cd38fe5545084fe3403949c1b1ee76f974ebbc19e67c379f0f6803697fdf4c8ce61879238ce3bd869c0d858a82f5a2c09903b8bb4c5eb75537cc160b5138bcc4268f5bd4ae242c71f51cc9d940b3b9b3d2dfb5c610366486a7c9ac80d73a3bd69b92bb4d06bf37993017ad2113ba98a4c0f91d9de705db650044591c8566e2e99c322cadbaa0d824f53dc28d436db873916d76c4dd1e98430c0f2bd2da714d9efbc8bea8974977794d2b96cf73ac9b60ce9864fa514b558460da8affc4724eb50aa8f6d24449f86e5eeb1113f32a1d5745a432cdfeda6b2aa886aa1b9a57b39441732eeefdfc1a08ee5a9dedcc91e3db4b9bade6f307161e729288449fc0a085747f9702d9487fe9062cf559ba9f588205298ec989af15f697c5543d0a15de92f7a882da58fc4922e9935d1c04792e9d5009bd29df26cb0093735e46067fd23ad3fb5a8a6d37a21078435d68649936e6cf52179f8f0386f9710597524f85789b113fbcfd0b06bfe62aa4f3cdd3e576ecab030218f821a7c232defda87fadd2de2574a514823adf68447c628721ae0287c99bafd1d1550b6c4bac76b946be2180ba420fc16673efb64b546068d5c5b242f6d77b64738deaea9f84688bc99fb2ac61c171924e932d1436adc21bebe104f8e76deae6d9dfe3472eabdc0d406071d69c9135ce35a472024ad401813a60a9d6bbe30cbbcf66933f6e9fb64ad3a9e96c532b0e61aaa4c6e33be2ad4daa877debaa1b676087f5a2332320530bd82b67b3ddebe059784b7f2f58c87a5d8913efb2bfff3160e35b85adc8692a99dc3dee420f941a1981096ee200ae9267740a94ed9015879a082c6c2a630d415d818fbf6db46b306e4855768e8b59be91e57d71c75843ed47e7d8181cae0c156a7771a832ed0c01eb4c995a53b51249f142dce04f9509ef224dec724276dfc73e8ebf1415ac17c7c5a841b85583f27578c284d8c17d8fe5b7bf3acc9d87fa9a8935988e82e88deb7846e81ef410c662ddfa9bc70583f6f5bdb388273bf09f1c2a67a709acaf9d413158c9cd19865d59e7ebd392aca1f9c4febf88ac5a56c044364ea03016f3040c76474a6f94e32dc996ba85e36686172265fdda753ef47f5cf870e362c0413c11f7044f519bd18fe9b20a9f440971255f0d7e637cf0db101046b5bc5ffc7d6e42e3d5d1baa44dda46b4013ba921e63a5ddb73346027efa74d43d5376715667c666246d2142b1d37b470ac74d352a00d8cb2df145c363b9caea1eb5913f069d6f72faabcb40376a32cfe41047b7a37a045a65acf1ab942d3ac1be8094727f92a7b199a9fa71f433ec7ef11f953b711407cf3e64c4bdb96f764b2a67d331739ccae81b9afba1cd2311709094db1901495f47b86fb18ab7f271dc124e0788d85fafe4626f57da7ac126e81e870b17ca01c9fc1558afc19be36372d806b0be301fc194e755032cf822a684b93544d0a919111447efa2af04ef6aeddf5da05adc63d884c1689b2d8ae5d81f00663c54b432e8f8bbc7a7bcb61272361b7e96a5717c592bca77d8139570dc656fd45adccd1d3eb2a27c64517c9b8305684e1eba4514ea652819b7595d95d64c936ab428098ef21c73a849ee53d5c13dc050b64c8fd7728a8a6dc62b08930920f155e0913e4f639fc1aad3eaacd4d50497e212a484f6e91f397d8906095b5a910859fac4ac1585707956366f707527121a3ffbe44c270342f5b01752d61430c1f95242853f94120ec295c1295ce8298a972edde4a30d47f6f0038b4837c971aff78f90b2a266110e9f30e34a0486df6709c5204b63ea676f89dfdfad8c27d7bc80bf6b901a07a65f71883c71f1b00417e0e313d11b25595056e69e1fc9014a8e6404080361392642c1a5dcb6fd8a2b4bb3e6e29ac3924db9231762cda5293a3038eb2a841b25d357edb76d982049f96715e271cd1a0d57109f81d1b18401c0f37e9df5d21935da5bc440d204d6b58eb7918871f359f46071a8e3a8e7dbcc004385124308eb231a8c7e02215f1c2308dcb9fbf6261e42b6b005edb7d68363261d27c707d0f8bdcb6480af8cf346dbe53cd130182b2d3ffb0e67bbfbb9db83347a60480ef24b6d2d2d16f83a143266c8804c4ddb3cb8c6b3f7a7518dc5795ff4d8088f7ca808138a42dbc54bbd2456ce7ad03c109303ccda84b5d75ca517992a87cc0b8108396d97b28a191a7ea5ff4683daaad5554989a60ca951025149038fe3a5247924271c6470c6b244b2874d35105e3ac596f3059e6fb49af34bac9cb8ff55e808170f0d0fc802bdb84590be4fa281d8284f866f27b364f52eed48663f519d617c1a0f6b5e5c996c00082529bcf229b416e13503b06d5e28934d9968509d404db3cbb58d550cfa7756337c6eb8bdbde7fd38723b480fe960cf4087e814085684edea602be62455680cc1058753496488deb7d618cd85ea4c1b3568550764d17a54b475f8f5d70b453f15617d5c4c1e6cdc995f7e6c5dac3dad24897b3b22f004b64c6e265e53ac833aca40253f4bcaf99c2a6b531e822ba5d7cd16b52db2505b6d3fd465e96b487d5f070d955e498ab7fdd52f12ef9ff2ae9c46cc1e2e4bf96859db3e48391c3a5e261b09b668a974abbb0c4e38377a55e949cac03425e757a3123204fc512f766dac1f364fff0c58bd064d6d8b774c902d7104fdcca7d931c0a4663b17b9f7f3e6350c8f16e62218df272cb164fd5b222cf2272fb0d72eaab6d0be2a3e28f219c06df81e4834cb4208ec05c75322aaac95291bee58cb29447e07580d8b2d25559dea0ab603d33e50e59a32091ecc70b54295a060a102a3895d6d9cc42b6a2e520fd2ab32118037d8f1b4dc305b7364c05b6ff3253b1d9881b9af36de9ef1735b6af397c81e4435d73aa0d2f19e4a38b6f1c1f1dd57db30c69473bf7fa899ccb22558132e05e19fb212cb585d60b41ce46ce9b32cc2f9a87f7b43805f1abb8880c82b902ecd5f57b8e356b684639eefe5846ede16dda8a8a765cf3fe173c56f67f056fb684635dd165bdcaba676b78cda4c2fd0544f18fd0635ffec36ec7b923178c554a414d4cedbda5cb66b7a63adab76f1381499a7d2c6035445bbfc665b08d8fc58ff8b47771e2da348c35f678c63d2624c06422d9cf8bfaca4dd5c0e7a59796ce9e889eea001f12753ac2a392d71039b98c4a943a7f1603a23a04ffe92bb7e543011caebe0a0ced7b7117e289437a7e056b7d8d87c73da12b1125fc47cb30e2a1bafcb0517612b21bbfccd48b6215f0c26547922a10b29329509883708af989e9303b9134dc1c2ab7b5043730676a478c095c26264ff34fa4268677cb623f453c201a51c11a7f0b1469b52e2e5824c8ce026d67b91da3854c7bc2f8258776da1010f155731002a0b60efc3b1089d214476d8bfc1d022a85cb2ffd6b55d3c05e77a1c92bd5bdc809a91d16634ce53e65e3bcddbb8bb274591b852c3e02f1788920d35df3f082f08fabff1894f027c4a2d3aaa435779e284047aecdada2274ca85242a8a2af105c43f3cc8581ac0ace2f837efcdc97677851249821d1a08ba7d2c31f35c27ee564a382f174ee352a7252f0a8932c2a723004073f27c633b6137accc4938cf9c883b2a90c12eac2819f1ad99dd6b24cffec31403f1712ded8e97f02b84118f34e4496e590ab3163f6263ba28de792fe34f2d3885c224acbfeb4b347fdbd0b13a7dcc9fbba27c5d67612430fc55280f65135d4588214c2fa6c4b2ce0bf4e434d1af61e782bdc00047da8bc53b19d0cb5778db71ac6319d20000bb3c526c9d21fd7862b7870726ef3465d56484168ba4b757e276f9a2525401f34c4557db959fbaa88ea2bc6d9f9df2c397383e10112f4fb2fba6e536aa43d3345c6aa7d7153719036d91e54dd39bf4d9f11bd9d911ba32f704d5f0ab4e3781cf8ec650654267a9864ba37b30f11410ad301465e4ec80c52ac577017e95ecc55667e1a1b631bc4151db15530c97b97d69a36068c548dea1b891bc251c8ec240d274bc696da1a959d43711c2cb91a369835108558b75d3ef7a19c8044b7c84f993d2205788acc7888735274dab96f4ccf6856d4d1350a268524a9c22497f4d337b9b27e810787d99e2f542038b19a6a108c5dfc5d815466aba03854e24ed7a87a240964231ba9f52dbe253f3ed172989a91ba6cc3ca77f0e1a44015cdcd4f3d109839688d828ef3ee9342b77f8851f7f49b17cbcbe093337e68447bdceac44c349bf6e341f2a526896fa4b92aa4a24e3e34f37eb4b3537458e1bdb965948a59e21095b7a5f7099585b6fb4409f4f6f776b5b5f34724a11b99ca9933686ac4c91a7d74661ec1ae3b770f152e404c9a3ce8a1b12c79b2083efb20e7fdd7ce5515e88d531a30fb61689c7849bb7b1355c92c212ceabca1a14002c34869b9b69e92a18982a1678e321d3fd5e5e57675b740dcd44a5ce239e81c14dcee50b2543011cafc3d6de7933906101c8c3f2bb23a1f8f743f96fb4e3bf5319062b01ff2bd57bff246f2f5dd0d543194e25445e1c335db3dd510b21ebb7713fab20c38bb8c792a44a2b586e319e945df6d17fbb13a42745bcb29f9802e158de9cc33e95e353f01b85f9bc6285f8af9e6bcbb83e6a11beb82eb19023ada88180c919bc097e3cedfd48a6c13724d672f96f2b5ab8c53e535ca7e300841a97325961b7364f97fa8114ec2e67a74319502d85c9a7e8270bdb1a1dea24e54456145cdcc8eee2293a9f5054472a59bca72043cb9d950c6e2c43827acbfb36937b95d35648aeb23b4a03ae8b098882f9c5e4585e1c17f256770b03b2dad7d1c56d65000dee7bea657f695aa3aff265dc6e1be40ebba5f70ab9aa6ec5cf550ced2b3ad9beb597eb68dcef2e035fc3bd1997f045e9d77d7728370b4473e877e6b8e211cba7f2397a0b92788d1272247cf4ba1565bc9e985de3336ecd391fa0e2b432efbf41d1b2fc3f1c0ae447e130989986186218a64ed1895dce4085d9b39eb0c68e15c5b380a26c48e05a31e5da044c1f604c8832a0ea5b22e2b576017a1984c2f0c5b6dc32461ceb0d102b06905690918e78900838b73fd338e34f37a25f944b205547d730784fc4f459fd27776e5093ee0db85adc8e92bdc0cc815f85e71608ce07581ec4905151049e38a919a01c16e6d34f7e9dd4b4cda1accbda96a03e65dfdb7fb96b4ea7e696a89d4b2c8e4fc742bed95374460474763c7cce1c13c94b862c71a4ebf3786bbe1396d0e7cea517a5e6b06ad7038e8928dffbea65beb580baeb31b134aea666bcc90cb758fa14acccf9a908a3e430ea24f7f45acd23e11caaf67173e127c404d0c8f8a29fa1b77cc1337cd4df081de2d3ebb37207b511a778211d07ca98531671ee6a8e57c34fbf2d3c8413cdab8f3b60e0ed17e885a5cf201f1f9d7e6dba025584eb61e81f5ec5a0e0eb3a070b6659f80a1b16aa502fecfb3626e8c75e1946f137d565eaac923651f13defa55706d57636a06180eec02563dad06854e7691f51c707d6027bc888ff06554889cb276f760dd8658958fa0f38fb26d4dedacdcc2da13fdd8887d30a323eb38b6b60cd9655d9b503c3a4f402d2193c0b7082bc351fefe9e7b95ecb97160024de99a02b9a92445f0f14718e2b0e9673cee934fb6951c15813f4aa81fcef5cf423fbd70e947c2b55cc445cfc624d7a4704bccdcf8a545415ba5269ba8b5cf2291e2872840266fb269a4a4930fc180e2b8d1ab4a71f395a55f1c40d713d1cb221cab58caf0f39aef1de39524e83c7cbdb136dc7d26078ec67d46956c5a61f53adc6a48f9961de34335050638fb1963a25b8f374f513c12f5d28b298572c8c304078309b7328f429fa47795f84249731771fa08dcc0e37fa653c13dcc907f7583b3b105f674f2ce415b7c919f042c40e6f20f8b3815e9c4da0d0352baf72119ceae43f3406aa1e9337708a8f571fcb341364818bfa2a2848d6622de7382871fd7a69169a3520660356b18df6443e10c8b8161cdd1e03e5f409d4e108027f86dc659baa294b9b4ce1243e8c946f48dfd9947ee99cad86308cd7402a09fd7b6c5f1d2b2323f2bafbbd695a375675921ebf3f96969d99e7457d250c701d45a3a68e13f253abb5143e9705c34af46c0bbbd285eb6c754442fbd130dcea45551960e12fbe57d12d549ed1b25856f39c8cb07f9c07d7ed5cb6575d74b5e09862cd881701fe6a7d2be74063bec4e5653b583e7b9665c92af59626307c4e69c192c1da968f4f6120c3f504c4883f2b0ad7f765e785260300b5633d89fe1b0bf97e4260d0714553823e15f51ced030ae6572ef761a268978aaa774577e7a39da1e785d69bc4d03aa14076d98486b8886a56027a30cdf6de48b4385b2b8ecb7884af94b79106d16500042b2a7a20f4675a81f6bd9535a5786b56c0a881efd0ea963568bbd9b8ac3b5d9b8142b669ec72b492371c14113f606391ae5b5d9eedd6e54068e4e2092fc34e15c6e2cf231c5455d886d569164a5b36adc1bad82be1a67cddfd687eb4843c5d3fb960a682a5739a6c7609c6c0afe1b4eb7db0456e3ea7cd6452530a6bcc575c4090f9cb65dcf57d2abc0a44fbd9e091876de672e1124cd1317137dcfcada9ca1c769cceda6f4008c5c2dc924f75733f450b0a54e760a407b98b8d68f9e1985172bbb8ee844aa8bb01074bd5b4c4bed36ec0eee935cf52764890a29f4fa18c92532331f238266c165926c468e3a107aacf4335c69f50ecfa612937c07592e68f18e550f9fd73a128411e145f2212c6deacbf317680217bbc03ed7829fdfad557d8ff2b53334d812e03f1474ecaf5928839e93eeed10750d288b3a052b6bee13acdea1a64e2b8a41223c463f88715bc8ba7b25e013c241d48166d4270ee1ec08ea251a5bd73d7c3b0b019dc88cac4efb91987e69d4da94e3787788ade25d10359e509da571801550bbaa18262e8b7398a5db36741d06af8747c9c176b0fec3cb7045f76afead72304d0fcbd606f95c90df9696134fb45375f9053bed7498af74543aaa2abf7fc411adcd8bcdf3dc71cb59b693434d0a8eb71df8b3ecfdd1a061a2ee99a2fab4ecafc694d9a51634dbd3db73bc31acd8f7b043a30870179c742a58e995ced65ab53ee6fd6af689d69e4f337ff7cab2d7ff8ecf8dddb7b214b5575ab2dc6104efb91f77bd5496191697a1e86208bb2c6f684b0c4a9ea4da2bbb66e82d26b5ce132a913ffd0895647ac63a126b8aaac340c69f063531f78dbae8e07e54c250e67df3e6c9371bd44438cd1b4664643010be7d96e237667b7c161bfe0332cc6f83d7cd30ccf8d0f5a4a1a36bbac5b062b7cf63c5e64103c2944292fb58d05872249ce3d3a74803792a4ae75c11fcf98bce6943bd68d30495536d824809754c5fbb728e0d48183024dbd079ab1e0f7158865e5aac8e623ebbfd0fb6410c1b616b9fc1096125739447322f8a8c48caf177e8b43673aa74f58bfee47486a64dbadd85bcf75219c8bae103c01872c5de21ba5c6fb9c957e639de9cf63026af8b13503db6a09e8f065e4027b2dc1ceaa38edf4381fa4cfa2280387671772dfc9cae0f1cd1b0664b5a922b2484054ac47d0e1adc6e639c9a4b9f734ae89ebcad4583725c8f58e226cf5a0c5a31b3894e81f8638c129f036ceaf1857cfb73139923ccc486059e98b11d34afcb89381ffd96546d9e821b1e1048759be30aa518ff6312d59ab377f78c39d1591ea4eae8fc4f02d73b92dd8bdae1a82c53d303109d72fe07c085eac334453a47aba3bc811baa40f80dc817ccf105289cc7df653f79e018ae82054c6a8dd6d6b4f15a73515392e455f2d6247ff5b45f60a1927f948c560e847c332f892a3c93283964fe2601d2f88862c1cb574cc52974ac2019244da4e48d778869288b6bba49433ca506cae1521e9eb1db3086c1cb800484b82fc3dc715176b151435f113963067c7b66b5e0c3a043f4734458db68e010a6602971285f20822a9706879448b16a7b564887e4c04274ad2a11efb2058b7ef26cdf108a301959b8323953dacba364143190c1df7155cc831efbfb7d48e4e91f15fd36b3e287510b02ae872e3903b54a990936e4361a9edb2e902d31daf9d06603191d5c2eb5ca0b9803ccbfe4816a75bcb644a8798b58d6b6bfc1d2823e58393079076c76cc0d89446769adb0464d5a65008b4421e4e873b052f6ea51fff2fca7480def8d1e2b661b05fac1a2c21cb32cea939ea9f17e1e408744fa21e2bbde1b1c0057b911af9d124caaa7115af36602936d8ca7813c0eacde65d70208673761a6f7dd4b5f810812c18b4765618931c58e151365eeafd926730e10d99e4ba980c1fe9a49cda6209442a0fee2c7c3041b027435a236b3b97d3064564bef591ccf2f286e7e12cbf4f3b5ffc313c301b87de75fe5fb1bbb440d970bf3a899d7f81277bbdafe37aefd9faa6b80b37c41eee93b021e4217b0b06734d2f5a38003977ba805659224314aa91ba4841db7f56b593a0963d77d07a97ef0041d713e6bb8f2bba307e1ce92b5be3313c978149cfa9765b5ddc2764c12f8b1866f8a80aeb6cce14e1854dbc789e044340351879a927ea889eda08902c8e72c648b15364d933599e58609b82949213967de30b9a7ec8f4e9018f62745c4df428165b9acdf7948fa7465be575c4a68102da4806079655d3e95fd1eec97953e3006453cac81f1820fcfabbe27c71bc2e18117f2f20c8819557da56db1feac3d79a7659d5c9e954961b2e720bdd6cd36b8a5920680f9a7c832639d09df9d22bb5078670def335cd42cf7955bf66437c73a4a5d562fa34aa95b981ced016484db1f7ad64063d53ed60bd508f062a884d19b2ec61236f9051973ec033074612e817526ba5abac7449839e31bc3303accccf96d1fe3ec8caa35cbfd41703bcca7b547dde3ccf240bfd6ae336b81a46a68962df6ec6c80c65ba37e99d8f61521b7c9844b557c17f7db584ab20d82d1eb4c8534224c2bcfe94a2134ae06e0c008b8e83ff8c80b88415ef63eb8c4e19183e327d8efd09d7ea04b21c5bc12d2e41b31ecd820c966195f654fce6f7d4b2b3117122093b80d9c88ecdd50a55674d96a3e385d1905fde34f5c688d6251dc7851d024aedc4a15399e91e2126d36dda73b20bf3735ee5a2399cad53ce58ad47097dd54a5343caff89d3881af9cf653c1923ea1e2ffbd7efb37029712dd2362c3245e7dcb5d4dccf8f12c11578248e35ab284acef975369ac59875ba41ab9e78902db0ffd425ed43732e7b2988147bfcd729b24c3e32c1baf7f706e730b1601af6cd6706a6a3cfb90936d3e17796a8d90f1ab9aa75e4e089ac7cbace3e683ee2cfe809fff85cf3ee57ebc3bb019b545fbbece0a2033b8d8a3043f70cdf459b14a388589c6b5106ff18ed3304585c10f0abe206a2f3c4fa3118ba59bff1ba9742c1a5a109eb2e7b6488c9184edf997b6bc94e32309d64782e0c6fc807b1e26505c021319d14952e2377a30e34e977d6254ddf8a240f414de02032961fe5adf354dbacae0293a00ca6e2f86817d9c34f62d54409b632c9f3db59da212411a6499c1f5a2932c814ceb1f78d3312494857ea2f0845361f948d7b2b65ac35b33e98d1f763683e84a54ebf301e866ab0784a7c89c84c76000848bb0f85b6884528a65164f1acbb0ec128825cbddbb36fd614154badd47da5537235c2e7d4493cfb8be8f60d69e14b875bec99a5e8937e4974aa53404a16be2e0556debc48c5eb7f605fd143d3498f3da2484bf961ec4bbbbd9f8b88d52ce9f82de24158f8060a059103cd4fac2d6df05e33941762b08031afba89d57c67e5e180f48c9c2414ca330186c47a66e1f2940327e2733494b06e2b31da1171fba2496207c5dac28531f6af3fe04b3a2f8fcf64f4b3a5f08183d8b4b54194362abc33630222a69ce2c01f20ed4e39550be6ce4b9da920409fd2a13b3d8575e5b2f7b1408632dd27a766f04ffcab1109384c59bd4bab4d303d88f73d061d706f4a72e2854efdd3dea3bad70b8745ccab4b42c3d9bf29e70693efb6fb2fa4cc39b4a438ebdb8f18e39c3e1020c8b3846265a81f556701591af8be54241874a977196e41118ada10bae2d475481a78f171456c0ed3d7e7b9b9ea0768f78e140e7366fa67b8996bff9088474aea57fe93e3741fccaf87ae2dda0977b9c1a88a2e3b0b77384089880f31682dae61b7deaa5ac3369e8a7db5b6ad24a15ffbef8948fb57940d40010f0c5214c7ce7a50574980a36a50088ce7dd3f3403d0b46be368fd13b57f75797d29eab55ca05f5dfaa2c54c0d0b6aa3792986d39cb7aacd565a2f3dbf05a0f2924cfbc99b59d1147d690b50d23d21e1ab6102983846b25ec25698a7fdaeb842184e17d1717aaa33f507e2c9a1f23102459d1a214bce0d17007a1d85c69d0cfb97cc01a4536377b1a4f19b0d14c5d280c19f00cc6caa97c0ec6ab24d22f15e3ca4fc6f2f3eeb5d36a2a1bc3c2ae30c1cd5f89099776df3d7070b82d9c011692434f8c9fd9c9220bddf044756bfcd59f9eb2b9c96983e9f27df5de20bb62348d520894cf1eefb34103bb49b53d67559f0747d9883e783554781d885d8927685439e4e02de051fe6368ac28962ba7f1f569a69d1d6a9a3da9416ecb63048d3a3eaf19e80a3c4f27fee0fef8745113781ab287e863a5e7bddbe21a126d0b662d9c36686ba87e6b95dced89724506b34a2459afb6e5748d0328637e1f5bc2b729d7aded70891d1da3f66d70f5bf9eb4a547ceab1b4d18765994d2e3d5714893b84fb0c1386d5d14541d4bb7887c5112d5af40c67e9e0cf0d61e379bc15fb88ed3fcfccd0c751680979b911c574920474da0f28958a172fa4251ca97eb954baa9c13bc82a4e270bdf62e7d995cb9ceae9150721fdb02219bab8a5835601da5c2ea5ccaf35eda609dbeaf023a4e286b003044e7132cfab7c73b7ad41c4fa8887a9f81d8c3a08a1013807f90d1e547ed909656df7788e0ba0c456eb2a75c0543d3430e6c030ca9aec8f69ca457f021a609193f5e4aaf91d0ca8e8eb9ae14248a9a79e1b9bfb6f9bf4bb4623717d78717484c2a859a348f3e3d5632496355d9168028a1def6fbee6cc003bf080d3f3a08b7a99273c9de0f0ebd04f61ba68b289d1c35599afc6ec91a0a261e3acbdf9bd59e37add3ff5146684652515129d41bbbbcead0bfb9211722b23e8be326e14dbfbbcfd6db78d0799bcb7fc244c065dcd0a9aeea968fdc5f4e8f2cb18e1e4bdd48a541830435037eb839e76b427363dc72bb35787ef36c67a97f3c7b0ea96d08c2c9b686c036f27a6c55e2b6a35f8508c4c8f56de6d17805eee61f5258f6f6a3e1e69c6110b6b66e6081d46bae9d39b78409dc76dc303f6047313b971d6a6102143f48bd4e6138c41384cd33fe95865b04c7774a5b7ed81b31bd092fb6583d2d2a1ab8bee4d67f8137256679647e07beddb62d972a21467212fd6f9370982edb8eb078e3ec90e95a9b0d5b88a41f029f48ea59c5037d3816277e844b3c7c011d7ded35623aef5930fd1da5ca31d04f55c17ebb7bcb7d74fff2172045255dab06eb05c65dd3b1e735bc6e64835e08244cdd93b07a59bb8f6a4d73215421baaba4cb8211c185aa3745c89cf8807ac8b51425454bb3c926d047186d47793ac6d9e3367184b8e9d3ec29b9f27293294a8217fbd637c227b652eb3fecd421214d7d2e196b0fb4f084063e9b1db3975ac807f01019f0e046177c07feff0add928d79424821e5277c477549263cea52c2922efab79d5d556c199645684507c0487df29ef458c58f3818d6bd6057908b7c14299de0316f8a74abe99cb5c1aa89de8cf489e1745eed91b6297f2db2ba53fca3ac65d65ffb6d273ca8e9efd751ba8198914440515fb9bfc7373b0572aad554be8691b2c835eb3c0675a06b5773760cfd1d50baaa4c719f365686f40ebee14cb1b1500b5d9f397db05b8a325034bb76e66f829c9c6888186f5b5ae2064c87ead4af7e062829a5425dbec81e900831a883ecad140aa58cb5b79b98068966a157eeb49e9cb7bf6e75b1f4068883c8dbe3c62d21e239d17b86bb7babb9d3e6a93011ec8a98589aefa4a18313221caa8180f8796a324e0176d3b1b9ce00121ffd8d4b19a4fc5274db800f7220c067dc81604874cbaeea55ccfcdd31c62ac9c924cee300f60b826750866b7ad7324c4fc0f4ab7eaa2e1dead36e0166ec4d6736e14d9f3f0a2e40e68ea53802938751eb2ceb503c28dd25454ff89212b9b5cef3883a906a18e4bbe6ecfec246609fabcfae6765a94a35afd634117a682815bb7a70cc6d6cdc80f3b9eddf68a60ec184981f813a596c99298b1597e406ae235b44dc16ba8ee12b73525a5d15d5404193bf469b36ed7f46d9867d0a743f7b0b21a8520b000181349d3106c8f6708c047ac49494560a3ce498c85f3c4a4e65d519529e9e3f22b5ddaa1f5b50668f26fbd6e6d965d80480a7f66c7a04cf5d3d935817e81b2b7192c959efaf987e927c619cc52c20c01b39d818640213a2632f18d3fb2ec2a190f83b7bb2ba42da48d69dcde0d12b28bb23b9cb83994ffddd8c8e9f6ea5f64b314d22980f7c6a9e1b973782237b5e43d4a34e850c24bef064b17b5a8d06042c01c3f367881042cc56faf0ad2458de41634c1804b545b286359cdd15132130a27442792152b5462e06bf85352cbebdee3629384005bdb322f2010db4550176761ae61eb31cc955f261498e79bb9e1e100495e56e194cba44b60dbb239f9d394e8e8f5455b73902b30b1e1ab52eea33077c7d3160df0881f4711be0cb0e1c73f6de42dba5890e3000c267c524f3343b905886eb2ffcc9b7dcd128a766963b6eecd561a1a226a736c9ad66c3eeaa2162a96eb6597029cff6c62fa1477a851c6d87fdf3999f7a7695736e0de3da59ea8f174896abd33c0309b00e12846ccf491b6bf28c95c2dcd558cb27d0e7cfd0c449e487be57144b8edf8924ef19a52eb9b2eb9222d14423462d1e96257f2e6b68fcb319d626e310e78f1c4ecb3de733a582a7f5b3dff6218c96bc76b9913e5417e921dd0c7927b7967bd95618be5c9e4faf3014df7a84797c29cbb2a6fa1ab48abb84a648c0f0159378c84f72da66e1908b935d7865902122ec086b55b78a0cd135943f8f44eae7701586bbcbbc954bc99f786a21cec55775d0274362ce644b5dae3d8f2d15160ab428113645393830557d41f0f20338642de7782cdf41e90aac390ae8a4db877c2b166e1a11470992ab16c661a0227741d323a5bf5d2125d1aa6ef82dc75cc6fae8e47880be27845bee71ec5c4dbe10edb06bda1596a8aad57dac2df2306b9cd3f47950cde0bda4a04018171f33d502e4763ff6a47c319a331ace7922cf39c97bee01d21a5a274d632a4f96ac8c21de5af3c83cec9307e348c3577b223e5c3c0a40052f18da00cb67bd0a2bdf47b90abc1068ffb83cde87dbb2b7178b947288034e0f3f815fc1d7027790b16dbff20fd14a726d6248d1de163f32766337724431912b10e1760a05331b1d7fd9f4eca74c5ff958d98286e7072301db021dabf2a8c75eee8cf9263510507a7a13e4e8c0e03c325d185b23874f7abb94e41b08e9b3efa917a9e8a53ac7b1711d16f43e8c9b143b79abbd30efb4ef7764e851859ee1a5ecfea913380bbc1d3cbaf0dfa971f25b45d9d4785c2119ae6274a478bdbe0fc855ea7bf86c90f8ca1842a6970a95e8bfc971530252cc624cbef1351244b256b2c1078ae6855dfbe392106cb3acdd4d6a662c455c2ad50eb81d0a4fd424c08379e779334ac6017733eab86557a6ca18c52c586e79a877e74f5cf8596ff8cbe4363b7afd569d023a6cd16e186ee4c4d27230b69ae1600ce82f22cf459a4d523f683b64e032c428c98130b417c411446b3cfd92630fa308f98678417c75012bcf53a249a722e4093b8b8eb575d309e9d1c62e8da307a904a08156bfb76ee564b4829010041d4ebb9035cc686cd5772a4c1a505a795fc7170c6cbd9813d6b0964ed9a1f00f5b9d02213ccab2ad4c1e029f2dd814657f11ab93f2e852d41e975bbb1f0825b390055e2842141d54b65eba0a3749a9bf54f67849e5902abea30b04373bfb49b2e26a1ff9aa82c7d6c0fcdc3c8225ae186e6bbee3e31e0fb0d77e42a26c69c69cd5a21ca4d7aac243e48ed78b7faf3f43c42ba711ad5fe3a9a94790e57e2cb2519ce43a45aa4d0384418862cd6129a56fb025b7d7baa09154ccb2bb5fd25aef20c22b84ad61b9269b6d9dcd09cbc33f9cd91d81a365d56f1c2ff4552cb6627698d00251d667aac1834e3cce3791bd3d7a3eb418d446ff8fcd87bd0db2c2a181c874c740df668950b197401edea280df94ed4f72bf133e09ef9ca4fc06538a10e32c46eb608965746ca55aec48d8c84325964105e9cab40d44d9e35cde20104e777985bc23befe6e2146b98f686c07016aa820a3eaedc240fd131c490969c0de3014b3852ad4216d868fadfc3af22ef58ee9e63e093eda39bc15c7ee38e44901eca37012449b0f15c370253378fa525a10caf003ba9fdfaee878f678fb29e0a162ab59b2dbc5c89ccdab28df3688b1b77c576b8721c23cfca012f407baa9d36b1f0ab81b3a765fa5ed7c30bfdbf7b3215addce1ca65de24da50356f91084c4117ebfcebd040a2b7122d6c4569ffe1c6379f33ab622bbeb870e55ba8ffa2b208ebfbc916c70e61580a375b518e58bde3410577dde3d096db41321ff23b1066dcdff3e7263d8b706183db1e6670fb9f8aa6ec2afa8af865ba73d58af67c22dd951b9ef5a5713d010c870e91445d019ffe65f18cba05afebbb7629604c3b79450433713649887f42bdd38788efa11bc7777294194c903388eabd6e2f653a5f6077ba914aaccd7623013dab92e20755fead5d1103edad60fc93d4bdbfb1f300ca8470d20c0c39270e95585db66c28a8691f0dfb6ab16096b28ff7d4eb7409926477697d812186612378b058bfece9326beb4124c19ef53151954ea284b68e4f0fa9df6eb5b2a4f8871b1ef0c7b8cc4c2bb3a818815436bd4a427a47d569fa911969b13df85839e7a239e1ff9a938778b34664ed07b32b5adb5220fcd5ed2e59dbf3edfd0f985bfbaccc4e2a838a04b75848b0c37c5a6d8dc8d38a4060c7cdc6d64ae5cafcd7ef7571eeb031bb47612a2eaa845547af0e9a4a9becb32e73e2c45320c0a7c2d45d56cb6cac8f704137c636af03b8a32f867afba1e9b4b12443a865da2ed74be06809acc787697b9beac0952c900d3831f7a06bf66fea919fa7db8b8acb26f5697a2f9c38a6d040ab5660c51219237d21562e54334ab8d52c51ad9e42bdc23ea1665e155045c998ccb2f068f4a141f042ebb3839ce6138ee3f4f65774fcb6ee7e363d51bb7be10b9d2a9b1a2a7e3f2927059df707fdeedcfa1adfc589a36e5c6640332eb129eae2a2f1c51e7766070665edb1ff3223743849bbddb96505e0d403473b63531ebdafa05ef9069aab713571a19a0b018a219f1d495a1cae2ca5a5dcef46887f82a7781ef5cf158fcf827971e08072fb9636fbfc71b27cba28bb883343849d19dd08d1cb49cc8ae3503936ad612b7ef2f40c081293b8d7ada48e0299e979eb01a86477dabd639b5fc31a212553601e655fe7ff9a0304c1094269697326a7c126e9f055ca3aea4066cf8ec1e556917806bfb12e08f06af4154d7b79f28c1c1fbbf370862d48072642d7c0a9b2979f8c0ca129cb804993edb1d80ecd1fbdbd97e97494e78ac9fb5d4684abfa1fc4b53c21a45d425a215e24cf352e9b5eebbd7014e0deec2cba7be5a8851da6e57dc8e67721bea1a48cc977f8ea29aa869a1219aeaed90e69681533b962ecbf95126436e3337ec0b0284b09d7f41fd5251ee6a0d1ca25bfa3a036cab81918402f4e9d25c677af9d64f894dff86be7d57e12524812fcd88935e4965767344fec4187ed020d25abb4523beccb918181adc803fef948809c1e5f3b9d52034528f63ae54c11c3701b19e0720d3b8c84a916411bac99a947d4fb41f67c10631c89b9ba693f5c6ed44fa693be0342b0b6dc2b97fc532bb4c353cc913d3ed0e9528420ab95250bcd362fd290aa9b0fbbc24414e9ca39ee71b6564f26cdb3c5b33da73c9eef3cc474007cb6020deb4bb2c59ddd02090a82f0b46fc914dc526c6f36adccbc16eccbcfc8b40bbe36673a96b33c45801be1e501981a770c6bfae4bf7241c0b02f928e8830f8fa69cd18ec9fc11f170e39d1444b477cd58094016f2f16ee3f9e9058a445ebcbf7521b75cf3ea24af5de0a9b514183b2050a2cb53397dcae9bc837ad6b80bc8650178cb1b5fb687e21b98750a06e581ae43e38d3c082f42cc9ad70e23cec3596df6e120cb6e700944195a7ae78baeeb0e92e49dbec66e4b39ded9a2d7f836331034dddca03952f5c69acabba07d78ac6539e3f2c0c557244c32a5be393b78b0912f73d1d5850e2bee221e090c97d65e3c35529e9bd951ffb12da824e415e05ee1574b11780a787a02ef2236d4cec814d88bd1d1eaf6b4914c37166ae23a771388e5087b4bdb0ba2ba8e4be1a9cfdda06598ce74ab342239440b36b7977883d4ce7b7113fa743885c20b2b8f1cc8c4e0ad2304731900c06c8c916099546673dac35ce7abc5cefb3862b8a1eb075e1c4a4d2b17cef3548f90bda8337ebb0677ba6bfeaa2fc17e3a1d3ef93248dd906cde2732590d6e6546b09e13c26a87eaa46930158b08d4af152b2e5a92149f64e63d24987c714565d85c41b1085fa753d3cbbcd106ff32342204ae5fe987d8ca5c8d48006b32d038611484b02611de0751b3bfac638e11c118c0f8ba08be827be2777edf15233e31b69e9814acb5f7e404e1bdf95aa3827be66b65e13b81cedf8473b9b13e8ec2b27cb7e6c1f2b25efc8bac82ff234aff4d903aa9f508ea56bf3ef435f166ec39de8c1f52f34e1b30682c9dbcbba9b1f6eb1468d8560bd45fd48f818c29eb50d2f13e641e41e951b302257617ca609dbb9a4b7985d3e3b4d191be04fbc5937b4ca575b7e1e89f19bad9ca985c417d607e2a29da21337046eba359ac3f47a89791b9da22f63aa7bd5502d7ac8e1fae3eef65c15126d981a955cf61425e3becb0c5c14d9e679bc0febdc79b1e56d9f2d46fb7b088691bad88b3fe923f3b06402266dfe95eaf0a3bbdc921643bc50b497df4119855e248c6e2a861f92c67579622e7175e888cbcfc0934cccf69f96b47da1f3942bef7e923b2d0b985e6b174ecb08bc48735542434102cab09b0180aeac825380d4aab09238ec9b337c15c4806bdcdee4c4bd11d12e786baa09f1a9fa7350f73ac1ed47a53a2a7532add13a9eb773d51fe2263e0cf76b5bd5d4149b656622f72d3cb8fa856f67e642c1ce5f0a95d81c78f3b950632ea3fd65748ac4d02a85b0a3c74fe9e63065a45cbeeffaed9abbc1d8733e24e1da55fe39148b228c5aefcf243bda509752bafc290002f0a5dac88a8c57c4015b764a5815a2aab9ba092680ef7a08a987a4f5ace3ada98464263b056ac3389ebb085c4e6a97c2cc22a8f4adc1f1d4e7f66314ae1cbb67b28e09f091eb779de951043e1db455584f7f9b369efc79737c3a9dbf66f34763037fd4220793d7cf416692e5a489fa5c90803baf5ea0579005e2e5fac8a63163c1c4e82026415db46dadc21849ffa9ec2d2e5a936bc3bfbb5019c4f8c8bd22eb718ef5b1d46420714708e4ef1e6cf077394486e874ac384b97510fc88067108a7ad647cdd388348d7f9d7ec8873b13e5a99877856e81ab903b76449e161f754083bce8eb2bbce1c3ddb22c5154f5e1f1d7a8c861834cd5472f98457862da6d34fd95fb96d5d76268b7431ad328f9e0975ffa00f0e8cf83c9b5d7409edb5f06aeba4f77ab088d20304cd3289b04540f2928bac123a0303a73a41c1e68d592d6aff5128b40c2e48f974d4bc0634db73dd7d30ee7639f10e6af71d43ff692b5852567157020c1c12931b5a690f0a66514d7fcacf9727db517254918c1e50145102ceca46a4af5d5213753625cd41d00c7cb75b3afdb827c3bccba9c59b7e4049426ba5ab8f47fd238a7de67b03890a88bf4ad8ceac0f4c7d16d8816f52e6bd340eed874c581a12cfaa68239871df85385f180c897816a8708f582ae821ad61dfb4088733ec2306463271e7737eb0a6b581d7a2c816a988250d1b1928d4adb9f7d2cb3e78df18df831d62f0d8c3c1a3b2836872ea4ed2a9c6096c565a60b225ee8a1e33a87330fb73b741189c1daa74161cc8d4eb3814ca24a2abede1524ccad457847e92576aa53ab4e4d95dea01657b872820c9a5a0f798e61c341f74b04582a857b16f9b7f0b2b037e5c030604cacac1dc778ec0c17ad87aa02b944d2e53eba80718bd7489f3de7d4907bcf9749bc18136bd0565a0d4015d9dfe02ec27fc3c9bcadf32f4b53d6f7488145c34b28a03c99844a4a57335262a05dab250074da5b0ef010935ab892be17cfd0cb960ab1400b35fb8360826a460a32c88f6a30be1177af4cff0e991f1dbb563724201080c665d75051603260901b78dd83c1d38d2e33144f78ce07d840ab70f72e09f8bebb165b4ebc5f84415eba65ff74283e4dba81aea8065f08c90f179c18d32fc93d80fc455ca7e2221f08996c5e11827ab68d1a9e7929c7e107fd7762cdb0ae2a777ee3607885874fc963b07d9c088814d9846049f30bbc17ec67245e0dd23527d254f330a25f407ed9a7186b4fc0d8a40fdee70a7f9e328bb08b19f0162788a0669034ab2f1d13662b15d15712a9e1e2c7e6fcfe9e1db1e233149eb23dbe7de45fce5bbd15b9314a7037d880763411e6b8026d89faa87002dc9dd4b8c0c878810e871528acb44aa538e3dfc2f3629cec2c524e2beae105e8ec58c6ec06b3a1778c468d6c4ed02c59f0108b230319cb5d525fa71374c16745fe515ba3a0aa31cca2bf0474287337def6c6ef33489db1c7123407532a19b2232a17e0aa9f0f70a8b289bb1c534c785044edde6d562e357f6db105ce6e43a7895170078d4d934809f1b11f2de10adc8d85b4bf8d49c0aee85f8ca7cd78ec2bb0669617b37abb17347c74dc8d904de27859fb8c5f06b06b86426c56c82961ee78bc8db4f779171af8460682cf93feb5be952e7ccda89caf17490dd768a5f7bacf3efe4ac11c08653b8592017fe59ea5546b7d4ef826a685a62bbd37c28e2a6712bcd2f5c144ec93b114645a524bc7fe5827f16d9b2783e5d8d1c8adb6b0746f1d152d4a71f465789406bd6ed90cef33cb752ffc817f5452f2848f4dda2e2fb6e61caffa89f930c505b04caec4ba13bb6ac0694b54abbb011113a6412e53521292a8fb4fcf9f5d2f20faa52f5356bd49de59a7f445356638f33ab13dd46e3f0e242c2f9c19407140179efb3ad6487bfaefd5241f35d8bd6b3bf7604fdbd29c58f9834e9917ad011d70443ea400f122163149dba6fee632852337ffed53e7ad666323d3871facdb0e345ff8fbb3982400f9eef8a84d7ab95116d821fc9f796cd6dd27ccdf245ef55f13d38cf0fd5329f164e557563567da7ae344b8da310eb380b0bffad6f5d29d2357afe526571aaaf32d3b4956f9527c45b5542000862a3d8f72489215e85308919c4447481cb3508e34d653ac27fe924a2aa19ac83011af10813958f87c130b732d6c55590be2ca5fe90e2a13e7a1b0aa1ae42cc5a240c2fb69b555d3e93b31584a52c56d55f22fb4986c3b7d3b0e2732af3d8b2764e53ce9b2cb218b2319d2ae2b265bece79f4151c2381dccff87741a149ce66c8c15eb5ca846c9f99e57e092d329b34db02bd3fe1e9089bab3859d0a543a6fe9e93677bdd2aaa03d7b1a70cd6d6edda88d175edff483d362ba85fc5144be0ab1097e8aba53789b4ccc881d8701b5a16702d0b60dee0af05937e3fb325479480d2310fdb50504a67ddb54c91c1e632116e57aef999591f6cab4f6a329cb1c46ff6ba948714fd39c6a308a7369806a2c84f605de671808a3d6b38be393d57037cd6dbe464b7d4a36d29ea7e76638ba6925c5b87563a47a8ccb37ffeda3fdc91c8db368a2484d2d6ec9a55cf48896839743bdc5a0bc43b8d4244b3cf924b424ba26953488e939e8bb426eaa40c8ee3a262cd248183b23825a794101524b3b556e7f648f9de826c5abebab144e8bc66fa6d16c9ef5fe1790f31b48a2e0ff7664ef5613af3fca817fafcf0ab5d2fbc1d6ccf9d6116825afee9eba2287ac7382c4bf5bf0f56f1e20df92f6249c28bed05ca969ed74285db5fdd9712f6701f60fc9b677f282611af428c535abd306aa0b75b9f1239e4ffbf759d69b6914206b85dc094cf86a31ec460806bb065dcc53df3c0629322668bc027c0077cd88e6ed3bf33aa1b9605b10f9120c2e6824ddb4a050d61f609fb81aba8832e8ca67f82e882bc0585675f30f96dccd3201fc8cf9355c2c9d43b8074daf4fa6066efcc57065fc58d56bbda31fc0300ce7bd7ce0092f56d576a1df43a8499e33975e3d25c03ffb722702d6cd812c1276b0eea3cbbe5f2a91c631ef4c17ca36095c9a12247db49128f6e022e5e14e179b41cd8be792d4fd5506404e034c2b889d92acae177b690aee7f23335d6f7377fc9de83e692465a712ecb57af0cb13c557857aef032ed719e0040fb4f28a3f830ffc2e26b2eca0ded91c50ef82d33f174460fc2167ccfd812d409f2967fcc080febea46113a3b151abaadd2f2eb010b17928a7043f05af1a396ec1ca7b81d0ba15d3fed12df31fcfbc9fe2608795bb568fea4b4855e9239fe3b345a155802e4a772ed5ed3ec9f41253d09365e5a6ef54534d36b7cf40a20853aee7bfdd1dbe6b0318bd360d74d51f94a449da0d2dc91bfb8ea50e60d30be894f758df0f7efff431a589051af800f08642257d14efcea7ba104992c7312bfb334db802df23ab7170c4e50deebd9b81c2fda9a649b6a3337eacad5e55d5c70bc2e21226cf83a16bc6b75a882243efa8ef55697f0024cd189b3b954f62bc75ac9d6e901ddc8b2e6c2d03354e3781c243db90ae8824e2217ac0573e03e6397b7c912b16fd36c8683c2e82f979bec3d3e7958e70befffdaf55f50119889fc78258d49c971a2b9047d670e06578654dba6bc278ae2f2ab94e901eabc3c13da333dcdceda1fd5ba14f429fff915c16adb43da1abb7064053f3303ee7f655524cfb1185188a6baff1971033a30a5a36b79961620c9cd168e47a97de4bd08255984ed6244dc717ad0a8a958206725e928c4977ce9bba39e01492c427d73340d48ca295ea6fe356dc9979474f8d3d017aedfb183db79c1fca9849b1ce427154842db779e7cc9fe64914719b100091b6e5584c08428522b03aaf1ff70942b87597526e5e7e7ff6ffbfc82b5d1abb35d0a236c2a5af7b7854709a65a5bce21241538f2b426a22d29822610d2e369e6c1d35d26112c777b956e41a52dda0c3c62d2c4dece66d657e2ef93979e1fdf9354874eec88c8a9aee282eb1849b41662342eb2c4edf1425040e095174392293d4afc4a2fce09ff9b8a4f0e4ca7bce997bd4b85a61cbfa2810272f06406f0a7825f9ab9611183f9e0d6bc77a31f1237e0cae9148074616a883656ed54f180ce7281faf97321ae2a2edf6bc36adb0df9627b876a0248f5d55f2591b3f662f12bb2cf17b41560ecc6aa77095de39b8323e1f1a78b4f0d463d4355ec595d85f02caee5c9581a3fc3b0a34babe5025bf3be0fc588d90704aa010b0af425a6146deb0bff264cfa8313b569fd28aa2c6189b2647c15d7c5361ce2ce4350ef30924f74e49445ba3f7301bceb8570d023640c5b828c34ce428dce7dbbe0e7bd3866936d0f8d8e0db7430a60d8e2bc6e0e31806b7659741dea033ac57e60d37a96ba7eb8aab0731ede99dd88c9125baffd5b79efe7a844927cc497665f689e07fe4d76d48e3781764212f685de94257bd193c49fc2aeed44be046dfeda88f1d67e1516f403ea5e784edfafa10bd0242687e4519bfe80afc85daad8528e29e903def5405092d1fb52545693ff66d59604e4513b77dc2f11bcc532baa68ec790f9264908c4b84d70558ebdad5d8d31e387cebebf5f501645864fce41fd8b7004466f0236cd003c3732a0808ed1bd0e62762c7a8d7550fee49312ea316817e40ed37bb1e491173d0db3044e1be8695151aa1469510d87f60f4d3993daeba75060c5e2eab2d47c850cba669b133dcd0558a1dfa89f797ed9ae1b3c6cbc92b08eaa367f2236210228cc11dcfdc3ed755a9ab0cb153e940d005ac9133931244bafefc80f439accd43ef6c18c9ad974ce1fbe454dc34022585fed196bee815b6393f73bc19484f72a53655594ed63fff3c61a62fbe937b862303176b28772aed9e5e437c68c8ddb310872ad58dc03dd27e76d36bda9f03631552996697b5675ba9072eee0328579f3ee4b563d5a47fcdedb85ef80773a594f8c154e590d95e3f875077c1fb5d992237c60750d53024583e357e3a4f6a3f69da832c16f7092a397b2061d2f054857c393a6e64e9679eb409946bd3c0382af94e9aaaf96dba2b059d7e94aec9260d783f2953c960229b48f11cff9845dcc665028e3664a562b61142c1bf6ef448392a13e02f83579f4dd5b7d1f42fd2681cf1121ef22757af55dbd28d62a351f353464c333805fa14aea7d2d23932be1cc356faa13931a5e64a0ea6220792e67774debda756957e6e3648ae9a627d7ce1a3ed45aeaeedcb490124fced367ba90e2e5a7ff0626dab9597dc720d05545319546ae7e032375a9c8e10828a8b4e60b026293e7cd1597225f6b1f9c5a0fdbb85dbebda787014a9236bae857368e49df786d285cb6783e8d39d5e861ce69477a8c9587a6249e5b7e6d1c27b07458d15d0ac320ad4bc9b17811519827db717524a0a23f5896f28456921b1763db3fc225c0bf77683cd3de58ac34c2d44ec5b0cd21d7d341bc4470389b90d8acf50b636271254286697efb9c1efc5173e683d62f1371fbdcd69c387974c991ea2388f27b1e90787b005c34bdb0aa89e3e85a8e66198c3a17c5f74c5e277d9e112359a19fe920ab9ced211924371bfc4999855d44677025517e325c39b297c3713b7851b21a0092bb4718c1e392324fc2ea0b5240536fd04782389532cbd57c3b40dcf98799f67276bac0aeefa6de809d477bdbc97a833f5096a9e021cd78b8c0464eed571810c00903d6d1969db77b8cdc7394a294c082dfb4bf3c330797834ffc3f960c88f9687edbfc11d5b89fefc5fab015562ece3b90fe62905a96dc388b968c2bd6f97e54d78ee65b7599c3424702607839787240e7a088714330d78c08a86092319ec7ce3c3aba1f1843c98a9e0f5a1d2bd0cb4ab80b57194083cb7e93345c3b10a2eb79f7b92d79ab52f3618fb62f8953967c506d6f3450a4419270b2534302d660849b4f3463f539777b3ceaef803633f89312f96dab0c579f4e7fb7d870599be4bb4b33498d932ea31ceaf83e6fbd3b0dc1c623841a049bafd0cea0c52871e022265d774174aedc08ffc5826c372b3efe1704bc0bca0229160be7671ce99b15d3977358d8a2a9da473e8a1f008684e43e557b4603665214ba3d1a5af3a3f9a0c6a354d6b377dba27bced87f4dcf9f94595f4318d2ba873cf90927649cd4921234f24faaa17f1c92176988ec9e1a43d73d428ae310d7e22201c92d2a2c8fdac1ffe89b9e756f967c3b32f14f73843be3253d1661e64dc6d96c0c6e1eb006a523ef6bd11925d3a68966091004005e152654f48ab561d215e5d218461512e055b39d79cc441631e7d84eaa077d6491d5e7fcfc4347d0be35b3cea99e24e9493e636f06608b8103fc6498c80ebd7305c5afcf9ebc47c72ac02016ed5306f6bd139a125930efb665d0cff43039c47856a5aa488d5d2f8add77af9d69023a6b06c175ebf92f40c05caab7e06a253b9b1051054d842ec2a55df1c0650b99c4ad5a5e26f487214919a2f4f56ab5b63332abab145721eda16e881d793e6edbc38c5d08424e1251d306f32617f9c55d08460cf1a1ab1b8fe427620c5489a6571cce1da5665761d1e33b48a7859817184cd5ad8338a1b4bd68022d3c4d82c7ec0445ffb4f6e82e2db052dfef306e803bd4eaabfb68ddecb9bdabb7e9f9ca1c043ef8ad5187507dddb9e8742be0b17a16fa56e2d9e9fdc33c43724de2b5fc94da07ff1bf2ad3b80e558038a2883e1b2ebab0a3d7b7968eaf69e05544fc1f200b43f8fcf7a397816aa26006c4ff604b47f86919cd6b3f79c12fb84e286dc54d66ca32c4b8ff17f37deb36c35d8d182143f79fb2e8171313705d131213d5902d1e03b8378dcfb6ab063de76d0929bc279aa18ed85b04a0af3bbca63a40f8ed946156f21f8afae473f9676ad7d7c8eaa8c05e83bba9d021cd9deccbda6d3a64cbd0ae755e401cb8138d0ef2ccfcbf3295d93efb37de21bace403253443fab18377970a9acc4f2954e8c893fdbb2762c488b574d084ec63accb79ddef6109908d33d66ab1c75c4124ba122e243acdc24c40c1423cec0cedb55c754da33a34b29cf03882b25e2a2442e671b010a5f091757c1b37dd77f58aad4f50acab116692d0ef17dec9f3b1e3eb6588e72ca5886dbfbfbc4ba1e1c2e867f1a077ddea5ba8ac5f0737020f98bd27711fd4c4c7455de7d6ef67fdb3b3041e47f5a0859b077868d91836381fbd8bfc09254a89b6c3fecada8d87d04e85ae544bbd3a66677d61cb99e345ebd2240fdb8b825cfb7cb886637b9dfaefa29ecede91a88696112f33f88c88262e4f0fff14a57073380f8de576518f2079c24ba13e43c04ae88b9e16b2c1a2b419c5359a2b1c886f5a703eac0d561a4fe5093cc9b08d92396b31d24863b27cf3a4d124839319b11060b3fe823cefe0d6199c8478021be2b7034e4239683c2b462cf196709c0855fd6b693c7af5bd15375596b4d9e889bd91fcd9409cbc01e9f8bed34120ada4540ddc751edd1a13a733363809c7f68e0f9da8a8c3b3dfd8cc6752370f24a21b3c175f5912c29e0e97e6393ffa43d6b38d48835480e223a0568b154ae9ae7f765c6beba11c90c89444f4abad768cb09f62e52007debdae9400c9e3c59524b3e36defe46e71182b1b135797798816f946c8f1ef48a96ac6b104df84a536fbe8d19f658dd681b623ef9bbc4d102537774e3efc779031674faf100e9141c5490b7bbbe9ab8dd80c306af9baf99421786c2e6a2f8cd13c62301ab4ce917537f375fcc548df9189a5b27eb7ca1fe00772b011aed0a17642fc5182f206b1f013517e8c4d3e18a26869c57c0a003ff471da7566df489349f078f54e79457a1d5a689100579ae089abaff609b6d5474399bfd14a870b621def24b70634501dc63e6d39479f65926776f46ec98b84788fc91eb10780a0ece148f599e10e19630b6de9177d4440949352a484daa80f8f07c46ffc7580d9d2c470b472b35ca5ea82f2db9406efce4dcd0aff4e96fe206056cefe5370794a35b47f0e63d878f0e3ca2a83d05cf66e4786d736c73ac45ab86852d2d0281b162921e814d13a288b549f3c498f6f71f311f4dbf118b8c84595288b327c10ae198aac5e1b88a7ee2b3640fffdc177ac390b59df40e07afbea94864448d66a8f245157ff8e82ca8f32a2fefd77035577e2640020066ff0ff620b228275bd6d258d000df07c1acfc619b3ba8760e9c423bd162ce403ed7107b1c932b6fd9d3fd7ff6e7e5eb343cd5d766702650a447f15408a05a5b8495855e7a96874e1b08f7a2951fc2fc8abf5273b7e7c54781183ebe16c8c1d5b6d60d1cb53d87a121c04586ab13e0e8bf0ad694f6602f6acb2c3467b400f469a288729a856d003e8b0dfe2798968afb303a2182fa9cd43157facc60625aaf25741400e0e0656069e4b50163919a505af5aa106612dd58ef2be325d179b6640c49136ebf9c632d6e17377840f62ead21a2f65220898849cf14e3a4a2aa02a7f3c6f73cbaf296b3f27b792f1b7e83084fe237a77581e0c3147433113d717a97fd6adc82bb504e264f73f1d407ef2defc33803f7e214ffc6226ee864d1bf23b735c6c50fa68b8440fdf7d90ab73c0c17a74b1e92f0682b822a2c3e4ab1a6b3e5a34b37ddc2ad9e38152538e14c6a5509a6e83fbecc83d24660aa6ff564b57af0b082c3215ad4d973f52734be313f20d71670ef2b85040cec77ccb3764ebc721f9506bc8784eb87a816277296a89bc0fcdf055f59f94eba9e14a3f0586864fc55911dc3e476750785bd7ac76d7b3caa2faa329a393764662093608779078c15f49d9abeb11b905909dabb3acfec6b8c82412747d6129d130d2a7de2243f0bc38a610d072a5b137f1e9c222b30f16a42598abeb6509701bc35e7cece73904426582186026d7464bc08aae0fffc4f20247075130316643270c900478568a088a9795647ce66d013845d3b82024228333cf055609142ab612ce24686679d1066bfb37a5658108c851db0961645ace780fcf8960650688f828684607d54d6d48950aa393135dac30bb3c99db15b1d27c6e2d448368b862ad14e237fad86e22f6a4b4596dda80bb98dcce9a15121d97d151d50a64db6bb73b44199993780d55c57b44e57e9d25f81d464b36e5a8e6b650ca5dd5e400c825bda853848d564de168875643658e414d142e6963f4874fddc43bd1434e451dfa29d7cbc18de8690b20514fdebd4d97a153798805bdbeff9ad413c506485249c59a672e83445f9c97374fb08f403090752b24349fafacf8f58919e7e6bb8f5c3fdaa32efad404804292ed8491da06e574dce7c51d30c38fd8cd86c8df0f7b309d74c3e4a4b89e6571b602d2e89e150a59f9cf3fd962fb0bbe2cc43afba39a33397e560a93fbfd469a5a9bfe28172ebea044a5929408e051467f3000f0ef1220e0f61f5d48ffbf96f4894f2f621ad591d253ddbe5788ad5e2308aeccc47be265366e2a1354466a3343658bec89875dc1c86ec3d705feb41cfa5ba3391444daf492fc11c5805f5b6c93be1749813d9d7e9d550e2f83b0f30af7fc3ab31106c662c8d76bc3a86c2adb2a56c01788fdbfa84390098d41a2099b57fd4d765ccdc312daa432acccfc4e355b21e5217914c1c7c4afbde885086da04ed80e6d5af4e375b176280bf0cad69c44fcabd9e7cae816f4abf8e76c86598fbb5d8ec440c6abde7628ba39d2e24cff0f385ee6b2585623d8d5365e573fda8dfe4588df96bdf8858eda255f0a42e170fa18aedc0d923389606f9848ae8cbaf71020647ff3abbc05943c72ffdf041ecf2c508f6a63d30b23456cad7b95a67915e0d9648b24722a666c76b5a18e29087753145bf19df96694683df2462e87dfdc723aa3ee84ef02914e4e711d540623900545c299115e6b20873be70c29ab1971a02def7d0dfd432831845c81fc5e0898682e5f87892235d3946b7f6401990a9d077ab21f37f52c7737b2b81f05e2106a423dd5fe9d6b69ccb71a99d8062d995e6b295fb350d3120e550485e58a5cc1da6e8e5dfca86bcc51bca58866c5d938f6d70525e37944f40f883ed8564aa6c359556d201304d7d4c324f7bf2ce4ad41433f8bf7e5e0e95b0148370aebf08c67e8286375dc7a4e10e401c1518b97e411fec0476fcad69a6e9abfad533c0b2d108ddc756e3ffd73d5d7bf1f2001cc0c2d3a5946233cfc34cdaa700de442755edc77bad7e48156fb610119784295651881c8b8a9607af82be3a840c0de8c2b35ffe5ab4e33708113619926fbb7eff534651908985af39a6b18d85c8535f55303f5ab59978ab44b3f22fe06814146bdb13c679eac42592720d4252cc36e6632543c0cb9035a7b4551e9571ff129e6aa2126f3dfc0de01fcce3dd032a67b95ce2ed946089c0210178d743f9680a00e27a5f34b07451d684829bbe976d870ac987840d798a0bbe94d507370e826d3a0ee47cc7b5e37ca71d3ba70a9c557ef1ab57421ce30c9eb0f93dd8721a84bcc801a3419b434090daf495671c20d0cd9421ddd216d5287a6fee36dd958c872dc4bab425b745a0d2df06453e1881e4b0aa1b0b032cb20abf6939aee6e5fc728a7364f6456a15b38d9b57438922d0122aa0e385afb1fbaed74ab625f3fd258fcc57f8a1f8793b3acc490031f601cc0ec73adf137aaf65a61b21cc25819011c7d171a89463b9a2d2f9de91817d3249f61b01c282537acebf1ff45d173abbc032aeda2f4cec3c594c9ab71cc1c8574886ca1ed7c7456b1aac61b1308ae19e3239dd6f6cfafe7420af750535cb6740e519391efc4ba1edeb3387016259acd4fe41ed94a0d03f06bc8babb684188f5ba26b7b88eced59eca4fc8da3c5b53a6c8133a378a864ed744c5eec7d91e70b50cca9b22ccc4b6d567f1b66dd45fd13c022042d221480c8a6f84eb92cff54a468a3a9a2ab66f5c7508c788fb4ac4f18a563bc5b1fc5ec489717e1db77e0c3e32aecdcfc6981b36d9f6f8109a24b555ff24e96459e45669c27537110bdace215448551223afd85c8b84536d3b2465e6fdae9ea5c930a3f61783ac576e9b2df92477a7557712c1973993004e3cef2d56235f3ce8ab1e6773f61cfee3d3339f064885bca90a522a7b990ba3a7c146d5c521f732fef424fdc6cd81917575dbf755c356241f724eda7550b2fcf5cf33807a4fd8cdcba40ec80cd74753200e7e6ddede1912e9eb7a10a784c53bec149986028131382ecb208cdedc4130953e9e0bd7f8131844405225cf1683ffa1c3ddc081c169822c6ad5882d8d227fc91ba49dd2df5cab222fe0b01c20fdec2f141aee44795c672963c114267392519df249973c69b5f0e518d32e09474a6a8315c076d98ae29f46bbeeb7eb52094d4a106610d29605ffe78ce5469bfd4ca68c171836ab9610640bbd6d1648107fada95ece5c7dd8ebdd52071dd6f6a62516b00df5fa5010872d391a38734691c2ca87c237d29e8565b7d51904c5a83a02d56ed00c3c656a51f9832985dc2aec220a9f45b1ab1cba717fc8d4b0ac76e7c6ec9f9b638eeb1608fb98844d7b987c596c1dd0053c5d06625de725214d7a7d4b5e03d10b2da10458115d12d086123fc5fdd4d6b80c6c6e7f1c14198165c03b4aea00018d4eee120eddf35274cb6bda0b105237a249f7c6333f5073d861b3128c54a358024c5ff024d44075cd76e23b3da984842657e20adc1ba558465b3566809d9d4fa651f11d1a1c2f0b0bd503bf68ae7a329f7ae206e75fd0c5282b9a188d651b7304ecd47d3a04ff27aba0640e15508ee5ff88ba35fafa536e9cbca79dd137b3f6691312cfeec3e852991a404d8b497b1ef9e08e606384b36f4c509c36686181c5331ec586deda1ff3cda8013df077c3e0b0c0fddee0689015481cb30907c72ee28a72d11a538abfc6c8fdd99abf3a0144daf475382ae642e8d0ae041f29182b34fb874fa11a2b4951977b3815223f77d5c12ff0524d458b3eab167581565642e53c0b8b2cac4d7b53a2aff0ecace8f50ddc39097f06663b3f170332b22522babac31f06fc3a3c89e4b443061330de3106bb2c6f259c9d868409095692b140ae2362e0f41d4c8ddef01812b7ac56bd8b55a8d4aedd333716ee5c147499009ec37c5e4762ca603b8f6b352d41b81b538184be11927886da1710ce60d2682d9c40e871dc439f69e04bd409d7193e4eb9c0834cb02a46f3ab93e6c58aad3d35eca6799993dcdaa1579246b55cdf438bb50961948da66de4452ca86849c8b77fb83332d0040e26175e690dc1efb7daaef454b3a897b0ad68b5baed3fe5a3f54b343d40d3d3dd1f985725f71c911f9f97f02d9adc1742f312b6f7f094f5d38bd7e6979f8d7bf523789cc71a843cddd5d20663bd2341d45a44b894844216e2583ae11de3951d7754526b6fad047bc057a89fa9426cbc26b0fb3fed2ea1516fdbf659edd60e0d9bf41dd4d9fbeb4bc83c2573e854d1fd7e8ca7c32d2b5c4e28d745b301f3b0de32091bb24c23c387ebc8bad09cbf559ef8e1a2df42f7d74ee8a0c94a268bfa77c9f8d9845580462d944092d6e96b749c1f07ff77879e0a6326cb41f366c49c93b90ec180984026cd6125325c26692cacb4898b49e036479e6360bfda1266c7ac51057600e91dc044d6bf1c7acbaea38900b4a23b7d29e8f3773dcf335423a7cc9b9e15b032f3e5c785699870e0827b93191f8e60bbfcfe19f6b1e21688e1d5fbdd0607fe63eea899684ab0222bbf71f6a9167b33ad6f506cecea6719191d4d44d0bf30e417229eb9472be858377604e7c5b4b583eb29095f1ed9ac75d1ccfcc9b1fdb83dd3dd5dd46e56a61993d5f1f6224cba6a8a1e6235def99b313420d27cbc132c9ea8333e5daa0a322c6b5afaeeb66037dff8485ee0349afd7e30332f933e0bf3018e2783f5cc2d6ebc970d2049382f2272fa43d42351ef55c91103bf4d64685d322f5435c39e4b0159ea009fb05a1f9adb0f8d82c8f243848adfd001756cb91c9fe94f203b23d988c24983c2e7edf8574bc4b90209e076da55982894678f6a2b7632da89f9cad4c7fb3fe366ace3f2748c366819a55150bd9195f1f46b5b0790b6071ef5c34336576718184b5c560b1c5262088d871113c3db35ec9e2c87140ac84f452b6e8232db98eee504b3c2fad170425e4371867bc5ccbeecf7a586d8633928e890186c40cc78315ce026aeb20a766ab8942feb24c940f0a600f9f67e2c307a3224c4ddc03cb370ce80be20cad0d2fd89e2a59e7c1fc76c22a3e4513ebb1b0927f4d3a88178f540b97836a8d9b4c67f634579e2267b7f76bb1173c100c6e49c20fad142f258cfefc9f9af06784b0246711741cd8a59d1b5857d08e725a16d9a8426da35b75b82d1502626fce80a557a48ef2ac54474da49c361bbf6b8a7739d155a25019ca0f05836e10684f8fb9d3898605cc4fa39507876c739fbb0b54622e18aab484aff3d16e8c525ee403abf839bdf4667268461c16a0c2d4f4882979262f54820c893cd21c86ee1feb85c405a664c65b07c397db531a1dda611e0003fe5ba4e8d441a89701e47cb533d5baaa028dc5adb55384095d8074961cba7bf834249b3242189d28e0968940a83d206affb11bfd4648055290abcfe3a667dbc9ab1c3fa24d13f83ff625e43ba2309e228dbf9b630c116e505fe62ca0f72e5296f18cf564683b705044003ca5f3f27d04f3803e2668df4181c2ed6fdbc1b214f6a61ca690dc45163f0fbc4a8216e92ed439e22f4ecb2d2584174e73a52f98a21c3b36b8ee3103bea1b57d74e321da70d6647b294407cfbca30aefe275243bf7d3bcbb7709a60adc1f0b058d1a1f8a70c3c00ce142796c64b761380dc3d6b011bce0924551e7f128ce60b89b011071c1e49215299170b65ac3b5394b9acbb920018f1ea36258c5b7f54fa67d12966a3f3ecb492641615466e48816abc817401faafddcc2757b5a216ea445ff49463bf89dc316a6a85582798162715308cdb17457a62d079e6fa7d294344687b365bedfb363b433450a6d6bf2e699ab966499a29db23de5f66b4c6c74a206c6b3c07d4bc752c7a04bec08b9fcb2e4e349e47a15f4ef41ef562025e61c8902976a0130a52bd219c0ca44aa2a68a987380c1878c6210d37e0e42be04497bc8ff9443b3864083d18f16065dc0aa8ef83b26fd1e1c174e47b88fa82deb0e20859d0ab5a8057d986f73c44c2fa09a2d9741800becac5aeec5fa73a5bdde18e677a9144060b638655484ca35f96463e9fb21badcc89e496bdede9a37837a17bc882050d7497e028e3db0e20b0190636a0369b455c1a135f62b36207b99c5dc063e1e901a5bb512dbcb64359fc3414718aa5ef8f64d47775acc29e7fdfe40b61f960f1416f1ecef61de12a39db8315ee00ff92d147ecd85ddab3bacc9f134b77e5a997ea18b785988c20d6220afc33fa51ba9ed10e7b7c169163af2bb6b57e139f347dde42f44f7244eabc17f0c38f17a23ef424957f19601f3b1f80417170e8d2bf43843bb4ff5ab45c4da935b81c9576d7d564b5604f72b0f3577c15dec7b20e9e57343ec31eeabcea936885d3d4c9f94aefed47c76fbefc96a9b1eaf498f1ebf897b1e886dad8da6e6e83e01987e3e37423faabd31d9ebdfefb8ad03d50f28836449fea432b490f72f98c9835aecbe1bed43443434df3ed9757f39826adb570c2e13ca0f47a030d8cf500e5548df05f6f13d29bb091e72cfc14ba46a02215ced5880af4bf12eb9180c49fec4f6b92d20cabd442202d370aad86155ee9dc07777a81ef98830354f6c272ee23ecbe9dae7084341d7eca91d0416f949f6e2eeef4dc87d46ecf6fe65e3d59479b384eb06a7dde687a6445649107bf87f986349c64c5a00ff450f7ce4bbfc46ee47f029b80b44ca5add865df1784370760a884cf003a124c491a527aabb72e519482fa30344172d41d7693e3b4b70fb0b5a36b89bfd3160769625814e9d34734f7567925f2fc19f31a5ff318f45f7759a893fb1673f32e3d44ce0e2f15ef0725e3020ef837bb0290dcf208b12e1fa5994ab3c1ab8f327a9e9250f8485488ba8369deeefde9e7916789c9c575a90a3e1cf316dbd083df660717e87311ad8e431b8ec17a3d155aa413a38a874da293a4d46450c5296ba2bddb53d14b90c37b9919c77d647294acc70381beea57303528bcba0444cf3dddfbe93387a5ce362da8035fee6d81de7fb68649ca26ee3f78c4e8c27e43e5c7c657d2fe9522e95b2e6af613b8e1b7e662b74baeb1543c98030ed0ececc508a40d4c13ebede12dcbbbf2d9f6e8fdcb6db320eee03133caa23c41fe50f780638873741f0e251b446e6f1749e126a9f54f229bd57f7c183eaef7ff6a50ee79904f2465be3b9f6cb16ad5d445f9bea88e0cac194d730ae60c9211cbfdbb128d2100c8e469c87fbfbf7b061f4af72ff489cdb797db4a169ed7a1a63191b5930c8fd6de6b91d9b0bce0d2a01fc8a23f549128d2f2dea48bc11912d86cd732ae0c179550f562e41a99041f0a491d864006688ec783e48f728f38db54d808fdb512aa9a7c8ccf34c61d5d965555b43c4e51db37c10f06131ba6d1131c16885a95983ddab0e152803da0fc0ca8885cbb12ec9819e76308223c65e9dbcd6e2951ef1a03bd4eb3dca9beaec04ba67a85a6dc95bc01233d2c89903bd267fff67ad0881fc95312d137744827724792732cb70d0af17e886f9dc0568a5bd6bb52965f3a1ece052f90dbbcf9551a019ff8832cb1c9f8cd4d38d01027f3893bf5119ac6f0dc5de6fd53ea0cec6d866e4fd89d514835b1b548e1d307a2588982e63e953b1811c327febd83fb3e9e0b482a6e8aa6c6347551e40fdd09c5ee44bae1f775092715def9c2ba87145df43131b7ac936036e5c091daecf0963d4d2c6243057a31a9100b7ccc7a2a940f66d1a0f74a3c4c146e6c363b7c3185ed626a71ed836379607b22738462916032076a846ba4be946e89cc0a674bb144571f26bbd68d9e965bbadc48abb5c2f2616d3f1b5c362c5d8d6c127ef1c0b517fb820d543700702080faeccb7ae12b54bc2afd6f901333c39b72b328a9a11226b0d9b63c0c86ee30cb2d30a4a87d22df0118947bdc774c7c8955f845ff0d812c465acdddb2a532ae3244811da6c6b7537913f4c3583a72c01e322be998bc6784fdbfaa6bcb8c2830427ab3def960cbb99b132db2e00f28f9b44a57f232e66c975b93a0804eecabcf5fc250d1c29129a6e8c02269c46d254aad81dd2cc2e072c5c82d9ddbbe549844e8339cb2224ea2636404c7d7d87f40c6a11e0e15bd946f874a9730ea946bac2c50d0aea443c3f3b03c6f1dfe9b01bde72a6c3d984090b0a0fd32fb6d54ae59b3011a450a504c4423d68f9154a06f139c17c2f096584f8c9a37bb4eb6731f743a4f6bb0e55759edc222de0b0d4f8a0d0c9a71c2ede46ec6555418557e6fa5c2aa2684b9c28c7253fe23fbed1531e4ac192f4d6eb73d77465414cf01d5a6b7fdf7fea63355fca1fde8b6e257bdb71284868410ef57a4f2e9d4524bb661976f7612766275d1c3c6bdd302389108d5512df783603d0e93c953b1018b3846d7f33fad2aa65de898d6d90a80ee158ccd42623feefe138eee1b85a5911ef3501949f7201e8917e204483878d9f5caf54c2fa4041034276895d2071ff4a6c171f26a144ca0b18db23e5fdef6f91087ce894cc319909effc2e2dc1623df05c92a3408db813c799c35d4c172e75911db490c93735954c361d62c0baf20e6a47c2c241a1dd1074983dd163b6ec6e934e3b37a65df6149eccfb22a294a9324c216ecfee7924cdf788188cafd2dbe6015d908c51eb2ac2e0219f12ec10fc83650a54e05a6049a5a42aa90b812b4f0f5ad73592152146f0bf8f5648c460dc6268f384fd55aa5246c8fd15e0313f286c948d0aa68d7bc5b3116aae63f27ab9cf506ae3d4760e23b530a7e405e9b5750f20734488b2bd7d75459c00be8c0904f963ef9a564e22ee0c5c024349f524ec20600fadb11bfef1759aa9a85846ce82e7ed14b98df90c497b582896c460184af65e694524401274975281c762df1d613dbc229f7631e0bc6ed50cda62a669cd66ea30dfd4d7fc495863156958560619aeefa6721ef54a36d3904a84ee774e3ebf4ed032a1c4aa0faf9b2e3540e16dccbfa295ff52bf16c6d7ae4693cbb53c144bea82dae771c5916cba1b5aa5b9c498ac7ba4607874b3ed3c02a08009ab37b809aa250d3f36c7c5f760e4c67ca7fe7ef667de4180b70ab6f58fa29e92c650889d45f798b160aca9fb553881579ef81af72d35555c68c152b9395dd1df95a98b4a4e2534d0542ba283d2f3642b622704a502bb6592425e3a618c0471171c89cfb84b9dfb81334b00ad9042891eb598c760f38ae304c863c544a2bbd5f0428330204315ae992da709d2f87025f085d27ac426410bf51b461bc248ba3926e1d44034e31a545ff2e13f7d043892dd3ad00389ddeff4effa8ed80eacc6a0064d65652b3e2d144db8e447148d6073ffc89d69fd31d83baa519260b22564f0bfc89f351c36088145ab6dca59e7d445e10d4757adddd86fc220042e1fd7fa62eade5d15f07efb52ce3f1f20c363a5916941675ba6729372e8f80dfc302881dd64929dbb2b578659ddc976318e6c582ebe0a0fc031fdce8f4a1cba53e5c00e5b3ae2a46c024ab326fe994b715fbbc777fc876fc4d900b1d47109ba3372908fa80d02ed75a04f7321f6d9da4ea2f1a9d7dd102f153dc2ca16409689e25d9fc579851c645ad85912cb213b4552cd07ce7a43fe56eea0279f8d9d3faf6053f9dcb63c1e5c1ff24d2737e7194b554fe1671d3396181ad9f6d94c39e0ea9a305289a907a44cbb0febeed3200e287961325683f5806a79f20c05301564468e140b4c857f4cb49310d7ebe025b6b6f67a2ecdee9a45aeb79d8a68c0bfead060f0d135d93e9f2dfd5e101f167ab0fcd94b552331cddb57387990df3b38a563fe3da1ed6a580c60735e5d8b06817c3f61cf43d3dbd579bd373b31615d99cc87a8490eb4e8347e410ed721a659fa10eb35123ee86f3d5895ad49b0310ab64eb02ad2cd18dceb4609832014af38d92c438d60ed6293ad3e1d016cc7aeeebbd58e67224db30908ec1cbb66163053c9f3bf9eb97c580bc5a45b7202541e95cd574472cf34e6c97b4df56c993f374c86fdcb2c318d76f764189f509a110155d068103ca42188439aba348461e420193855658042087b66385aee640293d152b82c2c8492440af34653f5777e8edb3ea1b416151b5760206825e1ce6abff5e85d3e2d222bdbd2444a513d6f365f4d99ed7917f970ec2ba19562007f06ad0a3ef44d90b6d24c27714a6186c50da85cdc755aa456cf1135af68ad033957ffc22c27d417137a159c320c7d1c378de3923b2b1ed0805a4b8d89a375e6350bc607be3f669eb28f5408ee350dc90cdeb05babbe1385dd0871732550f5893b7ae822d86533bf700bc5e2f1e9487db9f17e790cf28a29f28803be0c7424f5da09f626897611fc726112b361863e158f036ad73592746f1df46c77332ba7e7189759041677fce8f31ddc25a40f856be52b29bbfedb3c2b11dab93e6adbdfbea6716f1ed48201b2ed794aafa36fc1699774b65f84551eaabcbc507d0568fea83c53c2dc5c01f97e0909e06ff19b1199d64cf6c26df77355a471de7456143e06125e4b5dc19d2ebc359ec052578933ad6f29531ef977214dc48deaadd8daf64b37ced474d865061be2fcf18e16c91fac7e8defcd49d8bb6b872f5f542ea6f472d92244c545560c18299abba4dcff249663d94ec13de5c568bedf890a98f8d3abcf536010598998d7d06fca1f601a15ad702c5ae69cd73ae64f5c08cf5139578d1b80adc7cd20439e9fdfa3c001009777db66550bed38755b931a221d282396740bc112d1ede34a208fe9e6ccfe5a8457770f9b8cc6e0de5960b4ed15854d073f9b784d8a92d8d3919634a94b9ad8a8b1d913d611e86f87adb26224a30fb106b2938da4335203833e9177aba736dd758b05110b0de666778dc00b147d810b398464cfa9082a6e4fb592f5582458c9b3b38416bc1ce2a75b0bf0ffb12f502620dc6c291bd9d55e5961d28d6dadd1c03cf600193c220431748a1b40b0dc5835981cc4d002ffcc1366240ec1dd7e19f83ddf418282e4bc0719d55cd31edf01b628eae47199f774a567eb4477fdd6611108759680cbd82ae1689ae3c3edddea2558ab7923b262c41edda9221b55bab63323f474eb6b96fbb0febeeb89db19010da2ecadffcdb05d4739c18706feb7da623180781920d32906297432a86dc61a7d794457fca06c0ccd1b2f9b1ba536aa25c9c046faf8fa96f8b623bce521a361e6dacfd3b806963b85d6b042f17b13e5190301044037295fbab145773f15dcbef7bebb8c176f18b9dd0b3f4b9280b4e919188c34dde36c79808d4df3449402148ac2ba53de5219c09ad5a5172aea3899d656d8f665da7ca162f0fda92068fd329143bbbe4afc597ccbc9c961b8311ca6b8f420abed412e34da7e0bb5b9ec7178c80def400462a1e6110aac15839df9fa8ca9350d10f01f7bff27883e29e6c88c149a334db2d7b013bdba6d1d4c8acb87d82190f22bd2513c2d1ba010654af1effd5fe6be70f8ee08063b7b07cefe7157080919d388e516eb013aac15d8b590407068a14579b3118406f46ed6d2b8c6dbae4792624ef7f03e468d4bb0df3b8143ad7cfe82a497692197335a8b50e6a81c871031a235bf38a655f79d8758e119c7fa83d5f0fbe676d230d3ad3b3e933e9f13759f3f44f41a1f234769c3ef112c30a17d919a5ad10d8fd548b5c333cf135bccce88349731651e1329b836af91df2cd7d28b71fa2adf3a1c9aded9c03c1dbcf96cfe04f585530dbcab40f428f2fba26b0c64dd3f2bedeb2590dd9fba22f4c0f4a7b9f8a6418788fe780b4eb01ce3272e4a48ca9eb0a30a6a77dfc4f25f6d580804bd52839e61d795959e333c73bf1bf4868d34cf7aee9ac1be940b5adc1b7073538d820c8fdc9ce3a46210caa6eee1b21aff71e209cbc0bbaa07c09a36cf1770914a9789bd2ca03948f692d47135f550abbf1a5c1ce3ff007b280de14c7df0de69bb38a5caf1e2e46d6b031daf349b2da0a46be6608db2da63c9355e2815f5e981b09cce6a16523c3145103bf3021f7e1f39d17d5f6788a35e7b1bf429a29a19d5572c1e63bf3affae30331e522274635eedad80fd6a40a7f3925327aa9429f015453eee4a1ba405d7e1939cbd5c450ce8abb8d378b8dfe758a2005e2913d2d7f2dd67035b11d2ef48a22bdfa2269213a8502c5e01ef0effb6a7ba391e622e68c9c68d1dc443853983d8bb640503061a4ef41154128e8a978c2f29737a91760f0bb4b0121567fe7e34cbf7c2a489f98739776518b0e97f46a250e427d1eedd454370950d9805d4e5490e978980cecc780a205ac1de0743829a6b39ba0e726eabcd2c68778e61ce7908378ad664fe68d396c161d1fb2be1d880d099bba251ea232a85ed1d5e9a5034a746943f822cace07db91d0971da418fee793ef9f989508abd5e2f1235b5fe6c97e6d655c91cdebc7eb66e1121007873d272a109142159d08ce03e7e2852e805d1976bae6f353ed4d9d3149a46ba4a1b10c96f810f05631c257b9e7a0fcccb4cbdb77ff74f874b94eee1ab0b855b5940f130c05b649c4c269dfec6cb5d1ea337e50d7e39e5b32872f7e3b7fac6af7259bf4c2f92b61bf5f2550b27e8feef9dbae3485a382e7f908c3998cb39fd1666ecd1cbe9b24fa97720b43fdc6b44cc755629d01f25450179e76697dbd5d8e3c9a13102fd0faaf6374bff86f992669415d10384b995b363118ed4e3e652d7ea9de9afaf391e457b6edeb6a3dcc82db6f187dfaf4123c45c06e0949989e9fddeb2466f335a79231fc76a6bb2f175c6f6ab7663ab964f481a0ee317fd3038b468dea2b8966c8c024ef0ca4bd7139e03c89639e146900745c99b9452aa1350b70fbdf61982b2e54b735db2f165629a8fd6c0dd9184a2a6edd092dac5860ca5fc8baa363c1cf155186a1b3f4711f7c31f8949b1b40f280f4d22fa7e8622d5af57ff006c7befd2e8a9c4054cb62761c1e2629076770cd54e95d325dc9cdc0099483d9b065cf1b070a2d3fd37276a1fdedeb2a6fd2e39ddf11af23d330f1241231e67ad1615c041fc084409adca552f22eb16b324fafe43cf429cceedd9c8e2146c3d2b2e7c216d9d91080dd8c47276501a1a1992ede76dae7d659703cc22ffba76ca6cdd5e5846490c96e132a312630deb35baf9fea995ec6c1d38b5b51aa6d9178da7cfc78a4a7a8cd6bdabd5e527d6ae5beb11b35b97542c31c7fcc2f4e71cfac8245f6b5efb8207717be5ac9c4be0dfa0d2e5c47483c8ffecbf915cd44ae0b3c88483f4a942b1faec1755f67ec4a47c6999f430188959ab6e8770be14009b957b8cbc8a324b1d59c0d9dda8208765cc044cbc07ea1800fe544eacdb8658ca50d815feba8bd2e2910c04e8dd704cdb469df66f42b5383883daeeb10779ba99d73ce96266c28f1a5c5ad5f2539d4e678b3b8a2f15e689a222e4ff5eef8f04da70d9574509f2cf69c32fcc8b28a1c1ffd2bdc52795aac27c72a21f99280a9bfa46e2a43b0c346020fff5562502b9bffafab587b5fb63638869e263391737e3240d638cbb36cd119de73b3547bb88c0554faa19aed0eb72ef4f3ea1b8e1387f56cb36ce0c494122dbde377785ecffbdcac469121c89464ef7edae2d0a623a646368353b16a5a4a824c224467efd903cf70fba0113b95fc28a66d92784c76afdf35623776309e91aa1bff51840273b16031ce167c21de08e4ec9d2a4cf8ad8d1c8275d2804b0e4436c49f1d36671224739a18347ef3b0fe488cb1bcca8ca28f8a5869ea35fbb228a343dbe56e20568ecad67c88c480122644b84a839204d4a9566ece303fa7cc19da218dd122e5e3cadf47fb9b4d3ed9a46aa5be72af7dde83fc978fa8534bd46162b97f003092feb40b5354dc93f77a0382178317353124dc716b7f7748d56ec193b1f3fb878063069910ca94b03167a119d0134aab805cdd913872a2304cb8c88354e2bbe3392fdb9812259c14d3f2e8960460056294914063537863b0218a0c401becee20a1f6dec8a97ec32bd2f9336ae115924f42e4fbc42fbda0f0fad5a4c3c3e25e00fe99fd876411aa0a1ce8901ecef0362eb4d04da6d86fad66b6a0b2e21eb8956ebe27e3e179de993a20558e5816fc5b45cfad5afa5c1c9cbfda6c8e19c2724e7a71d8113ea127447e05fc68777fd7d07c59fbb795c125914e546e643f8367733685ba2bb80ae686833420146770af1c1fefe14fc76622b4f136d9eba6be86fccf1fcb036f6adf17471467491808ab1133e27d440299c7e37a9d22a956cf6398cee84f7c575da3d4c8af7df04fbdc84c839e5695258ec36cdaa098bb1f9fc097b087ee4dc4c981f2f97afb432291ad87664e425e69c3106f196775d0bb777ae1113a196757e7c48824fa543d2960a6b709ece6b716577abf439b4c4694093f4c8557033e091918ea2da427deb106798f56879e2fed4dc16a183fb51a13c644bd508209ba2e3da9f1e9e8a3ff416d43ce825c40505a26a735c6ef0aa56eae538ac75c9cd1729a0192d85817245e63c861fbc5123621da4e39371cdf0b4c80b0f8b24aca69606286ca82ac5c9374193bc7ec03e762531b2fde79f0f5533fcd7ee2ac8ce51025a5200f2009f8c402432ff851f4d2fc1121a242cc718019b72bfaf107af4558e7247aebc464c0a5a79d8fc042fcc43122f0640a4ecd77fd8e67f6fda30b0d437a1d17f6883d19a26ce6028933cb728c5a8f88379c61515ad08751c14f6e669f069cb6b3adf2508b837cc0766a88845d7574a56e75085b25bcc24cbaef773c3d2a247ed3f9c8a044d8537c0bdb464d16176d80f56bab400444d224247bf8036aac49face0ac7813e4dec5165f6989551c61ca038dd3dfbf78f39622b29d6b4f4a5e892c53413b51eb92f3ed89afa58872b2e8493f2ebf7c89abaff5a04836e139ad459bb7e745fb7fc8bf081c78e4f0999dabc0c9ab7f5d3d1101edd9e32da601544f56c755919de58333281975fd29fafd7bec3ed95326b4851e296f3c5d40ea868b12faf6042e4f543dab7926e72c711cd404cd84155f8f2f7290548f00b6ffdad5edb3a1948e0a406b6d69460ff45207ac03bb4dfd27b2bbbce5cbcdca0bfeff9b138b0a5838e99cac587247ceb55151ff53da2c2cd2e7ee2e6dd46172ae2b6b253971e44b998f9cc8153a32a0b904b643d554c71a87954343e38ada702f2b76d9a0117cfc69fa3a0cef4013c74a3123d3dacd4802c984bee0560ea0d094ff3157641a7e98e5345eb47ea065ddcbdd3f920be266aa1008cc0d762bec5301d5065b693adf6486290116c805af08d779520840ce893aa0d3ce2961ddb7702f6221b03935431b839856e8b827a5e9e58c8f9f028aeb30acd5305e8f9fd73d30d3fbb3036ef8c34422b90e985789bb902773da375898f8780f6f0723201fbf41928dc5177e229897f46ed042da1a02586fc42fc777e4da21623f392ebc2cb7ec76bc7b07c943c09b787ad19c06be2546d4d8f82b25aa39d3892e39141213da947a2bfc734701126774eb4f9535be90751ed1732461479dc5cca8d4318b2a548607f9244a3ad022e1646b3d3031d99d7b431426252fbf41c3c433c299b02edcb9db46d81a4b3c1470565c61ee4881a8b0e4c2826d25471c13b669409270b36f27b9d7c9bc0a161cb44ee2faf2be3f60bcb866b944713a5e10d812f0773841d5dea35a053a8a56f5d7808a90571c6f1d0cd7cba9f9361b0f82e9b84d4725b576ddf9d5fc359959572b6b4c52947ffaa02b7109e2967bbee542dd945317ab6ac5b307ea57c8916aa92a2243fd2a3369191afc6dacc2bd834a546810ee36c7385335f1bce573dcee0d66b29a3851f41d08e9c9bb007bd08d64311ec22f95185282a19c6785dfa447f316bff3e08a2aa3fbd4f1ecde07f2663b4a6bd53eaee5ed47cf2aebb3ac3797666381eab08bb2066f60682b3e3b0e02d167f3f2e9d4f4b4cac44ff14ba2c477bfb10873efb74b3a18d6166c5bb90a8ed3ae323bdbc37abd381537dcc248df8c5de6713d63743d25da6cdb231d91ab3c830b470da396288bea7a93996a10a1f5cf7ad164227c523a5022dbd5662cbda008a300889268fef4ff66280f5f2977bc1dfcadd75880d567b1c45ac221170632f84af764b0d2ada18e43f69ad0a091050ea85592dc7a3af5df1a9fc175b985e03593b3e2f09baf9cd8774948730403409111deca7f7a4f71f0075f53c4a0b866aae2a1e5f55b3d336e60e197ccd54913491c721c9f5a47100c12c975a71c37decd61ac7ced97da705c33ba7cc494c58ef20bddee921592eac7b25f28083ac83ff9639629148f781f8aa6d0aa744ff5e2534cfd8fcf04d8a5f3236a6ac3afb8f139c170d1d49ee223a4e1ded3a8c6a0b1a9d5031f9f0c16826654d7ca0c67b445857c036cd94e8fc3de67ae46f68604c70ff9d97a22c5e386854fbf190f96841c056a560398684903c2f8f72f23565a66eb2e4284570c1eaa287d51a5e917158720ae9756275989ae5978c3cc4bd3cbf5b90935d7f143a1fc18574dde75a80b8ec39456da8884b5a3ff04f8aa41bdb9c58f4fed38e1f1e7171cf512ecd9191d9b1b812a856ba9cee828010e42fb9659ae8a2d0ab0a46eb93480a08c54493c735d2509261883daebef4d9a17efe4100b66518cf382b11cdd149112c2bb50bc68fe399a6557410ecce75b6e7099682de23d21615c7ca506a004da827d09a089cfbd2a0a5429a03dea12d8459d829845d989167eb137e66d35d5042b91f521043dc5e77044ae4727edac3a92252fc6318b61c9790cae788cd5e3e5f698b8959f8d72ccad56dc1c535eac744dd4f81fd3bf89ccb61e8a134b1d9e6ab891b2d1b20ead33bcff3eef20774fa84964563ece7d910701035a4ca227b4aad59feb26c45483efba10c97f1b6d2bda3af073ad9134480f51eb11b90153f666e3fb63828fb82cd4d2bb822d86ed0660601982ed667bfbd8e09c4f7518e278b190ff6c3608666bb0f64886db5a64f741c4157b523f3bfe4ed933d93ed65efb8663730332e1508553f1e6d8ac301eb231275243677c0ca7b4f4ed765e66a4cb345ca3eeaf9ad7e349ce61ea7af6450396fb99e63543b446e2de15f59374a7a40c6576d76e17436a0ff98d48d6d14445e87d69479347217a323560611e0a20b7d1aa3df87ae90270d2c84cafad16dde57a7bcc308edf287495b27700cd3f6610a57b4287e307f997036712dfc43bdbc2c7e82c9ecca32941d57dc9bf46eb106899f1c3624a228213cfe0cd06d566ce6f7ca0efefb692d6efd34aa3c21208e19939e2f6141c27b08b7efd3f2e6776219fcf169ca52a0f6159dc0f1f22a4cdb6d0ac91eaa6470c715d31431cf49159efb5a58902d5ee4cbcb5db000595a370f7140c7e3c59f0f98568e3999f81207cff440bb0cb3f3ef8257ebae501bee65a8a4f74e869ec1e945bb0b4e9b63a252c696945a011cf7f7f83e8f2fcfb7a09a613e41c2182c7185c7ec0132ba693f56d41090fbb29b0c262f9241c8f1a28cfde4de322fe21c25b3f9c046336608d24647405d0503050ca51240550b13fe9960eeafa0451cf75d132535d65cb8f6de51395c4e1be85e4b11dc9c0ec3a53445ba28f127ee94e30876a2631e4e11a62d526b16b2095607c5337033213e7dc039099451e3d9c2722bdcc675dfc23e41f7614a1eb71a861fc638172fb3d203b4983fa1fecb51e5dd948af7ba712c8cc1f13727012022bfd80ba88c44402652a82c52840f6a5397541ca66265d7a9df9a70e9282aa1a290dfa5739c61119957c4da2e0d577f7e523618afb9f1af34346b3bb66c540bedc29c099ae8a8f1fdadb6d7f41f15ff2f278f1a47a5de1a91dab19b5020ed0f28869d60ef6426b0bdf6b630f38612fcddaf1c3fa983da055903b8336a2c852da8a6d29c564c3575d427372c9e6bdd096aeccdada14579f60f34a0c9df6c29d342bd47a5adbbb2318e791270a8ef402603d52f53aba7e59d799abdfcda232654bf985e267bdc6a07af0b7d6324c2037821917e235745f8e63af6cbbc5cdb6d2702dd002456512f8b2e01800305f655a4ce88d998473e948235d2b927b8c2a5077c185a951e7a3cce2468109626ef38546e35b8f06074977a48d2aabecbfb09d39721c16eb46d2955bd1c24f9ee0e1a713a0a5c0c9ff22935ecbdbc83768e16dfbd52429570b6c44b08a1cc1c6be334cab1313225a25d892547267071333e1219024759ad31a2435300a36133654c21ff1f0d36fb823fcf7e5eb5bbc0f34715770ef824d8c3955242718336d88515f287254b014b74b3aa9ba8323fab8d811db7fdf3115168732fc85977ae4a443cd2ee9c64887076edf9fa5a73905ec5a1b6b90910f2dd7bded68b9f50c39ed520baed1e1027b5a9a83a9651868e2c9e4cbe4231a219efe6ec08c0d41b8e30ca256026ee6a9ebad660c9a99cb77d1383fbbc86ae3bc1a7ec7549084388ea89a3d04861ef0d310e560f87d63527fb5338c021ee08f2fc74f9ffb9b8260683320deb329fdc8e724fc7662ceb9ca3eb44d72083cc73cb3f3835a49bbcd20e6847e41533e8a82fff2d2e805f4228846812cc7dd458bdb7b7f5c6c0bacb12d7cb6ce8be0455db81ec45c9764ffbe0235bb981685baac399c4776dd9e19d2678ac31ac10e370c0fd0cd8985dd3d134deed2e73c9b4c84d8679d6ebe00020c69d7c3fc09ac6b56c7e74de90361410e8b3d420a63ce0016683cd29a4191f56356ac5b95e8f7a4f07eb6739c1281f0e9a5cf85b049c580b184b307722dd385e7b23cf625598bc8415df08f14570f961a2d6c1d7e6561b9f650deadd511dd9ba40a3a578c3a080be3c6b8fa2d52c62d899f4202efeb44b7461f9b35588576372de8cb1edb8252a33febd5466f31c10e6134f9ed4b1f3068e643808c6d11d471ac2119e32d6548803df8dc91f90ab8a04ccb064c2d55e54791cbe26c211b46d5a762ec11c0a30bb4c6c88573d42a4a43554f95d63e578fedf9b07b3d65a91a491ea6f25c9fbdaf1ed6959687222947967814c69a4c9fb244091716d08cf77dfd0ab25737d6163c2d36333a3a1879293e49cecc48dd9e982f2790b66cb01393b50dd5626f7fea5f0ceb3f91be7e8f3faa823b87b579eca0d344aed5640d2f88e4d313b2df7c7e01476c4e2e338f3b403688e6f87e2a71a16c4de5a52cc54b1b6235617adf23696f9a913a23c83972b01a9b99ca50a781d0be53f4c8663552f92446f3f8270cf1be4040cf8b09fbf20f193b169db2302498b5ff3c761dc524668c12235ae36ebfd510010e654bde371c9725f31299f54e1394ce6c687abbc03d3e2beea09f8d9f52ba10d856ce38759f71426f6203b75cdd765e8a3b66ceb4590cb512e78b94b0f2ce04df7b24bc39843d21e5c88bd5ef5073516b6356948b15c0c1e66aaa4707c5bec515b7054f97034f0e011709af5f36218d0fea753e7845c13afe800127afe8c038e52d84b4f45419aa6c9f39dfe6b401ed00e185151cf7088b868ef208f535b090129a6a07114421335e6eaa5145015b22966a36c0f9bb9230a155cf530428a4c44d807bf5487aeff74e111242516760291e5f4955ae0be1b0065d95f6c5e1d0b80e216d2c5084ec9e3b7d8559f3c12743d7c621ba251d394ed5f38930c1eb777f7bb29daeadb0e76ad889e27e9126038decf3331b7649798b4f391d860c3a8dd6d4a3b2b83b2d70f52402f6db9a48eeb6536e0eab7bf2937989e12330711ed74daabfa8113d1dc08cb1fbb9bc51b880e73990a517c2e3490ef131d255edfef130d6550de8429d78698b5093122463b4ee2c21f6e75dfab82af24ea4f2d40b187e961b6641f4be4376ee9e5f1505c512fa43ec109b3949866a1c18719b658ca8026f136e23b161a353f0bc88bab894ec11a814d6af67e8f23c6f0af56b47118d5c544226649b3b9d83a8b9885223beb4adc36dd559bd82fb060ca710b17d34507e4f3d14f4d7d8937f001e55b32fd60af5508c4eac1fc0a651ce1c6c4945a613ec618483f73b2402a69002b275804d19a533c7a657e9f64048d96f650c9536c64c3094a4634de7d8ff2cfe6effe4fb46dcf7e1778f493e9a37918a58a6c768a07699fb59212348a823e1359e27236aa161bfe5aba5a7b93b22eb49abd675f7718285486dd93583efb2b6fddb3db504b813d6fb24519d16303b1d8f96e4031d6d695c864d3f60835411dc7243c1825124c96e2002776a93205c5b242deea94e5cfbe3df859816ebe73be047a0a9ee8a50418dfb158de9686aaa29ba842ffc30906bf71e0f2b9880c37e9caf82116f07c0813744f4cf74bcb1a81e821c70fa95738a189da86db171b21d06c41dd45143812371cbf6bef642755f50a28b318f1b70ddb721583efdba250257c24ac672ef45686a935da39ee4914ab51a96679e7bb79c0c9ff5f41ebd84702714be8b894d61704d46b415177ad98fbd862bf4bd0cae02214606ff60442b426a9780ed7e1113ea1fe87e64eea45285a841a9282b83f34183a1fa48269922e6b428c521ccb16fa9d1c3da535fdcb8d47f15cc8b625c474b96148d1e48932308ee604ca21b646dab2ecdd6cac2d575ad348815aabcfb043d859a15be1ebd1659b1628cb7e26a326dfaa8902ed6e8eec87ea828393ff77d9ce5c9d474795b8aafea72feff49584bdebd4e563cc3551c5464cef974d8b6a30f3aeaaad42903c27bdfa0c0b755ade9561504aeeb157062d66ec787c9710edb6566d13716d117b3f3b9adb270ee20adeb3d75207b56627072a103c1a9bd057ca5882c849b442ce4469f407530ad167b2ee432db0beab7d0231754bddfceb3623ea08a47b7d014dd4ed330abfc36d11dadf4a5466a6c1142269c79d1b04d90a297999190e6e1df401f6d272aff79f7d7af43220e61949ad1e33559db7c586bedf3202f8586f9b4da1c5cfa8b0d686857cd9782ecd72119c2d535c2524f8c5921412dcb05457e59311a9db810416fc617c6b6c0389d0801858f6588da7c91f5181dade7c749a9693ff7e0c8874e05d2a84daa26f795cd61a7abe54cc5f073f36ccec0295cbab898b36661b5f74d4b0a5a7c3529229497ea095c1b5702c6706309e02a0f1f01efaa7268e98aaeb546e103755112d3410e6abe47d0fb8aa828036823f7d0d666e4caabddd468a184d005e137cca4c9aaad3dc5778d85775393a33bb1e93e9910c1669bda69a1857feac9d9d6b7d407ebfd7d6994ef363a6e1d1ab665b5b239844cc7946c1b2645b6143195c86ce74f3eea764b2630670850643b3b3769afdc042a34b88cc9046f2758561ede33f36a70ecd00c8776b1bdfac15d47f95bb0a06e9615666fb3d9410918e6ec50d9f448c1e1e9b482053b7d14ebc258e13a0c316da7c0091c043dee70fd9b38d6da0fe466f1fd25f4e39feefe279f7be449ad3355ca2209511b0decfed1fdf41987d2533406864476ba5f9578301bed72a63cb1ef4eb80f6cfd2d9a04eb5bf913de3c30819c702cf81ac9186d47a1e5642d282560a8a7a2e534968234b262c542f7c84899d2396e307cc4d393c83d5a220c4fd02cf7b9efb31a2388305bc4faa7f418ebc6413e83a317035f3bd7730d75af36b16ef245f3e03834ab3db0f4845137a4938821799e4db51f93bd35c05994e0ec45b616f5b1652ef12cb9c7d0406d7b634c68561fa4c0256b92c2fe81d975c9da47b0642f8b45c6a9086e19b60c30eb4109d13a7bca8910429b6697794cea27709988d64d02b41f9c05bd1cc5b360f6d50272a2072af9b783da5b6070308d0809c7d7fbac0230c18a048861a15bfa59a6fcd3021bcd885c799245938799e20b39bf6bc422579629f5e26adcaecbeec9da40f246030ae87ed9175e9b53118555b8ad1e0f7d2dc6664db81598fd7a2a95bd138feeec3c07eddedc9a31e8b674935a32246e7ebbcc624721a20ea3e6396052670e0cf97adf124c91d17bc1efbfba4720a90962a5926f925501f94a3597366567c730155fefc2bfc0f1d90b6ae4a5ca042940231c0f6373ccdb3778d98f6e4bde00a5966763e7b8e8ad00879426d18cd7e01bfafe0aaedadad68efe4b7fe5265f53f62aa66e748de1b9dec91a15a3dfdf3460f0ce2a0e63ea829927e75db1b0738b6bae1d39f06edc70b7b1392a7a2a7a126bd05d83236776fc949fdf30a2585bac67ade071d58e476c02bf0bef96730ae5973adf961607f83760890c2b80f179ca556b4ba42b76770d585ffbccf947402be69105441e5e5961ecf7e5c3a3acc8258b7c6154f59d5fe54da6c78db269fe3a77ddffeebc5916ffda78bccff3c0d6cbf0a476b5c1977652e05608767cd45625bd84f4d4a7c91d6561c1d70cb3579f8f322ecdb05122d0756133467c2be2ba321714d019fcd4072411145ab886f67d91a9e8fafb13364ca8988dbe6dbfd25208228c80cbcfd5d1cd54bde5f2f6af77475349b9fbad992bbd817f6e6482d7bf74a7d7de8fc41e37629b9867dad224ffa1a60e04e7a24cbd7824677af9307ea37fbedd7555dbbcf2f7eab1c0ed66d11b1b24ad8ccdcb0c98c50b4513f110c5d6a15f5534e6350882c92ae5f6dbd7cfffa4ed977fad9ca87f5ef468de07a492e0de10aa318e8f1e398b70ccb0d42ec70da3686d7c3892157be71ca240ba0feab1336d557a346da13b0376610dbfef9b4cee1a3beed3b29671801063b97366d0743a1461f599ad549de6cd8730d45108054b427456a7258662290117f5a185061c8689f46ea5b1662dd6472611682d9bb728e51bec544a446640f4ad0a4c35311b82755136f2dcb43b47b843e1107e0c9d4ce3e13960629699170468427bb51f6b35649e9373e99bdde7be8a74abdc334b7c5eccd19ee15948298b3b279fa524e84dfd8331e37f0f78fdd23830a56b8ed08bdcd49782f14d6d7ae1950a14af5990ee3ae65ef95f7600a5e6ab427e1662cb5580b4e3b703e9ff8cba24c02a9f0038af01ac9f3be71740968b093ef1cdb157a68e4f462837584a81dfb69b8115540301fa24bfcf8b9b61dc6a721fdc00f8e8078c73a37f8226c1d03b951f6e0261b0b12343746049a2c43c3ecc9f553a1fda9ce867e35a193382df7fb69609fe2423724c456918e8c0102979c5ce10f86ab9e9f9b677632e6aec7effacfd2566d940c4838b5f9b8f08f0961e4f916042a91392449cd5aed1376f1237a1472f255f1815faaf45039c47056ea6a0c8eb7cb14a24a15b26fecad330cc42b5399183217bcaeec96eb1ed05c9a5dd88b4cc3be16c005f476cd225b06158a8681c6a9b1fe0bf67ce029ca3943dc3c37f65abee41a959fe3902113dd65b6664cf59eabece0d29cfd1eda8fd40635e37f4eb0ea20bca9a0e759a3f7fb49948ccee36068e2e4c8e8d4799a59ec49889ccaa8342cbde3c1c9cb8110d129a295a9e034ed426cdbf4e32b4aa22bfa245ff9537cf73acaa5e7e3b8ea422ef86bd192eb9a9ed07690603e2d3bd396c44126cdb43f5d806a8172441851ef14530fdc1bd9eebc1379aa5bd02728456b2be568285451222553f33b81128152f227e80bf0de5c4720762330db01ad2e94b09e6077c2aa4486e5b256d4ab0d3c330b26716de2459b69310ed3cdf52763a375c5bcfd072d2a396f3b512c4f419879f90ae08b29386ad35b6d3b8cc5aa6e65317eaa9c8e2697abcc0d403e1808262088780caf53e5df7e4705fac55206d253ca3b21e5d8e60d3a527ffd06ec955bb9f7309bd6f6affb3b6b36b00fa4f39e08188521f0ec813ea8bb7557579436f1d0e168312af923a49647f1b14dd1cd44c31c05a23fd1b9f5038209e83e2046be36a3771ff71085200be9a733a29af9cf7a12cf76996593784f1dc79558c27bba7021a887999c1cd3d9781622a5a7dd692548a3a088dece975b6c43f7aed48766c7acfc9a3cd37951e365645fc6399b8167dcdbcb39e399a447507d8b50f052e4fdafbe0f141cd39d00ba759d15981ba8a2d352a5c863783700a3cf9c48f9b44e04c18c37cdfc2b6634bc01265681b6025d9d97afcd949510f860e94b1d3ef71ca8b34b23b74f134ca44dcca05686fe69789de5f3c611aa539876a4c009c04f678ff19fc50b67f2ac63446c4fc54f31a15e5575878901b94c3d37e939122dadaf0ffeb8d417a34e3a075c22e27bbc53f53d273a11239aa6d4072373e9d412642b445fda5211e499630892bcd221bb32fb7584cf72bb0608a232316857584d78fe0696e31eb66def6b763a9a7c419ce9975b022548b8e43b10b356d327cea14f2a014fcdc0dc4a93caf1f22b7dbed1706cfb21e37dbdeee53932b4ae81206697e0acfeac9ba018fde642d8432098383fc8f5e774dbc01fff8ce7e0c0898202d32dfb46f2234734ad024ff0d84a8566066aafa6f6a9daf8af789a236b3c1165cc86412464c7971877144d68f395f92ade8e154ba75c7e3fcd7a36413a7de2f8a67d153a38842a7ca64229f3591d2e4a1977d0f69e116d4de45b86062e73fd5d22ed8eb82225e7a189548260c89aed58f97b6cfa66c1348b5c85cc6452b35275c544491232e296b09cc39415a5a16644591738416b457aba26dd3b476f0b1918693ac96db2daae1ba6d0f0cfb7c7a6b7fc18d0be643d532c1bbecee4fa3543bd6e3f5b2d40462304287a15637a8cc65de3351cdbaab29fd79de94eeb8be7cc57703ec9b17cd7fac4e38e16bf050978c34394112b8c6546851ce7b9f8c1d95f8de6f5d8782ead05846b2b5be1cbb893d867514be186b451db69142acafc32bf2e81aa9111bd0369845f8e943aec778a16285d9c3b022012fac4a450951f59ce56bd47c8ccfcb09845efe1e6d32703561540fee6cebcb3c21012ae2294416204a5369656a7c5641003ca3a1b09344884857d3936b907710e24e204c868651a5f89a9bab38ee8b3cb7acbe27929597c1dcbed3a87a63ee0f3da987e12bc320da05e45a8a2b40c2e60a3ac6f904bff6e86b65c6f5931f93ca074a223fdaab2634b67ec59976a1ae998c89c6d59309f40c183997bf2118f6c74d737d5d6f8b18ee9414230ba7933111349ccfa2cca3da5150cec9705e4bb3d5a7d60084e6dcd63826956da6cf63bdf9a9b0c9154f528f6dfba048707f0ca87f5886da8dbb75e8ab21e261af70b70cff8800e55ff656c6dcad98211ca62e1587c3b68ba44a1afdcb48d6db977190880f3dd1b43381b2574fa47099aff85259a017d57ed813f25f0b2599b4d0ff11e8af82ba26b4df344757f7a3bb9db05c5aea8c4611b1cc8fe567347320044ab2649e925a42d7f297a29076a8fc24c3c7c9c6755abc350250c5b06d8bc5a1c4afe0cabe64f5d56afc0c7abf287ca0d7aead397ecc6b5da8d92bdd94f6f608f0d02762a4f31840c72f63347f237b53d0a906f29e8489ad98e8b5afcb9c9a86fed14fdadd7908081a7c8b2a9448a5684d330721a6df2c93ad92276a5112626c60c1d08844fe7e24e67032b3e754b93416cb8354b959d4aab567baa584f694e657dc89ea6776a3ee80a119f885047309958a4b435d2eb38f2d8fa852e988b693d081721c064b5ae55d8c2a090466be6b0c3e920251eb3c85e260d7f0f1b8e31b02da825a556df025da41dfdfb1b17fdb59cbb1af9ce5f7f068993c9755f873faba15d01572d873e038f2025f97d363e1d90bb43317c79d235798209ff6f7229d4f182dc399a67ba6b67b38ec7650b395c16527b82825bf3b2a542180503bd6fa4f9b3283664d76851e7cacefce5d2475beb26723d6d76608de590f9eb</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>AR</category>
      </categories>
  </entry>
  <entry>
    <title>MarkerDemo_1</title>
    <url>/2021/04/20/MarkerDemo-1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="816a387390bc1079a94d3a03d654c5c988f2431d300bb47afe95d1d240ecc528"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>AR</category>
      </categories>
  </entry>
  <entry>
    <title>ARDemo_2</title>
    <url>/2021/04/20/ARDemo-2/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="e3ab49aa2fce0c14a7be4c150626634dca19963f8ed875cb3ab9f9c4ec078a8d"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>AR</category>
      </categories>
  </entry>
  <entry>
    <title>ARDemo_1</title>
    <url>/2021/04/20/ARDemo-1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="19e6753136c16c5078179c9906a1cb4816192ef1bea29661544e8318ca9b3c5c"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>AR</category>
      </categories>
  </entry>
  <entry>
    <title>Calibration</title>
    <url>/2021/04/20/Calibration/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d80fc395f6eadfd416875c7d30a842dd568defdf23ed9ef84ea1d77c01918ed0"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>AR</category>
      </categories>
  </entry>
  <entry>
    <title>DetectMarker</title>
    <url>/2021/04/20/DetectMarker/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="996777fc3e817cee09183627e42c128818ec8a72972336e8696215b6eb85cb6e"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>AR</category>
      </categories>
  </entry>
  <entry>
    <title>SFM-2</title>
    <url>/2021/04/17/SFM-2/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="4430c3b034739e69faa052756c0e0993df977d43b0cf6b0f524a2ad67c2fe1eb"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>SFM</category>
      </categories>
      <tags>
        <tag>SFM</tag>
      </tags>
  </entry>
  <entry>
    <title>error while loading shared libraries: libvtkFiltersExtraction-9.0.so.1: cannot open shared object file: No such file or directory</title>
    <url>/2021/04/11/error-while-loading-shared-libraries-libvtkFiltersExtraction-9-0-so-1-cannot-open-shared-object-file-No-such-file-or-directory/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="error-while-loading-shared-libraries-libvtkFiltersExtraction-9-0-so-1-cannot-open-shared-object-file-No-such-file-or-directory"><a href="#error-while-loading-shared-libraries-libvtkFiltersExtraction-9-0-so-1-cannot-open-shared-object-file-No-such-file-or-directory" class="headerlink" title="error while loading shared libraries: libvtkFiltersExtraction-9.0.so.1: cannot open shared object file: No such file or directory"></a>error while loading shared libraries: libvtkFiltersExtraction-9.0.so.1: cannot open shared object file: No such file or directory</h1><p>出现错误：</p>
<p>error while loading shared libraries: libvtkFiltersExtraction-9.0.so.1: cannot open shared object file: No such file or directory</p>
<p>解决方法：</p>
<p>由于是手动安装VTK的，所以需要在build目录运行命令：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考链接：<a href="https://discourse.vtk.org/t/vtk-error-linking-shared-libraries/4393">https://discourse.vtk.org/t/vtk-error-linking-shared-libraries/4393</a></p>
</blockquote>
]]></content>
      <categories>
        <category>ubuntu configure errors</category>
      </categories>
      <tags>
        <tag>error</tag>
      </tags>
  </entry>
  <entry>
    <title>常用cmake configure</title>
    <url>/2021/04/11/%E5%B8%B8%E7%94%A8cmake-configure/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="常用cmake-configure"><a href="#常用cmake-configure" class="headerlink" title="常用cmake configure"></a>常用cmake configure</h1><h2 id="PCL"><a href="#PCL" class="headerlink" title="PCL"></a>PCL</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">cmake -DCMAKE_BUILD_TYPE=Build -DBUILD_visualization=<span class="keyword">ON</span> ..</span><br></pre></td></tr></table></figure>
<h2 id="OpenCV"><a href="#OpenCV" class="headerlink" title="OpenCV"></a>OpenCV</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -D OPENCV_ENABLE_NONFREE=<span class="keyword">ON</span> -D OPENCV_EXTRA_MODULES_PATH=~/Configure/opencv_contrib/modules/ ..</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>cmake</category>
      </categories>
      <tags>
        <tag>cmake</tag>
      </tags>
  </entry>
  <entry>
    <title>进程已结束，退出代码为139(interrupted by signal 11: SIGSEGV)</title>
    <url>/2021/04/11/%E8%BF%9B%E7%A8%8B%E5%B7%B2%E7%BB%93%E6%9D%9F%EF%BC%8C%E9%80%80%E5%87%BA%E4%BB%A3%E7%A0%81%E4%B8%BA139-interrupted-by-signal-11-SIGSEGV/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="进程已结束，退出代码为139-interrupted-by-signal-11-SIGSEGV"><a href="#进程已结束，退出代码为139-interrupted-by-signal-11-SIGSEGV" class="headerlink" title="进程已结束，退出代码为139(interrupted by signal 11: SIGSEGV)"></a>进程已结束，退出代码为139(interrupted by signal 11: SIGSEGV)</h1><h2 id="出现错误："><a href="#出现错误：" class="headerlink" title="出现错误："></a>出现错误：</h2><p>进程已结束，退出代码为139(interrupted by signal 11: SIGSEGV)</p>
<h2 id="错误出现位置："><a href="#错误出现位置：" class="headerlink" title="错误出现位置："></a>错误出现位置：</h2><p><img src="https://gitee.com/JunLuJun/up/raw/master/image-20210412092517507.png" alt="image-20210412092517507"></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>PCL安装不成功，重新安装PCL</p>
]]></content>
      <categories>
        <category>ubuntu configure errors</category>
      </categories>
      <tags>
        <tag>error</tag>
      </tags>
  </entry>
  <entry>
    <title>SLAM-OpenCV基本操作</title>
    <url>/2021/04/10/SLAM-OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SLAM-OpenCV基本操作"><a href="#SLAM-OpenCV基本操作" class="headerlink" title="SLAM-OpenCV基本操作"></a>SLAM-OpenCV基本操作</h1><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv4/opencv2/core/core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv4/opencv2/highgui/highgui.hpp&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image;</span><br><span class="line">    <span class="built_in">string</span> fileName = <span class="string">&quot;1.jpg&quot;</span>;</span><br><span class="line">    image = cv::imread(fileName);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*1. 判断读取是否正确*/</span></span><br><span class="line">    <span class="keyword">if</span> (image.data == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cerr</span>&lt;&lt;<span class="string">&quot;文件&quot;</span>&lt;&lt;fileName&lt;&lt;<span class="string">&quot;不存在&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;图像宽为：&quot;</span>&lt;&lt;image.cols&lt;&lt;<span class="string">&quot;，高为：&quot;</span>&lt;&lt;image.rows&lt;&lt;<span class="string">&quot;，图像通道数为：&quot;</span>&lt;&lt;image.channels()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    cv::imshow(<span class="string">&quot;image&quot;</span>,image);</span><br><span class="line">    <span class="comment">//等待任意按键按下,程序在此暂停</span></span><br><span class="line">    cv::waitKey(<span class="number">0</span>);<span class="comment">//delay单位为ms，0意味着forever</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*2. 判断图片格式是否符合要求*/</span></span><br><span class="line">    <span class="comment">// – CV_&lt;bit_depth&gt;(S|U|F)C&lt;number_of_channels&gt;</span></span><br><span class="line">    <span class="comment">//S = 符号整型 U = 无符号整型 F = 浮点型</span></span><br><span class="line">    <span class="comment">//CV_8UC1:8位无符号整型1通道；</span></span><br><span class="line">    <span class="comment">//CV_8UC3：8位无符号整形3通道</span></span><br><span class="line">    <span class="keyword">if</span> (image.type() != CV_8UC1 &amp;&amp; image.type() != CV_8UC3)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;图片类型不符合要求，要求图片类型彩色图或灰度图&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*3. 计时与像素访问*/</span></span><br><span class="line">    <span class="comment">//计时</span></span><br><span class="line">    <span class="built_in">std</span>::chrono::steady_clock::time_point t1 = <span class="built_in">std</span>::chrono::steady_clock::now();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; image.rows; i++)<span class="comment">//行遍历</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//获取图像行指针</span></span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> *row_ptr = image.ptr&lt;<span class="keyword">unsigned</span> <span class="keyword">char</span>&gt;(i);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> j = <span class="number">0</span>; j &lt; image.cols; j++)<span class="comment">//列遍历</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//访问位于j,i处的像素</span></span><br><span class="line">            <span class="keyword">unsigned</span> <span class="keyword">char</span> *data_ptr = &amp;row_ptr[j *image.channels()];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != image.channels(); k++)<span class="comment">//通道遍历</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">char</span> data = data_ptr[k];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//计时</span></span><br><span class="line">    <span class="built_in">std</span>::chrono::steady_clock::time_point t2 = <span class="built_in">std</span>::chrono::steady_clock::now();</span><br><span class="line">    <span class="built_in">std</span>::chrono::duration&lt;<span class="keyword">double</span>&gt; time_used = <span class="built_in">std</span>::chrono::duration_cast&lt;<span class="built_in">std</span>::chrono::duration&lt;<span class="keyword">double</span>&gt;&gt;(t2-t1);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;遍历图像用时&quot;</span>&lt;&lt;time_used.count()&lt;&lt;<span class="string">&quot;s&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*4. 深浅拷贝*/</span></span><br><span class="line">    <span class="comment">//浅拷贝，指向同一个图像</span></span><br><span class="line">    cv::Mat image_another = image;</span><br><span class="line">    <span class="comment">//将左上角100*100的块置零</span></span><br><span class="line">    image_another(cv::Rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>)).setTo(<span class="number">0</span>);</span><br><span class="line">    cv::imshow(<span class="string">&quot;image&quot;</span>,image);</span><br><span class="line">    cv::waitKey(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//深拷贝</span></span><br><span class="line">    cv::Mat image_clone = image.clone();</span><br><span class="line">    image_clone(cv::Rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>)).setTo(<span class="number">255</span>);</span><br><span class="line">    cv::imshow(<span class="string">&quot;image&quot;</span>,image);</span><br><span class="line">    cv::imshow(<span class="string">&quot;image_clone&quot;</span>,image_clone);</span><br><span class="line">    cv::waitKey(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    cv::destroyAllWindows();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="CMakeList-txt"><a href="#CMakeList-txt" class="headerlink" title="CMakeList.txt"></a>CMakeList.txt</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.17</span>)</span><br><span class="line"><span class="keyword">project</span>(ShenLanSLAM_4)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">14</span>)</span><br><span class="line"><span class="keyword">find_package</span>(OpenCV REQUIRED)</span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;OpenCV_INCLUDE_DIRS&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(ShenLanSLAM_4 main.cpp)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(ShenLanSLAM_4 <span class="variable">$&#123;OpenCV_LIBRARIES&#125;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SLAM</category>
      </categories>
      <tags>
        <tag>SLAM</tag>
      </tags>
  </entry>
  <entry>
    <title>SLAM-HW1 简答</title>
    <url>/2021/04/10/SLAM-HW1-%E7%AE%80%E7%AD%94/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SLAM-HW1-简答"><a href="#SLAM-HW1-简答" class="headerlink" title="SLAM-HW1 简答"></a>SLAM-HW1 简答</h1><ol>
<li><p>如何在 Ubuntu 中安装软件(命令行界面)?它们通常被安装在什么地方?</p>
<p>sudo apt-get install xxx</p>
<p>sudo dpkg -i package_file.deb</p>
<p>apt-get：apt-get 下载后，软件所在路径是/var/cache/apt/archives；ubuntu 默认的PATH为</p>
<p>PATH=/home/brightman/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games</p>
<p>apt-get install安装目录是包的维护者确定的，不是用户</p>
<p>dpkg：系统安装软件一般在/usr/share，可执行的文件在/usr/bin，配置文件可能安装到了/etc下等；文档一般在 /usr/share</p>
<p>可执行文件 /usr/bin；配置文件 /etc；lib文件 /usr/lib</p>
</li>
<li><p>linux 的环境变量是什么?我如何定义新的环境变量?</p>
<p>export xxx=</p>
</li>
<li><p>linux 根目录下面的目录结构是什么样的?至少说出 3 个目录的用途。</p>
<p>Linux 和 Unix 文件系统被组织成一个有层次的树形结构。文件系统的最上层是 /，或称为 根目录。在 Unix 和 Linux 的设计理念中，一切皆为文件——包括硬盘、分区和可插拔介质。这就意味着所有其它文件和目录（包括其它硬盘和分区）都位于根目录中。 例如：/home/jebediah/cheeses.odt 给出了正确的完整路径，它指向 cheeses.odt 文件，而该文件位于 jebediah 目录下，该目录又位于 home 目录，最后，home 目录又位于根(/) 目录下。 在根 (/) 目录下，有一组重要的系统目录，在大部分 Linux 发行版里都通用。直接位于根 (/) 目录下的常见目录列表如下：</p>
<ul>
<li>/bin - 重要的二进制 (binary) 应用程序</li>
<li>/boot - 启动 (boot) 配置文件</li>
<li>/dev - 设备 (device) 文件</li>
<li>/etc - 配置文件、启动脚本等 (etc)</li>
<li>/home - 本地用户主 (home) 目录</li>
<li>/lib - 系统库 (libraries) 文件</li>
<li>/lost+found - 在根 (/) 目录下提供一个遗失+查找(lost+found) 系统</li>
<li>/media - 挂载可移动介质 (media)，诸如 CD、数码相机等</li>
<li>/mnt - 挂载 (mounted) 文件系统</li>
<li>/opt - 提供一个供可选的 (optional) 应用程序安装目录</li>
<li>/proc - 特殊的动态目录，用以维护系统信息和状态，包括当前运行中进程 (processes) 信息。</li>
<li>/root - root (root) 用户主文件夹，读作“slash-root”</li>
<li>/sbin - 重要的系统二进制 (system binaries) 文件</li>
<li>/sys - 系统 (system) 文件</li>
<li>/tmp - 临时(temporary)文件</li>
<li>/usr - 包含绝大部分所有用户(users)都能访问的应用程序和文件</li>
<li>/var - 经常变化的(variable)文件，诸如日志或数据库等</li>
</ul>
</li>
<li><p>假设我要给 a.sh 加上可执行权限,该输入什么命令?</p>
<p>chmod x.sh</p>
</li>
<li><p>假设我要将 a.sh 文件的所有者改成 xiang:xiang,该输入什么命令?</p>
<p>sudo chown -c xiang:xiang a.sh</p>
</li>
<li><p>SLAM 会在哪些场合中用到?至少列举三个方向。</p>
<p>AR，自动驾驶，导航</p>
</li>
<li><p>SLAM 中定位与建图是什么关系?为什么在定位的同时需要建图?</p>
<p>相互依赖</p>
<p>要在环境中精准的定位，需要精确地地图；精确的地图过程中，需要精准的定位</p>
</li>
<li><p>SLAM 发展历史如何?我们可以将它划分成哪几个阶段?</p>
<p>1986-2004，classical age</p>
<p>2004-2015，algorithmic-analysis age</p>
<p>2015-now;</p>
</li>
</ol>
<ol>
<li>列举三篇在 SLAM 领域的经典文献。</li>
</ol>
]]></content>
      <categories>
        <category>SLAM-HomeWork</category>
      </categories>
      <tags>
        <tag>homework</tag>
      </tags>
  </entry>
  <entry>
    <title>SLAM-HW3 简答</title>
    <url>/2021/04/10/SLAM-HW3-%E7%AE%80%E7%AD%94/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SLAM-HW3-简答"><a href="#SLAM-HW3-简答" class="headerlink" title="SLAM-HW3 简答"></a>SLAM-HW3 简答</h1><h2 id="2-群的性质"><a href="#2-群的性质" class="headerlink" title="2.群的性质"></a>2.群的性质</h2><h3 id="2-1"><a href="#2-1" class="headerlink" title="2.1"></a>2.1</h3><ul>
<li><p>封闭性验证：</p>
<p>$\forall a_1,a_2 \in Z,a_1+a_2 \in Z$</p>
</li>
<li><p>结合律验证</p>
<p>$\forall a_1,a_2,a_3\in Z,(a_1+a_2)+a_3 = a_1+(a_2+a_3)$</p>
</li>
<li><p>幺元验证</p>
<p>$a_0=0, a_0 \in Z,s.t. \forall a \in Z,0+a = a+0 = a$</p>
</li>
<li><p>逆元验证</p>
<p>$\forall a \in Z,a^{-1} = -a \in Z,s.t. a+(-a) = 0$</p>
</li>
</ul>
<p>综上，{$Z,+$}是群。</p>
<h3 id="2-2"><a href="#2-2" class="headerlink" title="2.2"></a>2.2</h3><ul>
<li><p>封闭性验证</p>
<p>$\forall a_1,a_2 \in N,a_1+a_2 \in Z$</p>
</li>
<li><p>结合律验证</p>
<p>$\forall a_1,a_2,a_3\in Z,(a_1+a_2)+a_3 = a_1+(a_2+a_3)$</p>
</li>
<li><p>幺元验证</p>
<p>$\not\exist a_0 \in N,s.t. \forall a \in N,a_0+a = a+a_0 = a$</p>
</li>
</ul>
<p>综上，{$N,+$}不是群。</p>
<h2 id="3-验证向量叉乘的李代数性质"><a href="#3-验证向量叉乘的李代数性质" class="headerlink" title="3.验证向量叉乘的李代数性质"></a>3.验证向量叉乘的李代数性质</h2><p>$V = R^3,F=R,[a,b]=a\times b,验证g = (R^3,R,\times)构成李代数$</p>
<ul>
<li><p>封闭性验证</p>
<p>$\forall X,Y \in R^3,[X,Y] = X \times Y \in R^3$</p>
</li>
<li><p>双线性验证</p>
<p>$\forall X,Y,Z \in V,a,b \in R$：</p>
<p>$[aX+bY,Z] = (aX+bY)\times Z=aX \times Z + bY\times Z=a[X,Z]+b[Y,Z]$</p>
<p>$[Z,aX+bY] =Z\times(aX +bY)=Z\times aX+Z \times bY = a[Z,X]+b[Z,Y]$</p>
</li>
<li><p>自反性验证</p>
<p>$\forall X \in R^3,[X,X]=X \times X = 0$</p>
</li>
<li><p>雅克比等价验证</p>
<p>$\forall X,Y,Z \in R^3$，</p>
<script type="math/tex; mode=display">[X,[Y,Z]]+[Y,[Z,X]]+[Z,[X,Y]] = [X,Y \times Z]+[Y,Z \times X]+[Z,X \times Y]=0</script></li>
</ul>
]]></content>
      <categories>
        <category>SLAM-HomeWork</category>
      </categories>
      <tags>
        <tag>homework</tag>
      </tags>
  </entry>
  <entry>
    <title>SLAM-HW3 code:读取轨迹画图</title>
    <url>/2021/04/10/SLAM-HW3-code-%E8%AF%BB%E5%8F%96%E8%BD%A8%E8%BF%B9%E7%94%BB%E5%9B%BE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SLAM-HW3-code-读取轨迹画图"><a href="#SLAM-HW3-code-读取轨迹画图" class="headerlink" title="SLAM-HW3 code:读取轨迹画图"></a>SLAM-HW3 code:读取轨迹画图</h1><h2 id="main-cpp"><a href="#main-cpp" class="headerlink" title="main.cpp"></a>main.cpp</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pangolin/pangolin.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sophus/se3.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Core&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Eigen;</span><br><span class="line"><span class="comment">//定义结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">trajectory</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">float</span> t;</span><br><span class="line">    <span class="keyword">float</span> tx;</span><br><span class="line">    <span class="keyword">float</span> ty;</span><br><span class="line">    <span class="keyword">float</span> tz;</span><br><span class="line">    <span class="keyword">float</span> qx;</span><br><span class="line">    <span class="keyword">float</span> qy;</span><br><span class="line">    <span class="keyword">float</span> qz;</span><br><span class="line">    <span class="keyword">float</span> qw;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//函数声明</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">split</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; str,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&amp; tokens,<span class="built_in">std</span>::<span class="built_in">string</span> delim)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">CountLines</span><span class="params">(<span class="keyword">char</span> *filename)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawTrajectory</span><span class="params">(<span class="built_in">vector</span>&lt;Sophus::SE3&lt;<span class="keyword">double</span>&gt;, aligned_allocator&lt;Sophus::SE3&lt;<span class="keyword">double</span>&gt;&gt;&gt;)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ifstream ifs ;</span><br><span class="line">    <span class="built_in">string</span> fileName = <span class="string">&quot;trajectory.txt&quot;</span>;</span><br><span class="line">    <span class="comment">//计算txt的行数</span></span><br><span class="line">    <span class="keyword">int</span> lines = CountLines(<span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(fileName.c_str()));</span><br><span class="line">    trajectory traPoints[lines];</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; strs;</span><br><span class="line">    ifs.open(fileName,ios_base::in);</span><br><span class="line">    <span class="keyword">if</span>(ifs.fail())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;文件打开失败&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> buffer[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">while</span> (!ifs.eof())</span><br><span class="line">        &#123;</span><br><span class="line">            ifs.getline(buffer,<span class="number">256</span>,<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">            <span class="built_in">string</span> str = buffer;</span><br><span class="line">            split(str,strs,<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">float</span> lineNum[<span class="number">8</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                lineNum[i] = stof(strs[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            traPoints[index].t = lineNum[<span class="number">0</span>];</span><br><span class="line">            traPoints[index].tx = lineNum[<span class="number">1</span>];</span><br><span class="line">            traPoints[index].ty = lineNum[<span class="number">2</span>];</span><br><span class="line">            traPoints[index].tz = lineNum[<span class="number">3</span>];</span><br><span class="line">            traPoints[index].qx = lineNum[<span class="number">4</span>];</span><br><span class="line">            traPoints[index].qy = lineNum[<span class="number">5</span>];</span><br><span class="line">            traPoints[index].qz = lineNum[<span class="number">6</span>];</span><br><span class="line">            traPoints[index].qw = lineNum[<span class="number">7</span>];</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;traPoints.tx:&quot;</span>&lt;&lt; traPoints[index].tx&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*画图*/</span></span><br><span class="line">        <span class="built_in">vector</span>&lt;Sophus::SE3&lt;<span class="keyword">double</span>&gt;, Eigen::aligned_allocator&lt;Sophus::SE3&lt;<span class="keyword">double</span>&gt;&gt;&gt; poses;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lines; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">Quaterniond <span class="title">q</span><span class="params">(traPoints[i].qx,traPoints[i].qy,traPoints[i].qz,traPoints[i].qw)</span></span>;</span><br><span class="line">            <span class="function">Vector3d <span class="title">t</span><span class="params">(traPoints[i].tx,traPoints[i].ty,traPoints[i].tz)</span></span>;</span><br><span class="line">            <span class="function">Sophus::SE3d <span class="title">SE3_Rt</span><span class="params">(q,t)</span></span>;</span><br><span class="line">            poses.push_back(SE3_Rt);</span><br><span class="line">        &#125;</span><br><span class="line">        DrawTrajectory(poses);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 得到读入文件的行数</span></span><br><span class="line"><span class="comment">/// \param filename</span></span><br><span class="line"><span class="comment">/// \return</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">CountLines</span><span class="params">(<span class="keyword">char</span> *filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ifstream ReadFile;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">string</span> tmp;</span><br><span class="line">    ReadFile.open(filename,ios::in);<span class="comment">//ios::in 表示以只读的方式读取文件</span></span><br><span class="line">    <span class="keyword">if</span>(ReadFile.fail())<span class="comment">//文件打开失败:返回0</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;读取文件行数中，文件打开失败&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span><span class="comment">//文件存在</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(getline(ReadFile,tmp,<span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            n++;</span><br><span class="line">        &#125;</span><br><span class="line">        ReadFile.close();</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 字符串分割函数</span></span><br><span class="line"><span class="comment">/// \param str 要分割的字符串</span></span><br><span class="line"><span class="comment">/// \param tokens 保存分割结果的字符串数组</span></span><br><span class="line"><span class="comment">/// \param delim 分隔字符串</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">split</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; str,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&amp; tokens,<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> delim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tokens.clear();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>* buffer = <span class="keyword">new</span> <span class="keyword">char</span>[str.size() + <span class="number">1</span>];</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">strcpy</span>(buffer, str.c_str());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>* tmp;</span><br><span class="line">    <span class="keyword">char</span>* p = strtok_r(buffer, delim.c_str(), &amp;tmp); <span class="comment">// 第一次分割</span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        tokens.push_back(p); <span class="comment">// 如果 p 为 nullptr，则将整个字符串作为结果</span></span><br><span class="line">    &#125; <span class="keyword">while</span> ((p = strtok_r(<span class="literal">nullptr</span>, delim.c_str(), &amp;tmp)) != <span class="literal">nullptr</span>);</span><br><span class="line">    <span class="comment">// strtok_r 为 strtok 的线程安全版本。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 画图</span></span><br><span class="line"><span class="comment">/// \param poses</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawTrajectory</span><span class="params">(<span class="built_in">vector</span>&lt;Sophus::SE3&lt;<span class="keyword">double</span>&gt;, Eigen::aligned_allocator&lt;Sophus::SE3&lt;<span class="keyword">double</span>&gt;&gt;&gt; poses)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (poses.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;轨迹为空!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// create pangolin window and plot the trajectory</span></span><br><span class="line">    pangolin::CreateWindowAndBind(<span class="string">&quot;Trajectory Viewer&quot;</span>, <span class="number">1024</span>, <span class="number">768</span>);</span><br><span class="line">    glEnable(GL_DEPTH_TEST);</span><br><span class="line">    glEnable(GL_BLEND);</span><br><span class="line">    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);</span><br><span class="line"></span><br><span class="line">    <span class="function">pangolin::OpenGlRenderState <span class="title">s_cam</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            pangolin::ProjectionMatrix(<span class="number">1024</span>, <span class="number">768</span>, <span class="number">500</span>, <span class="number">500</span>, <span class="number">512</span>, <span class="number">389</span>, <span class="number">0.1</span>, <span class="number">1000</span>),</span></span></span><br><span class="line"><span class="function"><span class="params">            pangolin::ModelViewLookAt(<span class="number">0</span>, <span class="number">-0.1</span>, <span class="number">-1.8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.0</span>, <span class="number">-1.0</span>, <span class="number">0.0</span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span></span>;</span><br><span class="line"></span><br><span class="line">    pangolin::View &amp;d_cam = pangolin::CreateDisplay()</span><br><span class="line">            .SetBounds(<span class="number">0.0</span>, <span class="number">1.0</span>, pangolin::Attach::Pix(<span class="number">175</span>), <span class="number">1.0</span>, <span class="number">-1024.0f</span> / <span class="number">768.0f</span>)</span><br><span class="line">            .SetHandler(<span class="keyword">new</span> pangolin::Handler3D(s_cam));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!pangolin::ShouldQuit())</span><br><span class="line">    &#123;</span><br><span class="line">        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">        d_cam.Activate(s_cam);</span><br><span class="line">        glClearColor(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line"></span><br><span class="line">        glLineWidth(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; poses.size() - <span class="number">1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            glColor3f(<span class="number">1</span> - (<span class="keyword">float</span>) i / poses.size(), <span class="number">0.0f</span>, (<span class="keyword">float</span>) i / poses.size());</span><br><span class="line">            glBegin(GL_LINES);</span><br><span class="line">            <span class="keyword">auto</span> p1 = poses[i], p2 = poses[i + <span class="number">1</span>];</span><br><span class="line">            glVertex3d(p1.translation()[<span class="number">0</span>], p1.translation()[<span class="number">1</span>], p1.translation()[<span class="number">2</span>]);</span><br><span class="line">            glVertex3d(p2.translation()[<span class="number">0</span>], p2.translation()[<span class="number">1</span>], p2.translation()[<span class="number">2</span>]);</span><br><span class="line">            glEnd();</span><br><span class="line">        &#125;</span><br><span class="line">        pangolin::FinishFrame();</span><br><span class="line">        usleep(<span class="number">5000</span>);   <span class="comment">// sleep 5 ms</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="CMakeLists-txt"><a href="#CMakeLists-txt" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.17</span>)</span><br><span class="line"><span class="keyword">project</span>(ShenLanSLAM_3)</span><br><span class="line"><span class="comment">#set(CMAKE_CXX_STANDARD 14)</span></span><br><span class="line"><span class="keyword">find_package</span>(Sophus REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(Pangolin REQUIRED)</span><br><span class="line"><span class="keyword">include_directories</span>(</span><br><span class="line">        /usr/local/<span class="keyword">include</span>/eigen3</span><br><span class="line">        <span class="variable">$&#123;Pangolin_INCLUDE_DIRS&#125;</span></span><br><span class="line">        <span class="variable">$&#123;Sophus_INCLUDE_DIRS&#125;</span></span><br><span class="line">        )</span><br><span class="line"><span class="keyword">add_executable</span>(ShenLanSLAM3 main.cpp)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(ShenLanSLAM3</span><br><span class="line">        <span class="variable">$&#123;Sophus_LIBRARIES&#125;</span></span><br><span class="line">        <span class="variable">$&#123;Pangolin_LIBRARIES&#125;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://gitee.com/JunLuJun/up/raw/master/image-20210410085530351.png" alt="image-20210410085530351"></p>
]]></content>
      <categories>
        <category>SLAM-HomeWork</category>
      </categories>
      <tags>
        <tag>SLAM-HW</tag>
      </tags>
  </entry>
  <entry>
    <title>群晖NAS部署AWTRIX2</title>
    <url>/2021/04/05/%E7%BE%A4%E6%99%96NAS%E9%83%A8%E7%BD%B2AWTRIX2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="群晖NAS部署AWTRIX2记录"><a href="#群晖NAS部署AWTRIX2记录" class="headerlink" title="群晖NAS部署AWTRIX2记录"></a>群晖NAS部署AWTRIX2记录</h1><blockquote>
<p>参考资料：</p>
<p><a href="https://www.ioiox.com/archives/76.html/comment-page-2">https://www.ioiox.com/archives/76.html/comment-page-2</a></p>
<p><a href="https://www.youtube.com/playlist?list=PL_qtbZN0T8POao-hO-b5ja_jh8mRY7nHE">https://www.youtube.com/playlist?list=PL_qtbZN0T8POao-hO-b5ja_jh8mRY7nHE</a></p>
</blockquote>
<h2 id="群晖-docker-部署"><a href="#群晖-docker-部署" class="headerlink" title="群晖 docker 部署"></a>群晖 docker 部署</h2><h3 id="创建配置文件夹"><a href="#创建配置文件夹" class="headerlink" title="创建配置文件夹"></a>创建配置文件夹</h3><p>群晖 NAS 中新建<code>awtrix2</code>用于存放配置文件,本文以<code>/docker/awtrix2</code>为例。</p>
<p>通过挂载该目录,可以使你所有的配置文件,插件等数据都安全的存放在群晖 NAS 本机,后期无论是迁移,升级容器,再次运行 docker 服务都可以直接读取配置,不需要重新再次配置。<br><a href="https://static.ioiox.com/usr/uploads/2020/06/657707119.jpg"><img src="https://static.ioiox.com/usr/uploads/2020/06/657707119.jpg" alt="img"></a></p>
<h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><p><strong>docker - 注册表</strong><br>搜索<code>awtrix2</code>找到<code>whyet/awtrix2</code>下载<code>latest</code>最新版.<br><a href="https://static.ioiox.com/usr/uploads/2020/06/3367138513.jpg"><img src="https://static.ioiox.com/usr/uploads/2020/06/3367138513.jpg" alt="img"></a></p>
<h3 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h3><p><strong>映像 - 选择下载好的<code>whyet/awtrix2</code> - 启动</strong><br><a href="https://static.ioiox.com/usr/uploads/2020/06/2500600041.jpg"><img src="https://static.ioiox.com/usr/uploads/2020/06/2500600041.jpg" alt="img"></a><br><strong>高级设置</strong><br><a href="https://static.ioiox.com/usr/uploads/2020/06/1941751929.jpg"><img src="https://static.ioiox.com/usr/uploads/2020/06/1941751929.jpg" alt="img"></a><br><strong>卷</strong><br>添加文件夹,文件夹选择刚才创建的<code>awtrix2</code>,装载路径只能填写<code>/data</code>,<strong>请不要更改!!!</strong><br><a href="https://static.ioiox.com/usr/uploads/2020/06/2649693401.jpg"><img src="https://static.ioiox.com/usr/uploads/2020/06/2649693401.jpg" alt="img"></a></p>
<p><strong>以上目录装载表示:</strong>容器启动时直接使用群晖 NAS 的<code>/docker/awtrix2</code>内的配置文件,替换容器内的<code>/data</code>的文件夹,在使用过程中所有的配置都会保存在本地群晖 NAS 的<code>/docker/awtrix2</code>中,即使容器损坏,容器被删除,都不会丢失配置文件,下次迁移或者重新创建容器,依旧可以直接装载该目录来恢复配置.</p>
<p><strong>网络</strong><br>勾选<code>使用与 Docker Host 相同的网络</code><br><a href="https://static.ioiox.com/usr/uploads/2020/06/415684945.jpg"><img src="https://static.ioiox.com/usr/uploads/2020/06/415684945.jpg" alt="img"></a></p>
<p><strong>应用完成配置</strong><br><a href="https://static.ioiox.com/usr/uploads/2020/06/2399904913.jpg"><img src="https://static.ioiox.com/usr/uploads/2020/06/2399904913.jpg" alt="img"></a></p>
<h3 id="Web-访问"><a href="#Web-访问" class="headerlink" title="Web 访问"></a>Web 访问</h3><p>输入群晖内网 IP 加端口号即可访问<code>http://群晖内网IP:7000</code><br><a href="https://static.ioiox.com/usr/uploads/2020/06/1008782268.jpg"><img src="https://static.ioiox.com/usr/uploads/2020/06/1008782268.jpg" alt="img"></a></p>
<h2 id="问题集合"><a href="#问题集合" class="headerlink" title="问题集合"></a>问题集合</h2><ol>
<li><p>时间问题</p>
<p><img src="http://i.imgur.com/8NoQNhl.png" alt="img"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>AWTRIX2</tag>
      </tags>
  </entry>
  <entry>
    <title>SLAM-Sophus</title>
    <url>/2021/03/10/SLAM-Sophus/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SLAM-Sophus"><a href="#SLAM-Sophus" class="headerlink" title="SLAM-Sophus"></a>SLAM-Sophus</h1><h2 id="useSophus-cpp"><a href="#useSophus-cpp" class="headerlink" title="useSophus.cpp"></a>useSophus.cpp</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Core&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Geometry&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Dense&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sophus/se3.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Eigen;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本程序演示Sophus的基本用法</span></span><br><span class="line"><span class="comment"> * @param argc</span></span><br><span class="line"><span class="comment"> * @param argv</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 1.定义沿Z轴转90度的SO3d*/</span></span><br><span class="line">    Matrix3d R = AngleAxisd(M_PI/<span class="number">2</span>,Vector3d(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>)).toRotationMatrix();</span><br><span class="line">    <span class="function">Quaterniond <span class="title">q</span><span class="params">(R)</span></span>;</span><br><span class="line">    <span class="comment">//SO3d 可直接从旋转矩阵构造，也可以通过四元数构造，两者等价</span></span><br><span class="line">    <span class="function">Sophus::SO3d  <span class="title">SO3_R</span><span class="params">(R)</span></span>;</span><br><span class="line">    <span class="function">Sophus::SO3d <span class="title">SO3_q</span><span class="params">(q)</span></span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;SO(3) from matrix:\n&quot;</span>&lt;&lt;SO3_R.matrix() &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;SO(3) from quaternion:\n&quot;</span>&lt;&lt;SO3_q.matrix()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;They are equal&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用对数映射获取李代数</span></span><br><span class="line">    Vector3d so3 = SO3_R.<span class="built_in">log</span>();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;so3 = &quot;</span>&lt;&lt;so3.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//hat为向量到反对称矩阵</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;so3 hat =\n&quot;</span>&lt;&lt;Sophus::SO3d::hat(so3)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//vee为反对城矩阵到向量</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;so3 hat vee = \n&quot;</span>&lt;&lt;Sophus::SO3d::vee(Sophus::SO3d::hat(so3)).transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 2.增量扰动模型的更新*/</span></span><br><span class="line">    <span class="comment">//假设更新量</span></span><br><span class="line">    <span class="function">Vector3d <span class="title">update_so3</span><span class="params">(<span class="number">1e-4</span>,<span class="number">0</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    Sophus::SO3d SO3_updated = Sophus::SO3d::<span class="built_in">exp</span>(update_so3)*SO3_R;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;SO3 updated = \n&quot;</span>&lt;&lt;SO3_updated.matrix()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;*************************&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//对SE(3)操作大同小异</span></span><br><span class="line">    <span class="comment">//沿x轴平移1</span></span><br><span class="line">    <span class="function">Vector3d <span class="title">t</span><span class="params">(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="comment">//从R,t构造SE3</span></span><br><span class="line">    <span class="function">Sophus::SE3d <span class="title">SE3_Rt</span><span class="params">(R,t)</span></span>;</span><br><span class="line">    <span class="comment">//从q,t构造SE3</span></span><br><span class="line">    <span class="function">Sophus::SE3d <span class="title">SE3_qt</span><span class="params">(q,t)</span></span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;SE3 from R,t = \n&quot;</span>&lt;&lt;SE3_Rt.matrix()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;SE3 from q,t = \n&quot;</span>&lt;&lt;SE3_qt.matrix()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//李代数se(3)是一个6维向量，方便起见线typedef一下</span></span><br><span class="line">    <span class="keyword">typedef</span> Eigen::Matrix&lt;<span class="keyword">double</span>,<span class="number">6</span>,<span class="number">1</span>&gt; Vector6d;</span><br><span class="line">    Vector6d se3 = SE3_Rt.<span class="built_in">log</span>();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;se3 = &quot;</span>&lt;&lt;se3.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//观察输出，会发现在Sophus中，se(3)的平移在前，旋转在后</span></span><br><span class="line">    <span class="comment">//同样地，有hat和vee两个算符</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;se3 hat = \n&quot;</span>&lt;&lt;Sophus::SE3d::hat(se3) &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;se3 hat vee = &quot;</span>&lt;&lt;Sophus::SE3d::vee(Sophus::SE3d::hat(se3)).transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//最后演示更新</span></span><br><span class="line">    <span class="comment">//更新量</span></span><br><span class="line">    Vector6d update_se3;</span><br><span class="line">    update_se3.setZero();</span><br><span class="line">    update_se3(<span class="number">0</span>,<span class="number">0</span>) = <span class="number">1e-4</span>d;</span><br><span class="line">    Sophus::SE3d SE3_updated = Sophus::SE3d::<span class="built_in">exp</span>(update_se3)*SE3_Rt;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;SE3 updated = &quot;</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;SE3_updated.matrix()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="CMakeLists-txt"><a href="#CMakeLists-txt" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">project</span>(Sophus)</span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">find_package</span>(Sophus REQUIRED)</span><br><span class="line"><span class="keyword">include_directories</span>(</span><br><span class="line">        /usr/local/<span class="keyword">include</span>/eigen3</span><br><span class="line">        Sophus_INCLUDE_DIRS</span><br><span class="line">)</span><br><span class="line"><span class="keyword">add_executable</span>(sophus useSophus.cpp)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>充电</category>
      </categories>
  </entry>
  <entry>
    <title>Terraria服务器搭建记录</title>
    <url>/2021/03/10/Terraria%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Terraria-服务器搭建记录"><a href="#Terraria-服务器搭建记录" class="headerlink" title="Terraria 服务器搭建记录"></a>Terraria 服务器搭建记录</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>网上搜索了一些教程，发现大多数都是使用云主机搭建的，如ECS，VPS等，大多数从阿里云腾讯云购买，奈何钱包空空，价格太贵了，所以自己使用了物理机+端口映射+DDNS+动态公网IP的方法，价格低很多；</p>
<blockquote>
<p>物理机：退休的老笔记本电脑</p>
<p>公网IP：免费，向移动/联通/电信服务商要</p>
<p>端口 映射与DDNS：免费</p>
<p>域名：可以购买免费域名，博主购买的是一年8元的域名</p>
<p>合计投入：8RMB/YEAR</p>
</blockquote>
<h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><h3 id="1-网络架构"><a href="#1-网络架构" class="headerlink" title="1. 网络架构"></a>1. 网络架构</h3><p>整个网络必须是一层NAT的架构，即WAN -&gt; LAN只经过1次；博主设置的架构如下：</p>
<p> <img src="https://gitee.com/JunLuJun/up/raw/master/20210310144025.png" alt=""></p>
<p>软路由采用R2S，最便宜的软路由，在软路由中拨号上网；硬路由要求具备AP模式类似的功能，手头的路由器并不具备，但是只要在后台把DHCP关闭，网线插入LAN口也能达到相同的效果；光猫必须处于调制模式；</p>
<h3 id="2-申请公网IP"><a href="#2-申请公网IP" class="headerlink" title="2. 申请公网IP"></a>2. 申请公网IP</h3><p>这一部博主没有试验过，网上提供的做法是向运营商打电话，申请公网IP，理由可以称要在公司看家里的监控等等；如果没给申请，就可以投诉，最终都会给；当然者是网上提供的做法；博主在学校的宿舍里布置的服务器，学校的联通会提供公网IP，根本不用申请。</p>
<p>当然还有一点需要说明的是，申请的公网IP是动态的，以博主的为例，每次重新拨号，IP都会改变，但是依旧是公网IP；所以为了在进入服务器时能够保持一个固定的连接入口，就需要一个域名指向这个公网IP，并设置DDNS，作用是每隔固定时间，域名会始终指向动态的公网IP，我们只需要记住这个域名即可。</p>
<h3 id="3-购买域名"><a href="#3-购买域名" class="headerlink" title="3. 购买域名"></a>3. 购买域名</h3><p>域名可以从很多网站购买，如CloudFare，阿里云，腾讯云等，博主从阿里云购买的域名，并在其控制台内，将域名解析；</p>
<h3 id="4-设置域名解析与DDNS"><a href="#4-设置域名解析与DDNS" class="headerlink" title="4. 设置域名解析与DDNS"></a>4. 设置域名解析与DDNS</h3><p>这一步需要在软路由中设置，一般软路由中都会有DDNS这一个服务项，选择阿里云的类型，根据提示填写信息即可。</p>
<h3 id="5-设置端口转发"><a href="#5-设置端口转发" class="headerlink" title="5. 设置端口转发"></a>5. 设置端口转发</h3><p>做完以上步骤，还需要做端口转发，以便访问域名+端口时，能够进入Terraria的服务器；在软路由中填写对应的端口转发端口号，Terraria一般默认7777端口，外部端口随意填写即可。</p>
<h3 id="6-配置Terraria-server"><a href="#6-配置Terraria-server" class="headerlink" title="6. 配置Terraria server"></a>6. 配置Terraria server</h3><p>配置服务器共有两种方式，一种是采用官方的服务器文件，但是并没有很多人性化的功能，但是提供了Mac，Windows，Linux上的安装方式；另外一种是TShock，在GitHub上开源，有很多功能，查看官方文档安装即可。</p>
]]></content>
      <categories>
        <category>服务器</category>
      </categories>
  </entry>
  <entry>
    <title>TShock指令详解</title>
    <url>/2021/03/09/TShock%E6%8C%87%E4%BB%A4%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="TShock指令详解"><a href="#TShock指令详解" class="headerlink" title="TShock指令详解"></a>TShock指令详解</h1><p>Tshock是一款terraria服务器出色的插件，其在原版服务器的基础上添加了一系列简单易上手且实用的指令，极大地丰富了服务器的可玩性。</p>
<h2 id="config-json配置文件详解"><a href="#config-json配置文件详解" class="headerlink" title="config.json配置文件详解"></a>config.json配置文件详解</h2><p>config配置文件位于Tshock文件夹下，使用记事本方式打开此文件，修改config可以达到丰富服务器人性化的特点。<br>以下是config配置↓↓↓【请修改冒号后面的数值】</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;InvasionMultiplier&quot;: 1，//入侵规模，计算公式：入侵怪物数量=100+（X*HP＞200的玩家）</span><br><span class="line">&quot;DefaultMaximumSpawns&quot;: 5，//怪物刷新最大数值（设置越高怪物越多）</span><br><span class="line">&quot;DefaultSpawnRate&quot;: 600，//刷新怪物时间间隔，数值越大刷新越慢</span><br><span class="line">&quot;ServerPort&quot;: 7777，//服务器端口【默认】</span><br><span class="line">&quot;EnableWhitelist&quot;: false，//是否开启白名单【true代表是，false代表否，以下都是】</span><br><span class="line">&quot;InfiniteInvasion&quot;: false，//是否无限制怪物入侵【开启后使用命令召唤的怪物入侵将达到200万只左右】</span><br><span class="line">&quot;PvPMode&quot;: &quot;normal&quot;，//PVP模式【normal表示可以正常使用PVP，always表示强制PVP，disabled表示强制PVE】</span><br><span class="line">&quot;SpawnProtection&quot;: false，//是否保护出生点【强烈建议设置】</span><br><span class="line">&quot;SpawnProtectionRadius&quot;: 10，//出生点保护范围【一格一个】</span><br><span class="line">&quot;MaxSlots&quot;: 6，//服务器人数上限</span><br><span class="line">&quot;RangeChecks&quot;: true，//不明</span><br><span class="line">&quot;DisableBuild&quot;: false，//是否禁止建筑【开启后将无法破坏地图里任何东西】</span><br><span class="line">&quot;SuperAdminChatRGB&quot;: [</span><br><span class="line">255.0，</span><br><span class="line">0.0，</span><br><span class="line"><span class="number">0.0</span></span><br><span class="line">]，//GameMaster发言颜色【设置与人物初始设置颜色数值相同】 &quot;SuperAdminChatPrefix&quot;: &quot;[GM]&quot;，//GameMaster发言前缀（位于名字之前）</span><br><span class="line">&quot;SuperAdminChatSuffix&quot;: &quot;~~&quot;，//GameMaster发言后缀（位于名字之后）</span><br><span class="line">&quot;BackupInterval&quot;: 0，//地图备份时间间隔/分钟</span><br><span class="line">&quot;BackupKeepFor&quot;: 60，//备份的地图保留时间</span><br><span class="line">&quot;RememberLeavePos&quot;: false，//记录离开位置，再次登录服务器将传送到上一次离开服务器的位置</span><br><span class="line">&quot;HardcoreOnly&quot;: false，//仅允许困难模式的玩家进入服务器</span><br><span class="line">&quot;MediumcoreOnly&quot;: false，//仅允许中等模式的玩家进入服务器</span><br><span class="line">&quot;KickOnMediumcoreDeath&quot;: false，//移除（kick）死亡的中等难度的玩家</span><br><span class="line">&quot;BanOnMediumcoreDeath&quot;: false，//封禁（ban）死亡的中等难度的玩家</span><br><span class="line">&quot;AutoSave&quot;: true，//是否自动保存地图，强烈建议开启</span><br><span class="line">&quot;AnnounceSave&quot;: true，//自动保存的时候是否进行提示</span><br><span class="line">&quot;MaximumLoginAttempts&quot;: 3，//登录次数尝试最大限制，尝试次数过多将被移除（kick）服务器</span><br><span class="line">&quot;RconPassword&quot;: &quot;&quot;，//没用就对了，建议不要改动</span><br><span class="line">&quot;RconPort&quot;: 7777，//同上</span><br><span class="line">&quot;ServerName&quot;: &quot;Terraria Small Team&quot;，//服务器名称</span><br><span class="line">&quot;UseServerName&quot;: true，//是否使用服务器名称</span><br><span class="line">&quot;MasterServer&quot;: &quot;127.0.0.1&quot;，//本机IP连接地址，改动后自己可能进不去服务器</span><br><span class="line">&quot;StorageType&quot;: &quot;sqlite&quot;，//数据库类型，建议不要改动</span><br><span class="line">&quot;MySqlHost&quot;: &quot;localhost:3306&quot;，//下面的都没用，建议不要改动</span><br><span class="line">&quot;MySqlDbName&quot;: &quot;&quot;，</span><br><span class="line">&quot;MySqlUsername&quot;: &quot;&quot;，</span><br><span class="line">&quot;MySqlPassword&quot;: &quot;&quot;， &quot;MediumcoreBanReason&quot;: &quot;Death results in a ban&quot;，//中等难度的玩家被封禁（ban）时的理由</span><br><span class="line">&quot;MediumcoreKickReason&quot;: &quot;Death results in a kick&quot;，//中等难度的玩家被移除（kick）时的理由</span><br><span class="line">&quot;EnableDNSHostResolution&quot;: false，//不明，大概和网络有关</span><br><span class="line">&quot;EnableIPBans&quot;: true，//是否可以封禁（ban）ip地址</span><br><span class="line">&quot;EnableUUIDBans&quot;: true，//是否开启封禁（ban）UUID</span><br><span class="line">&quot;EnableBanOnUsernames&quot;: false，//是否可以封禁（ban）用户名</span><br><span class="line">&quot;DefaultRegistrationGroupName&quot;: &quot;default&quot;，//注册用户的默认用户组【如不了解组的规划请暂时不要改动】</span><br><span class="line">&quot;DefaultGuestGroupName&quot;: &quot;guest&quot;，//未注册用户的默认用户组</span><br><span class="line">&quot;DisableSpewLogs&quot;: true，//禁止将服务器日志展示给玩家</span><br><span class="line">&quot;HashAlgorithm&quot;: &quot;sha512&quot;，//不明</span><br><span class="line">&quot;BufferPackets&quot;: true，//不明，大概和buff有关</span><br><span class="line">&quot;ServerFullReason&quot;: &quot;Sorry，you can`t into the server，because the Server is full&quot;，//因服务器人满而被拒绝进入服务器的提示</span><br><span class="line">&quot;WhitelistKickReason&quot;: &quot;You are not on the whitelist.&quot;，//因不在白名单而被拒绝进入服务器的提示</span><br><span class="line">&quot;ServerFullNoReservedReason&quot;: &quot;Server is full. No reserved slots open.&quot;，//因服务器人满并预留给管理员的位置也满的情况下被拒绝进入服务器的提示</span><br><span class="line">&quot;SaveWorldOnCrash&quot;: true，//服务器崩溃时是否及时保存地图</span><br><span class="line">&quot;EnableGeoIP&quot;: false，//显示玩家IP的所在地【有可能侵犯他人隐私，建议不要开启】</span><br><span class="line">&quot;EnableTokenEndpointAuthentication&quot;: false，//不明QAQ</span><br><span class="line">&quot;RestApiEnabled&quot;: false，//上同下</span><br><span class="line">&quot;RestApiPort&quot;: 7878，//呵呵</span><br><span class="line">&quot;DisableTombstones&quot;: true，//是否移除墓碑</span><br><span class="line">&quot;DisplayIPToAdmins&quot;: false，//是否将玩家的IP地址展示给管理员</span><br><span class="line">&quot;KickProxyUsers&quot;: true，//移除（kick）使用外挂的玩家</span><br><span class="line">&quot;DisableHardmode&quot;: false，//禁止让世界进入困难模式（即肉山后）</span><br><span class="line">&quot;DisableDungeonGuardian&quot;: false，//禁止攻打地牢守护者，与old man对话将会被立即传送到出生点</span><br><span class="line">&quot;ServerSideCharacter&quot;: false，//是否强制开荒模式（慎用）！开启后人物存档将保留在服务器但不影响单人游戏的存档。</span><br><span class="line">&quot;ServerSideCharacterSave&quot;: 5，//服务器人物存档保存时间间隔/分钟</span><br><span class="line">&quot;LogonDiscardThreshold&quot;: 250，//开启强制开荒后，检测到玩家背包里有违规物品时将提示</span><br><span class="line">&quot;DisableClownBombs&quot;: false，//禁止小丑往出生点扔炸弹【大概】</span><br><span class="line">&quot;DisableSnowBalls&quot;: false，//禁止使用雪球 &quot;ChatFormat&quot;: &quot;&#123;1&#125;&#123;2&#125;&#123;3&#125;: &#123;4&#125;&quot;，//聊天格式【&#123;1&#125;为前缀，&#123;2&#125;为玩家名称，&#123;3&#125;为后缀，&#123;4&#125;为聊天内容】</span><br><span class="line">&quot;ChatAboveHeadsFormat&quot;: &quot;&#123;2&#125;&quot;，//在玩家头顶显示的内容【参考上一条】</span><br><span class="line">&quot;ForceTime&quot;: &quot;normal&quot;，//THE WORLD！【normal表示昼夜正常交替，day表示出现极昼现象，night表示出现极夜现象】</span><br><span class="line">&quot;TileKillThreshold&quot;: 60，//一秒挖掘，破坏物块的上限，否则将被冻结【可以用来检测外挂，下同】</span><br><span class="line">&quot;TilePlaceThreshold&quot;: 20，//一秒摆放物块的上限</span><br><span class="line">&quot;TileLiquidThreshold&quot;: 2，//一秒释放液体的上限</span><br><span class="line">&quot;ProjectileThreshold&quot;: 50，//一秒使用弹药数量的上限【包括魔法攻击】</span><br><span class="line">&quot;ProjIgnoreShrapnel&quot;: true，//计算弹药使用上限是否忽略爆炸产生的碎片</span><br><span class="line">&quot;RequireLogin&quot;: false，//是否开启强制注册登录</span><br><span class="line">&quot;DisableInvisPvP&quot;: false，//PVP状态下是否使隐身药水失效</span><br><span class="line">&quot;MaxRangeForDisabled&quot;: 10，//被冻结后最大移动距离</span><br><span class="line">&quot;ServerPassword&quot;: &quot;&quot;，//服务器的密码，不设置表示无密码</span><br><span class="line">&quot;RegionProtectChests&quot;: true，//领地内的箱子是否受到保护，PVE服务器强烈建议设置成true</span><br><span class="line">&quot;DisableLoginBeforeJoin&quot;: false，//大概意思是踢出登录失败的玩家？</span><br><span class="line">&quot;DisableUUIDLogin&quot;: false，//是否禁止UUID登录</span><br><span class="line">&quot;KickEmptyUUID&quot;: false，//是否移除（kick）空UUID的玩家</span><br><span class="line">&quot;AllowRegisterAnyUsername&quot;: false，//是否允许注册任何用户名，PVE服务器强烈建议设置成false</span><br><span class="line">&quot;AllowLoginAnyUsername&quot;: true，//是否允许登录任何用户名</span><br><span class="line">&quot;MaxDamage&quot;: 175，//玩家所受到的最大伤害点数，超过这个数值会被冻结</span><br><span class="line">&quot;MaxProjDamage&quot;: 175，//玩家受到弹药的最大伤害点数，同上</span><br><span class="line">&quot;IgnoreProjUpdate&quot;: false，//不明，下同</span><br><span class="line">&quot;IgnoreProjKill&quot;: false，//下同</span><br><span class="line">&quot;IgnoreNoClip&quot;: false，//下不同</span><br><span class="line">&quot;AllowIce&quot;: true，//是否禁止冰的扩散【这啥？】</span><br><span class="line">&quot;AllowCrimsonCreep&quot;: false，//是否允许血腥之地扩散，PVE强烈建议设置成false，下同</span><br><span class="line">&quot;AllowCorruptionCreep&quot;: false，//是否允许腐化之地扩散</span><br><span class="line">&quot;AllowHallowCreep&quot;: false，//是否允许神圣之地扩散 &quot;StatueSpawn200&quot;: 3，//不明，但是可能和出生点有关，建议不要改动，下同</span><br><span class="line">&quot;StatueSpawn600&quot;: 6，//赞成上一条</span><br><span class="line">&quot;StatueSpawnWorld&quot;: 10，//雕像召唤物品的最高上限</span><br><span class="line">&quot;PreventBannedItemSpawn&quot;: false，//是否禁止用item指令和give指令获得被封禁（ban）掉的物品</span><br><span class="line">&quot;PreventDeadModification&quot;: true，//不明真相的吃瓜群众</span><br><span class="line">&quot;EnableChatAboveHeads&quot;: false，//楼上带我一个</span><br><span class="line">&quot;ForceXmas&quot;: false，//是否开启圣诞节</span><br><span class="line">&quot;AllowAllowedGroupsToSpawnBannedItems&quot;: false，//是否允许有权限使用被封禁（ban）物品的用户组使用被封禁（ban）的物品</span><br><span class="line">&quot;IgnoreChestStacksOnLoad&quot;: false，//加载地图的时候是否检测箱子里物品堆叠上线</span><br><span class="line">&quot;LogPath&quot;: &quot;tshock&quot;，//日志文件存放路径</span><br><span class="line">&quot;PreventInvalidPlaceStyle&quot;: true，//不明</span><br><span class="line">&quot;BroadcastRGB&quot;: [</span><br><span class="line">127.0，</span><br><span class="line">255.0，</span><br><span class="line"><span class="number">212.0</span></span><br><span class="line">]，//系统广播颜色，和上述GameMaster的设置颜色方式一样</span><br><span class="line">&quot;RestUseNewPermissionModel&quot;: true，//是否刷新的时候使用新的模特【？】</span><br><span class="line">&quot;ApplicationRestTokens&quot;: &#123;&#125;，//不明</span><br><span class="line">&quot;ReservedSlots&quot;: 3，//预留给管理员的通道数量</span><br><span class="line">&quot;LogRest&quot;: false，//日志是否刷新【？】</span><br><span class="line">&quot;RespawnSeconds&quot;: 3，//玩家死亡后复活时间/秒</span><br><span class="line">&quot;TilePaintThreshold&quot;: 15，//一秒刷漆上限</span><br><span class="line">&quot;EnableMaxBytesInBuffer&quot;: false，//不懂</span><br><span class="line">&quot;MaxBytesInBuffer&quot;: 5242880，//还是不懂</span><br><span class="line">&quot;ForceHalloween&quot;: false，//是否开启万圣节</span><br><span class="line">&quot;AllowCutTilesAndBreakables&quot;: false，</span><br><span class="line">&quot;CommandSpecifier&quot;: &quot;/&quot;//指令标志，在聊天框里首位输入该符号视为指令</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Tshock所有指令详细介绍"><a href="#Tshock所有指令详细介绍" class="headerlink" title="Tshock所有指令详细介绍"></a>Tshock所有指令详细介绍</h2><ul>
<li><p>指令：auth<br>介绍：开服后服主需要进入服务器，但是如何获得管理权限呢？开服后会发现服务器有一横黄色字体，其中/auth xxxxxxxx最为瞩目【一般都为八位数，可通过tshock的auth.txt文件夹修改密码】，在服务器里输入auth命令＋密码即可获得临时超级管理权限，如何获得永久管理权限呢？以后会说到。<br>auth xxxxxxxx —获取临时管理权限，退出服务器后权限重置</p>
</li>
<li><p>指令：auth-verify<br>介绍：服主获得临时超级管理权限之后建议马上输入此命令，这样以后就不能通过auth获得管理权限了，以防黑客获取权限【如果黑客真的来了…估计这命令也没用】，在这之前一定要获取永久管理权限，否则下次登录服务器就无法获取管理权限了。想要再次可以使用auth指令获取临时管理权限可以删掉tshock目录下的auth.lck文件解除。auth-verify —禁止使用auth指令</p>
</li>
<li><p>指令：user<br>介绍：管理玩家以及用户组</p>
<ul>
<li>子命令：<br>user add 玩家名字 密码 用户组 —添加玩家到某一个用户组<br>user del 玩家名字 —删除玩家信息<br>user password 玩家名字 新密码 —更改某一玩家的密码【这个真…】<br>user group 玩家名字 用户组 —更改某一玩家的用户组<br>备注：user命令可以更改玩家的信息，极为重要，如无特殊情况，请不要把该命令权限交给他人</li>
</ul>
</li>
<li><p>指令：login<br>介绍：一般服务器都会设置登录这个选项，进入服务器后输入以下子命令登录至服务器。</p>
<ul>
<li>子命令：<br>login —直接使用角色名称和UUID登录<br>login 密码 —使用游戏角色名称和密码登录<br>login 用户名 密码 —使用用户名和密码登录<br>备注：请牢记您的密码。</li>
</ul>
</li>
<li><p>指令：password<br>介绍：用于修改用户的登录密码。</p>
</li>
<li><p>password 旧密码 新密码 —修改登录密码<br>备注：请牢记您更改后的密码。</p>
</li>
<li><p>指令：register<br>介绍：用于注册服务器用户账号。</p>
<ul>
<li>子命令：<br>register 密码 —使用游戏玩家名称当做用户名和密码注册<br>register 用户名 密码 —使用自己设置的用户名和密码注册<br>备注：请牢记注册后的密码并尽量弄复杂。 </li>
</ul>
</li>
<li><p>指令：ban<br>介绍：封禁掉某玩家。</p>
<ul>
<li>子命令：（【】内内容选填）<br>ban add 玩家名称 【理由】 —永久封禁一个用户<br>ban addip IP地址 【理由】 —永久封禁一个IP地址，通过此IP地址进入的玩家将被禁止进服务器<br>ban addtemp 玩家名称 时间 【理由】 —限时性封禁一个用户<br>ban list 【页码】 —显示正在被封禁的用户列表，不输入页码默认显示第一页<br>ban listip 【页码】 —显示正在被封禁的IP地址列表</li>
<li>相关命令：<br>del 用户名 —解封一个用户<br>delip IP地址 —解封一个IP地址<br>备注：第三条子命令所涉及到的时间的格式为【1d1h1m1s】，其中d=day代表天，h=<br>hour代表小时，m代表分钟，s代表秒，如果想封禁玩家123长达一天三小时的时间那么格式为：<br>ban addtemp 123 1d3h 就是想封禁你你能把我咋滴，无视理由= =</li>
</ul>
</li>
<li><p>指令：broadcast<br>介绍：系统广播命令，但不知道能不能定时播放，貌似有个插件可以做到。<br>broadcast 内容 —播放广播</p>
<ul>
<li>相关命令：<br>bc 内容 —也是播放广播，只不过是broadcast的缩写<br>say 内容 —还是播放广播</li>
</ul>
</li>
<li><p>指令：displaylogs<br>介绍：是否保存服务器日志，不修改config的情况下默认目录为tshock<br>【如以后有些指令我没有给出用法，即直接输入生效】</p>
</li>
<li><p>指令：group<br>介绍：管理用户组。</p>
<ul>
<li>子命令：<br>group add 新的用户组名称 权限 —添加一个新的用户组并给其初始权限<br>group addperm 用户组 权限 —给某一用户组添加权限<br>group color 用户组 颜色 —改变某一用户组的聊天颜色【颜色为RGB值，具体度娘】<br>group del 用户组名称 —删除一个用户组<br>group delperm 用户组名称 权限 —删除某一用户组的某个权限<br>group list 【页码】—显示所有已设置的用户组<br>group listperm 用户组名称 【页码】 —显示某一用户组的所有权限<br>group parent 用户组名称 父亲用户组名称 —修改某一用户组的父亲组<br>group prefix 用户组名称 前缀 —设置某一用户组聊天前缀<br>group suffix 用户组名称 后缀 —设置某一用户组聊天后缀<br>备注：这里的父亲用户组值得一提，如果用户组123为456的父亲用户组，那么456将继承123的全部权限，在tshock默认的用户组中，guest是最没权限但是所有用户组的父亲组，故所有用户组都将继承他的权限。如果123和456都含有同一个权限，只删除456的那个权限的话是无法彻底删去的，因为他还有123这个父亲撑腰。所以要完全撤掉这个权限需要撤销掉123的这个权限、如果123还有父亲用户组的话那就要继续找继续找，知道找到最年长的一辈才能彻底删掉这个权限。<br>备注2：【*】代表所有权限，可以?豆芾碓敝挥幸桓鋈ㄏ蓿蔷褪恰?】</li>
</ul>
</li>
<li><p>指令：itemban<br>介绍：封禁掉某一物品。</p>
<ul>
<li>子命令：<br>itemban add 物品英文名称或物品ID—封禁掉某一物品<br>itemban allow 物品英文名称或物品IP 用户组名称—允许某一用户组使用该被封禁的物品<br>itemban del 物品英文名称或物品ID—将某一物品解除封禁<br>itemban disallow 物品英文名称或物品ID 用户组名称—取消某一用户组对该封禁物品的使用权限<br>itemban list 【页码】—列出所有被封禁掉的物品<br>备注：没有权限使用该物品的用户组会被冻结。</li>
</ul>
</li>
<li><p>指令：region<br>介绍：设置领地，极为重要！</p>
<ul>
<li>子命令：<br>region set 1/2 —设置临时边界点。<br>region clear —清除设置的临时边界点<br>region define 名字 —给刚才设置的临时边界起名，将其变成私有领地。<br>region delete 领地名称 —删除某一个私有领地<br>region name -显示当前位置的领地名称<br>region list 【页码】 —显示当前所有领地<br>region resize 领地名称 —重新设置领地大小<br>region allow 玩家名称 领地名称 —将某一领地分享给另一位玩家<br>region remove 玩家名称 领地名称 —取消将某一领地分享给某位玩家<br>region allowg 用户组名称 领地名称 —将某一领地分享给某一个用户组<br>region removeg 用户组名称 领地名称 —将某一领地的分享权限取消至某个用户组<br>region info 领地名称 —显示领地信息<br>region protect 领地名称 true/false —是否开启保护某个领地<br>region z 领地名称 优先等级 —设置领地的优先权<br>备注：如何设置领地？<br>使用稿子在一个长方形的左上角敲一下，之后输入region set 1<br>使用稿子在同一个长方形的右下角敲一下，之后输入region set 2<br>输入region define 名称 设置成自己的私有领地吧！<br>私有领地不可被除领主之外的人破坏或建筑，除肺淦鞑享给某个玩家。</li>
</ul>
</li>
<li><p>指令：kick<br>介绍：将玩家移除服务器，克熊孩子专用【其实ban更好…】。<br>kick 玩家名称 【理由】</p>
</li>
<li><p>指令：projban<br>介绍：在服务器里封禁某种弹药使用权限。</p>
<ul>
<li>子命令：<br>projban add 弹药ID —封禁某种弹药<br>projban allow 弹药ID 用户组名称 —允许某一用户组使用该被封禁的弹药<br>projban del 弹药ID —恢复某一个弹药的使用权限<br>projban disallow 弹药ID 用户组名称 —解除某一用户组使用某个弹药的权限<br>projban list —列出所有被封禁的弹药</li>
</ul>
</li>
<li><p>指令：mute<br>介绍：禁言某玩家，刷屏的你们惨咯~<br>mute 用户名 【理由】—禁言某位玩家</p>
<ul>
<li>相关命令：<br>unmute 用户名 —解除某位玩家的禁言</li>
</ul>
</li>
<li><p>指令：savessc<br>介绍：手动保存服务器的玩家存档。</p>
</li>
<li><p>指令：tempgroup<br>介绍：‘设置临时用户组，不明意义。</p>
</li>
<li><p>指令：userinfo<br>介绍：查询某一用户信息。<br>usernfo 玩家姓名</p>
<ul>
<li>相关命令：<br>ui 玩家姓名 —ui就是userinfo的简写</li>
</ul>
</li>
<li><p>指令：annoy<br>介绍：骚扰【shenmegui】一个玩家。<br>annoy 玩家名称 骚扰时间<br>备注：怎么骚扰的，可以亲自试验一下，23333</p>
</li>
<li><p>指令：confuse<br>介绍：让某个玩家不再受控制。【即，方向箭无法正确的控制角色移动】【这命令真NB】<br>confuse 玩家名称<br>备注：对同一个玩家输入两次该命令将解除不受控制状态。</p>
</li>
<li><p>指令：rocket<br>介绍：在某位玩家旁边发射一个火箭。<br>rocket 玩家名称</p>
</li>
<li><p>指令：firework<br>介绍：在某位玩家身边发射烟花。<br>firework 玩家名称 【red/green/blue/yellow】</p>
</li>
<li><p>指令：checkupdates<br>介绍：检查服务器【tshock】的更新状况。</p>
</li>
<li><p>指令：off<br>介绍：关闭服务器并且保存服务器数据。</p>
<ul>
<li>相关命令：<br>exit —同上</li>
</ul>
</li>
<li><p>指令：off-nosave<br>介绍：关闭服务器但不保存服务器数据。服务器被熊炸了之后立即使用该命令，不要犹豫。</p>
<ul>
<li>相关命令：<br>exit-nosave —真是没事闲着== 指令：reload<br>介绍：重新载入config文件，不必重新启动服务器去加载config文件了，但是部分配置还必须重启服务器才能生效。</li>
</ul>
</li>
<li><p>指令：restart<br>介绍：重启服务器。</p>
</li>
<li><p>指令：serverpassword<br>介绍：修改服务器的密码。</p>
</li>
<li><p>指令：version<br>介绍：显示当前tshock版本信息。</p>
</li>
<li><p>指令：whitelist<br>介绍：管理服务器白名单【需在config配置文件里把白名单打开】</p>
</li>
<li><p>指令：give<br>介绍：给予玩家一个物品。<br>give 物品英文名称或物品ID 玩家名称（可以是自己） 【数量】【英文前缀（武器用）】</p>
<ul>
<li>相关命令：<br>g 物品英文名称或物品ID 玩家名称（可以是自己） 【数量】【英文前缀（武器用）】 —即give的简写</li>
</ul>
</li>
<li><p>指令：item<br>介绍：给予自己一个物品。<br>item 物品英文名称或物品ID【数量】【英文前缀（武器用）】</p>
<ul>
<li>相关命令：<br>i 物品英文名称或物品ID【数量】【英文前缀（武器用）】—不解释</li>
</ul>
</li>
<li><p>指令：butcher<br>介绍：杀死当前服务器里的怪物或可爱的npc。<br>butcher 怪物id/npc<br>备注：不写ID将表示杀死所有除了玩家的生物。</p>
</li>
<li><p>指令：invade<br>介绍：开启军团入侵指令！<br>invade 入侵军团<br>备注：入侵军团的类型有：goblin【哥布林】，snowman【雪人军团】，pirate【海盗】。另外，南瓜月，血月，霜月有其他指令。</p>
</li>
<li><p>指令：maxspawn<br>介绍：设置怪物最大刷新量，但只是临时的。<br>备注：关闭服务器后失效，永久修改最大怪物刷新量请去修改config配置文件。</p>
</li>
<li><p>指令：spawnboss<br>介绍：嘛，稍微懂点英文的都知道是召唤boss的指令~<br>spawnboss BOSS名称 【数量】</p>
<ul>
<li>相关命令：<br>sb BOSS名称 【数量】 —简写不解释，但是这简写简直233<br>备注：boss类型主要有：eye-克苏鲁之眼/eater-世界吞噬者/wof-血肉之墙/queen-蜂后/brain-克苏鲁之脑/king-史莱姆王/twins-双子魔眼/prime-机械骷髅王/skeletron-骷髅王/golem-石巨人/plantera-世纪之花/destroyer-世界毁灭者/duke-猪鲨公爵/all-所有种类boss，若没有填数量一空则默认为一。</li>
</ul>
</li>
<li><p>指令：spawnmob<br>介绍：在你的身边召唤一个怪物或者NPC。<br>spawnmob 怪物ID或NPC的ID 【数量】</p>
<ul>
<li>相关命令：<br>sm 怪物ID或NPC的ID 【数量】 —如果召唤一堆NPC会发生什么？</li>
</ul>
</li>
<li><p>指令：spawnrate<br>介绍：设置怪物刷新时间间隔，同样是临时性的，需要通过config配置文件设置永久性的。</p>
</li>
<li><p>指令：pumpkin<br>介绍：召唤南瓜月！！！<br>备注：本人没有测试白天是否可以使用指令召唤南瓜月。</p>
</li>
<li><p>指令：home<br>介绍：回到自己设置的出生点【床】。</p>
</li>
<li><p>指令：spawn<br>介绍：回到地图【服务器】的出生点。</p>
</li>
<li><p>指令：tp<br>介绍：神の指令，可以传送到别人身边。</p>
<ul>
<li>子命令：<br>tp 玩家名称 —传送到某人身边。<br>tp x坐标 y坐标 —传送到特定的一个坐标，可以通过GPS查看坐标。</li>
</ul>
</li>
<li><p>指令：tpallow<br>介绍：设置别人是否可以传送到你身边。</p>
</li>
<li><p>指令：tphere<br>介绍：将别人传送到你身边，有可能侵犯他人隐私。<br>tphere 玩家名称<br>备注：如果玩家名称填写all或者【*】，则表示所有玩家。</p>
</li>
<li><p>指令：antibuild<br>介绍：是否开启禁止建筑【破坏】模式，开启后无法破坏地图上的任何东西，但也是临时性的。 指令：bloodmoon<br>介绍：开启血月！</p>
</li>
<li><p>指令：grow<br>介绍：在你的旁边生长一颗植株，可以达到无限资源的目的。【本来就可以无线资源吧..】<br>grow tree/epictree/mushroom/cactus/herb<br>备注：这几个英文单词指得分别是：树，棕桐树，蘑菇，仙人掌，草药。</p>
</li>
<li><p>指令：dropmeteor<br>介绍：使用该指令将会随机生成一个陨石！！！请在主城周围使用该命令否则后果自负。</p>
</li>
<li><p>指令：eclipse<br>介绍：开启日食，配合config配置修改成极昼模式可以达到永久日食的目的。</p>
</li>
<li><p>指令：forcexmas<br>介绍：是否开启圣诞模式，注意，有是否选项！<br>forcexmas true/false</p>
</li>
<li><p>指令：fullmoon<br>介绍：使用该指令开启满月！<br>这啥…</p>
</li>
<li><p>指令：hardmode<br>介绍：如当前地图处于简单模式【肉山前】，使用该指令立刻转至困难模式【肉山后】，反亦之。</p>
</li>
<li><p>指令：protectspawn<br>介绍；开启临时保护出生点模式，范围在config配置文件里修改，不过也只是临时性的。</p>
</li>
<li><p>指令：rain<br>介绍：是否开启或停止下雨。<br>rain stop/start —前者停止正在下的雨，后者则开始下雨</p>
</li>
<li><p>指令：setspawn<br>介绍：将你脚下踩得这块方块设置为地图的出生点，这个是永久的！但是仍然可以输入该指令改变地图出生点。</p>
</li>
<li><p>指令：settle<br>介绍：立刻强制所有液体平衡。</p>
</li>
<li><p>指令：wind<br>介绍：改变风速？<br>wind 数值</p>
</li>
<li><p>指令：time<br>介绍：设置地图的时间<br>time day/night/dusk/noon/midnight<br>备注：day代表白天，游戏时间为4:00整，这个时间点表示刚刚天亮。night表示傍晚，时间未知。dusk代表黄昏，表示刚刚步入夜晚。noon表示正午，太阳当空照~一天中最亮的时候。midnight代表午夜。</p>
</li>
<li><p>指令：world<br>介绍：显示当前地图信息 。</p>
</li>
<li><p>指令：buff<br>介绍：给予自己一种buff，可以自定义时间哦！<br>buff buff序号或者英文名称 【持续的时间】<br>备注：时间选项不添加默认为60秒。</p>
</li>
<li><p>指令：clear<br>介绍：清理以你为O点的半径中的怪物/物品/弹药。<br>clear item/npc/projectile 【半径】<br>备注：半径不填写大概默认为全部。npc代表怪物，第三者代表弹药，item代表掉落物品。<br>并且在minecraft里，clear指令是清空玩家背包的指令。 </p>
</li>
<li><p>指令：gbuff<br>介绍：给予某个玩家一种buff。<br>gbuff 玩家名称 buff名称或buffID 【时间】</p>
<ul>
<li>相关指令：<br>buffplayer 玩家名称 buff名称或buffID 【时间】<br>备注：时间一栏不填写默认为60秒。</li>
</ul>
</li>
<li><p>指令：godmode<br>介绍：这将会给一个人上帝的权限！！！<br>godmode —给予自己上帝的权利！<br>godmode 用户名 —给予一个玩家上帝的权利！<br>上帝的权利：当你收到任何伤害【这种伤害会减少你的体力】的时候，你马上恢复你血量上限的血量【比如你有200点血量上限，你收到伤害时，会立刻回满200点血。】。可是如果该伤害是致命的，仍然会死亡。【比如地牢守护者】</p>
</li>
<li><p>指令：heal<br>介绍：治疗一个玩家【包括hp和mp】<br>heal —治疗自己<br>heal 玩家名称 —治疗某一个玩家</p>
</li>
<li><p>指令：kill<br>介绍：干死某位玩家233。<br>kill 玩家名称 —杀掉玩家 自顶<br>……… 指令：me<br>介绍：跟自己卖萌=￣ω￣=。<br>me 聊天内容</p>
</li>
<li><p>指令：party<br>介绍：组队聊天内容。<br>party 聊天内容 —其中的组队是指pvp的队伍颜色。<br>相关指令：<br>p 聊天内容 —可以更加快捷的跟组队聊天</p>
</li>
<li><p>指令：reply<br>介绍：回复某人私聊给你的话【亦可给某人发送私信】。<br>reply 私信内容</p>
<ul>
<li>相关命令：<br>r 聊天内容</li>
</ul>
</li>
<li><p>指令：slap<br>介绍：扇别人一巴掌！并强制造成五点血量伤害，据说有击退效果。<br>slap 玩家姓名 指令：stats<br>介绍：显示当前服务器的信息。</p>
</li>
<li><p>指令：warp<br>介绍：管理当前服务器所开的地图的传送点，不同的地图有不同的传送点管理。</p>
<ul>
<li>子命令：<br>warp 传送点 —传送到该传送点，服务器的注册用户默认拥有该指令。<br>warp add 传送点名称 —在当前脚下设置一个传送点并命名，所有传送点都饰淦鳙共的。<br>warp del 传送点名称 —删除某一传送点。<br>warp list 【页数】 —显示当前服务器开的地图所设置的所有传送点。<br>warp send 玩家名称 传送点名称 —将某一用户立即强制传送到某一传送点。<br>warp hide 传送点名称 ture/false —设置传送点是否显示，ture为是，反之。<br>备注：warp可以在任意一个地方建立传送点，也可以用来设置服务器活动传送点，所以如无特殊情况，请不要授予注册玩家管理传送点的权限。</li>
</ul>
</li>
<li><p>指令：whisper<br>介绍：发送一种私聊信息给予某位玩家。<br>whisper 聊天内容 —私聊某位玩家。</p>
<ul>
<li>相关命令：<br>tell 聊天内容 —还是私聊某位玩家。<br>w 聊天内容 —whisper的简写。</li>
</ul>
</li>
<li><p>指令：aliases<br>介绍：查询某一命令的相同命令【比如上一条指令的whisper，就有两个相同命令，即tell和w】。</p>
</li>
<li><p>指令：help<br>介绍：查询当前用户组可供使用的命令。</p>
</li>
<li><p>指令：motd<br>介绍：显示服务器设置的欢迎信息。</p>
</li>
<li><p>指令：playing<br>介绍：显示当前服务器所有在线玩家。</p>
<ul>
<li>相关命令：<br>online<br>who</li>
</ul>
</li>
<li><p>指令：rule<br>介绍：显示服务器设置的规则！新手最好先看服规，否则后果自负。</p>
<h2 id="Tshock内置权限详解"><a href="#Tshock内置权限详解" class="headerlink" title="Tshock内置权限详解"></a>Tshock内置权限详解</h2><p>从此片开始，我将为大家介绍tshock原版权限详解，这些权限会用在group addperm 中使用，且特别重要。</p>
<h3 id="tshock-account系列权限"><a href="#tshock-account系列权限" class="headerlink" title="tshock.account系列权限"></a>tshock.account系列权限</h3><p>备注：所有原版tshock权限的第一个单词均有tshock，没有特例。</p>
</li>
<li><p>权限：tshock.account.register<br>介绍：允许用户组内的用户可以在服务器内注册账号。<br>备注：使用方法：group addperm 用户组名称 tshock.account.register，这样就给予了一个用户组可以注册的权限，但是不要忘记父亲用户组哦，子用户组可以继承父用户组的所有权限。</p>
</li>
<li><p>权限：tshock.account.login<br>介绍：允许用户组内的用户可以登录账号。<br>备注：这条和上面一条最好不要做任何改动。</p>
</li>
<li><p>权限：tshock.account.changepassword<br>介绍：允许用户组可以修改自己账号的密码。 权限：tshock.admin.warp<br>介绍：可以使用warp系列指令！</p>
</li>
<li><p>权限：tshock.admin.itemban<br>介绍：可以封禁某种物品的使用权限</p>
</li>
<li><p>权限：tshock.admin.projectileban<br>介绍：可以封禁某种弹药的使用权限</p>
</li>
<li><p>权限：tshock.admin.group<br>介绍：可以使用group系列命令</p>
</li>
<li><p>权限：tshock.admin.region<br>介绍：可以使用region【圈地】系列指令</p>
</li>
<li><p>权限：tshock.admin.mute<br>介绍：可以禁言某人 权限：tshock.admin.seeplayerids<br>介绍：可以查看当前服务器玩家的人物信息。</p>
</li>
<li><p>权限：tshock.admin.savessi<br>介绍：可以被服务器保存背包数据<br>备注：对于那些临时玩家和用大号进开荒服的玩家们，可以考虑单独弄一个用户组并将此权限删除。</p>
</li>
<li><p>权限： tshock.admin.tempgroup<br>介绍：可以使用tempgroup指令</p>
</li>
<li><p>权限：tshock.admin.broadcast<br>介绍：可以使用say等指令进行系统【服务器】广播</p>
</li>
<li><p>权限：tshock.admin.userinfo<br>介绍：可以获取当前在线的用户信息【可能包括IP地址】 【tshock.buff】系列权限</p>
</li>
<li><p>权限：tshock.buff.self<br>介绍：可以给自己加buff</p>
</li>
<li><p>权限：tshock.buff.others<br>介绍：可以给其他玩家加buff<br>备注：如果一个用户组同时拥有以上两条权限，那么就可以使用buff系列指令。 【tshock.cfg系列权限】</p>
</li>
<li><p>权限：tshock.cfg.maintenance<br>介绍：可以关闭或重新启动服务器<br>备注：任何时候，都不要把这条权限给除超级管理之外的任何用户组！！！任何时候，都不要把这条权限给除超级管理之外的任何用户组！！！任何时候，都不要把这条权限给除超级管理之外的任何用户组！！！【很重要所以说三遍】</p>
</li>
<li><p>权限：tshock.cfg.whitelist<br>介绍：可以管理白名单</p>
</li>
<li><p>权限：tshock.cfg.password<br>介绍：可以修改服务器密码</p>
</li>
<li><p>权限：tshock.cfg.reload<br>介绍：可以使用指令重新加载config配置文件</p>
</li>
<li><p>权限：tshock.cfg.updateplugins<br>介绍：可以使用指令更新tshock<br>备注：任何时候，都不要把以上所有权限交给除超级管理之外的任何用户组！！！！！任何时候，都不要把以上所有权限交给除超级管理之外的任何用户组！！！！！任何时候，都不要把以上所有权限交给除超级管理之外的任何用户组！！！！！任何时候，都不要把以上所有权限交给除超级管理之外的任何用户组！！！！！任何时候，都不要把以上所有权限交给除超级管理之外的任何用户组！！！！！【特别重要所以说五遍】 【tshock.ignore系列权限】</p>
</li>
<li><p>权限：tshock.ignore.removetile<br>介绍：是否让该用户组免于受到挖掘物块速度上限的检测</p>
</li>
<li><p>权限：tshock.ignore.placetile<br>介绍：是否让该用户组免于受到物块摆放速度上限的检测</p>
</li>
<li><p>权限：tshock.ignore.liquid<br>介绍：是否让该用户组免于受到液体摆放速度上限的检测</p>
</li>
<li><p>权限：tshock.ignore.projectile<br>介绍：是否让该用户组免于受到弹药伤害上限的检测</p>
</li>
<li><p>权限：tshock.ignore.paint<br>介绍：是否让该用户组免于受到喷漆速度上限的检测</p>
</li>
<li><p>权限：tshock.ignore.noclip<br>介绍：是否让该用户组免于受到锤击物块上限的检测</p>
</li>
<li><p>权限：tshock.ignore.itemstack<br>介绍：是否让该用户组免于受到物品堆叠上限的检测</p>
</li>
<li><p>权限：tshock.ignore.damage<br>介绍：是否让该用户组免于受到伤害上限的检测</p>
</li>
<li><p>权限：tshock.ignore.ssi<br>介绍：是否让该用户组免于受到背包的检测</p>
</li>
<li><p>权限：tshock.ignore.dropbanneditem<br>介绍：是否让该用户可以丢弃服务器封禁的物品并不消失 【tshock.item系列权限】</p>
</li>
<li><p>权限：tshock.item.spawn<br>介绍：该用户组是否可以使用item指令。</p>
</li>
<li><p>权限：tshock.item.usebanned<br>介绍：该用户组是否可以使用被服务器封禁的物品。</p>
</li>
</ul>
<h3 id="tshock-npc系列权限"><a href="#tshock-npc系列权限" class="headerlink" title="tshock.npc系列权限"></a>tshock.npc系列权限</h3><ul>
<li><p>权限：tshock.npc.maxspawns<br>介绍：是否可以使用指令控制最大刷怪数量</p>
</li>
<li><p>权限：tshock.npc.spawnrate<br>介绍：是否可以使用指令控制怪物刷新时间间隔</p>
</li>
<li><p>权限：tshock.npc.invade<br>介绍：是否可以开启怪物入侵【比如雪人军团之类的…】</p>
</li>
<li><p>权限：tshock.npc.spawnboss<br>介绍：是否可以使用指令召唤boss</p>
</li>
<li><p>权限：tshock.npc.rename<br>介绍：是否可以重新命名NpC</p>
</li>
<li><p>权限：tshock.npc.spawnmob<br>介绍：是否可以使用指令召唤怪物</p>
</li>
<li><p>权限：tshock.npc.summonboss<br>介绍：是否可以使用物品召唤boss</p>
</li>
<li><p>权限：tshock.npc.butcher<br>介绍：是否可以使用指令杀死怪物【butcher指令】</p>
</li>
<li><p>权限：tshock.npc.startinvasion<br>介绍：是否可以使用物品召唤军团入侵【比如雪人军团之类的…】</p>
</li>
</ul>
<h3 id="tshock-superadmin系列权限"><a href="#tshock-superadmin系列权限" class="headerlink" title="tshock.superadmin系列权限"></a>tshock.superadmin系列权限</h3><ul>
<li><p>权限：tshock.superadmin.authverify<br>介绍：用户组是否可以禁止使用auth指令获取临时管理员权限</p>
</li>
<li><p>权限：tshock.superadmin.user<br>介绍：用户组是否可以使用user指令管理用户组<br>【以上两条基本就可以操控整个服务器的权限了，如无特殊情况请不要以上两条权限给予给他人】<br>【tshock.tp系列权限】</p>
</li>
<li><p>权限：tshock.tp.self<br>介绍：用户组可以使用tp指令【注意，不是系列，仅限tp】</p>
</li>
<li><p>权限：tshock.tp.others<br>介绍：用户组可以使用tphere指令</p>
</li>
<li><p>权限：tshock.tp.block<br>介绍：使当前用户组的成员成为tp指令的目标时可以阻止他。</p>
</li>
<li><p>权限：tshock.tp.toall<br>介绍：可以使用tp指令传送到任何人身边【但是没有测试过是否和tshock.tp.block权限相矛盾】</p>
</li>
<li><p>权限：tshock.tp.silent<br>介绍：可以传送到别人身边但没有提示【然并卵】</p>
</li>
<li><p>权限：tshock.tp.home<br>介绍：可以使用home指令</p>
</li>
<li><p>权限：tshock.tp.spawn<br>介绍：可以使用spawn命令</p>
</li>
</ul>
<h3 id="tshock-world系列权限"><a href="#tshock-world系列权限" class="headerlink" title="tshock.world系列权限"></a>tshock.world系列权限</h3><ul>
<li><p>权限：tshock.world.editspawn<br>介绍：使当前用户组是否可以设置临时出生点保护</p>
</li>
<li><p>权限：tshock.world.editregion<br>介绍：可以使用编辑region指令【并不是改变这个指令的内容，而是使用】</p>
</li>
<li><p>权限：tshock.world.time.bloodmoon<br>介绍：是否可以使用指令开启血月</p>
</li>
<li><p>权限：tshock.world.time.pumpkinmoon<br>介绍：同上，血月变成南瓜月</p>
</li>
<li><p>权限：tshock.world.time.snowmoon<br>介绍：霜月【我越来越懒了哈哈哈哈哈哈哈哈哈】</p>
</li>
<li><p>权限：tshock.world.grow<br>介绍：是否可以使用grow指令</p>
</li>
<li><p>权限：tshock.world.hardmode<br>介绍：是否可以使用指令改变当前地图的难度【即困难模式和简单模式】</p>
</li>
<li><p>权限：tshock.world.movenpc<br>介绍：是否可以移动npc房间【开荒服务器建议给予普通玩家此权限】</p>
</li>
<li><p>权限：tshock.world.converthardmode<br>介绍：是否可以转换神圣之地和腐化之地之间的联系？【实验结果不明显，只能人工翻译…】</p>
</li>
<li><p>权限：tshock.world.setxmas<br>介绍：是否可以使用指令开启圣诞节</p>
</li>
<li><p>权限：tshock.world.save<br>介绍：是否可以使用save指令【注，其中不包括off】</p>
</li>
<li><p>权限：tshock.world.settleliquids<br>介绍：是否可以使用指令平衡液体</p>
</li>
<li><p>权限：tshock.world.info<br>介绍：是否可以获取服务器当前开启的地图信息</p>
</li>
<li><p>权限：tshock.world.setspawn<br>介绍：是否可以重新设置系统出生点</p>
</li>
<li><p>权限：tshock.world.time.dropmeteor<br>介绍：是否可以使用指令刷新陨石…</p>
</li>
<li><p>权限：tshock.world.time.eclipse<br>介绍：是否可以使用指令开启日食</p>
</li>
<li><p>权限：tshock.world.time.fullmoon<br>介绍：是否可以使用指令开启满月模式</p>
</li>
<li><p>权限：tshock.world.modify<br>介绍：不受禁止破坏指令的影响</p>
</li>
<li><p>权限：tshock.world.paint<br>介绍：是否可以使用油漆</p>
</li>
<li><p>权限：tshock.world.rain<br>介绍：是否可以使用指令下雨</p>
</li>
<li><p>权限：tshock.world.wind<br>介绍：是否可以改变风速？ 【Tshock原版剩余权限（没有分类）】</p>
</li>
<li><p>权限：tshock.clear<br>介绍：是否可以使用clear指令【注意是clear不是clean】</p>
</li>
<li><p>权限：tshock.kill<br>介绍：是否可以使用指令干掉某人</p>
</li>
<li><p>权限：tshock.reservedslot<br>介绍：该用户组的成员进入服务器时，不受最大人数的限制【服务器满员了照样进来，可以用在vip用户组上】</p>
</li>
<li><p>权限：tshock.warp<br>介绍：是否可以使用warp进行传送【注意，这和tshock.admin.warp权限有所不同，该权限只能利用warp指令进行传送而tshock.admin.warp则是可以使用warp系列的指令，即管理warp传送点】</p>
</li>
<li><p>权限：tshock.slap<br>介绍：是否可以扇别人一巴掌</p>
</li>
<li><p>权限：tshock.whisper<br>介绍：是否可以查看当前服务器人物信息</p>
</li>
<li><p>权限：tshock.annoy<br>介绍：是否可以骚扰别人</p>
</li>
<li><p>权限：tshock.heal<br>介绍：是否可以通过指令治愈自己</p>
</li>
<li><p>权限：tshock.partychat<br>介绍：是否可以进行队内聊天【即party和p】</p>
</li>
<li><p>权限：tshock.info<br>介绍：是否可以看到服务器信息</p>
</li>
<li><p>权限：tshock.thirdperson<br>介绍：是否可以跟自己卖萌</p>
</li>
<li><p>权限：tshock.godmode<br>介绍：是否可以使用godmode指令</p>
</li>
<li><p>权限：tshock.canchat<br>介绍：是否可以聊天【这条权限碉堡了】</p>
</li>
<li><p>权限：tshock.projectiles.usebanned【因为projectiles类别的权限就这么一条，我就放在其余权限里了】<br>介绍：是否可以使用被封禁【ban】掉的弹药。</p>
<p>region划领地的方法是先输入region set 1，之后敲击你需要设置区域的左上角！<br>下一步同理，输入region set 2之后再敲击设置区域的右下角！</p>
</li>
</ul>
]]></content>
      <categories>
        <category>服务器</category>
      </categories>
  </entry>
  <entry>
    <title>AZURE KINECT生成点云</title>
    <url>/2021/03/06/AZURE-KINECT%E7%94%9F%E6%88%90%E7%82%B9%E4%BA%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Azure-Kinect-生成点云"><a href="#Azure-Kinect-生成点云" class="headerlink" title="Azure Kinect 生成点云"></a>Azure Kinect 生成点云</h1><blockquote>
<p>参考链接：</p>
<p><a href="https://blog.csdn.net/denkywu/article/details/103305714">https://blog.csdn.net/denkywu/article/details/103305714</a></p>
</blockquote>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://gitee.com/JunLuJun/up/raw/master/20210306211927.png" alt=""></p>
<h2 id="main-cpp"><a href="#main-cpp" class="headerlink" title="main.cpp"></a>main.cpp</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;k4a/k4a.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/point_cloud.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/point_types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/visualization/cloud_viewer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/io/pcd_io.h&gt;</span></span></span><br><span class="line"><span class="comment">// 方便控制是否 std::cout 信息</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEBUG_std_cout 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将Mat转换为pcl的xyz格式</span></span><br><span class="line"><span class="comment"> * @param xyzDepth 输入的Mat</span></span><br><span class="line"><span class="comment"> * @param cloud 输入cloud</span></span><br><span class="line"><span class="comment"> * @return 是否转换成功</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">convertMatToPcl</span><span class="params">(<span class="keyword">const</span> cv::Mat&amp; xyzDepth, pcl::PointCloud&lt;pcl::PointXYZ&gt;::Ptr &amp;cloud)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cv::Mat矩阵的数据类型必须是 CV_32FC3</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">21</span> != xyzDepth.type())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;Error in convertMatToPcl().&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;The type of input data(cv::Mat) must be CV_32FC3.&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// cv::Mat数据大小</span></span><br><span class="line">    <span class="keyword">int</span> depthWidth = xyzDepth.cols;</span><br><span class="line">    <span class="keyword">int</span> depthHeight = xyzDepth.rows;</span><br><span class="line">    cloud-&gt;width = <span class="keyword">static_cast</span>&lt;<span class="keyword">uint32_t</span>&gt;(depthWidth);</span><br><span class="line">    cloud-&gt;height = <span class="keyword">static_cast</span>&lt;<span class="keyword">uint32_t</span>&gt;(depthHeight);</span><br><span class="line">    cloud-&gt;is_dense = <span class="literal">false</span>;</span><br><span class="line">    cloud-&gt;points.resize(cloud-&gt;height * cloud-&gt;width);</span><br><span class="line"></span><br><span class="line">    pcl::PointXYZ* pt = &amp;cloud-&gt;points[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> iRows = <span class="number">0</span>; iRows &lt; depthHeight; iRows++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> iCols = <span class="number">0</span>; iCols &lt; depthWidth; iCols++, pt++)</span><br><span class="line">        &#123;</span><br><span class="line">            pt-&gt;x = xyzDepth.at&lt;cv::Vec3f&gt;(iRows, iCols)[<span class="number">0</span>];</span><br><span class="line">            pt-&gt;y = xyzDepth.at&lt;cv::Vec3f&gt;(iRows, iCols)[<span class="number">1</span>];</span><br><span class="line">            pt-&gt;z = xyzDepth.at&lt;cv::Vec3f&gt;(iRows, iCols)[<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 1.找到并打开 Azure Kinect 设备*/</span></span><br><span class="line">    <span class="comment">// 发现已连接的设备数</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">uint32_t</span> device_count = k4a::device::get_installed_count();</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == device_count)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Error: no K4A devices found. &quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> EXIT_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Found &quot;</span> &lt;&lt; device_count &lt;&lt; <span class="string">&quot; connected devices. &quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">1</span> != device_count)<span class="comment">// 超过1个设备，也输出错误信息。</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Error: more than one K4A devices found. &quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> EXIT_FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span><span class="comment">// 该示例代码仅限对1个设备操作</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Done: found 1 K4A device. &quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 打开（默认）设备</span></span><br><span class="line">    k4a::device device = k4a::device::open(K4A_DEVICE_DEFAULT);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Done: open device. &quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 2.配置并启动设备*/</span></span><br><span class="line">    <span class="keyword">k4a_device_configuration_t</span> config = K4A_DEVICE_CONFIG_INIT_DISABLE_ALL;</span><br><span class="line">    config.camera_fps = K4A_FRAMES_PER_SECOND_30;</span><br><span class="line">    config.color_format = K4A_IMAGE_FORMAT_COLOR_BGRA32;</span><br><span class="line">    config.color_resolution = K4A_COLOR_RESOLUTION_1080P;</span><br><span class="line">    <span class="comment">// config.depth_mode = K4A_DEPTH_MODE_NFOV_UNBINNED;</span></span><br><span class="line">    config.depth_mode = K4A_DEPTH_MODE_WFOV_2X2BINNED;</span><br><span class="line">    config.synchronized_images_only = <span class="literal">true</span>;<span class="comment">// ensures that depth and color images are both available in the capture</span></span><br><span class="line">    device.start_cameras(&amp;config);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Done: start camera.&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 3.稳定化*/</span></span><br><span class="line">    k4a::capture capture;</span><br><span class="line">    <span class="keyword">int</span> iAuto = <span class="number">0</span>;<span class="comment">//用来稳定，类似自动曝光</span></span><br><span class="line">    <span class="keyword">int</span> iAutoError = <span class="number">0</span>;<span class="comment">// 统计自动曝光的失败次数</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (device.get_capture(&amp;capture))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; iAuto &lt;&lt; <span class="string">&quot;. Capture several frames to give auto-exposure&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">            <span class="comment">// 跳过前 n 个（成功的数据采集）循环，用来稳定</span></span><br><span class="line">            <span class="keyword">if</span> (iAuto != <span class="number">30</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                iAuto++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Done: auto-exposure&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">// 跳出该循环，完成相机的稳定过程</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; iAutoError &lt;&lt; <span class="string">&quot;. K4A_WAIT_RESULT_TIMEOUT.&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">if</span> (iAutoError != <span class="number">30</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                iAutoError++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Error: failed to give auto-exposure. &quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">return</span> EXIT_FAILURE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-----------------------------------&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;----- Have Started Kinect DK. -----&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-----------------------------------&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 4.从设备获取捕获*/</span></span><br><span class="line">    k4a::image rgbImage;</span><br><span class="line">    k4a::image depthImage;</span><br><span class="line">    k4a::image irImage;</span><br><span class="line"></span><br><span class="line">    cv::Mat cv_rgbImage_with_alpha;</span><br><span class="line">    cv::Mat cv_rgbImage_no_alpha;</span><br><span class="line">    cv::Mat cv_depth;</span><br><span class="line">    cv::Mat cv_depth_8U;</span><br><span class="line">    cv::Mat cv_irImage;</span><br><span class="line">    cv::Mat cv_irImage_8U;</span><br><span class="line">    k4a::calibration k4aCalibration = device.get_calibration(config.depth_mode, config.color_resolution);<span class="comment">// Get the camera calibration for the entire K4A device, which is used for all transformation functions.</span></span><br><span class="line">    k4a::transformation k4aTransformation = k4a::transformation(k4aCalibration);</span><br><span class="line">    k4a::image xyzImage;</span><br><span class="line">    cv::Mat cv_xyzImage;<span class="comment">// 16位有符号</span></span><br><span class="line">    cv::Mat cv_xyzImage_32F;<span class="comment">// 32位float</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (device.get_capture(&amp;capture))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//RGB</span></span><br><span class="line">            rgbImage = capture.get_color_image();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> DEBUG_std_cout == 1</span></span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[rgb] &quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;format: &quot;</span> &lt;&lt; rgbImage.get_format() &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;device_timestamp: &quot;</span> &lt;&lt; rgbImage.get_device_timestamp().count() &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;system_timestamp: &quot;</span> &lt;&lt; rgbImage.get_system_timestamp().count() &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;height*width: &quot;</span> &lt;&lt; rgbImage.get_height_pixels() &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; rgbImage.get_width_pixels() </span><br><span class="line">				&lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            cv_rgbImage_with_alpha = cv::Mat(rgbImage.get_height_pixels(), rgbImage.get_width_pixels(), CV_8UC4, (<span class="keyword">void</span> *)rgbImage.get_buffer());</span><br><span class="line">            cv::cvtColor(cv_rgbImage_with_alpha, cv_rgbImage_no_alpha, cv::COLOR_BGRA2BGR);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// depth</span></span><br><span class="line">            depthImage = capture.get_depth_image();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> DEBUG_std_cout == 1</span></span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[depth] &quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;format: &quot;</span> &lt;&lt; depthImage.get_format() &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;device_timestamp: &quot;</span> &lt;&lt; depthImage.get_device_timestamp().count() &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;system_timestamp: &quot;</span> &lt;&lt; depthImage.get_system_timestamp().count() &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;height*width: &quot;</span> &lt;&lt; depthImage.get_height_pixels() &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; depthImage.get_width_pixels() </span><br><span class="line">				&lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            cv_depth = cv::Mat(depthImage.get_height_pixels(), depthImage.get_width_pixels(), CV_16U, (<span class="keyword">void</span> *)depthImage.get_buffer(), <span class="keyword">static_cast</span>&lt;<span class="keyword">size_t</span>&gt;(depthImage.get_stride_bytes()));</span><br><span class="line">            cv_depth.convertTo(cv_depth_8U, CV_8U, <span class="number">1</span> );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// ir</span></span><br><span class="line">            irImage = capture.get_ir_image();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> DEBUG_std_cout == 1</span></span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[ir] &quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;format: &quot;</span> &lt;&lt; irImage.get_format() &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;device_timestamp: &quot;</span> &lt;&lt; irImage.get_device_timestamp().count() &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;system_timestamp: &quot;</span> &lt;&lt; irImage.get_system_timestamp().count() &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">				&lt;&lt; <span class="string">&quot;height*width: &quot;</span> &lt;&lt; irImage.get_height_pixels() &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; irImage.get_width_pixels() </span><br><span class="line">				&lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            cv_irImage = cv::Mat(irImage.get_height_pixels(), irImage.get_width_pixels(), CV_16U, (<span class="keyword">void</span> *)irImage.get_buffer(), <span class="keyword">static_cast</span>&lt;<span class="keyword">size_t</span>&gt;(irImage.get_stride_bytes()));</span><br><span class="line">            cv_irImage.convertTo(cv_irImage_8U, CV_8U, <span class="number">1</span> );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 点云</span></span><br><span class="line">            xyzImage = k4aTransformation.depth_image_to_point_cloud(depthImage, K4A_CALIBRATION_TYPE_DEPTH);</span><br><span class="line">            cv_xyzImage = cv::Mat(xyzImage.get_height_pixels(), xyzImage.get_width_pixels(), CV_16SC3, (<span class="keyword">void</span> *)xyzImage.get_buffer(), <span class="keyword">static_cast</span>&lt;<span class="keyword">size_t</span>&gt;(xyzImage.get_stride_bytes()));</span><br><span class="line">            cv_xyzImage.convertTo(cv_xyzImage_32F, CV_32FC3, <span class="number">1.0</span>/<span class="number">1000</span>, <span class="number">0</span>);<span class="comment">// 转为float，同时将单位从 mm 转换为 m.</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// show image</span></span><br><span class="line">            cv::imshow(<span class="string">&quot;color&quot;</span>, cv_rgbImage_no_alpha);</span><br><span class="line">            cv::imshow(<span class="string">&quot;depth&quot;</span>, cv_depth_8U);</span><br><span class="line">            cv::imshow(<span class="string">&quot;ir&quot;</span>, cv_irImage_8U);</span><br><span class="line">            cv::waitKey(<span class="number">1</span>);</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;--- test ---&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">            <span class="comment">//10s后跳出循环</span></span><br><span class="line">            cv::waitKey(<span class="number">10000</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;false: K4A_WAIT_RESULT_TIMEOUT.&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 5.PCL可视化点云*/</span></span><br><span class="line">    pcl::PointCloud&lt;pcl::PointXYZ&gt;::<span class="function">Ptr <span class="title">cloud</span><span class="params">(<span class="keyword">new</span> pcl::PointCloud&lt;pcl::PointXYZ&gt;)</span> </span>;</span><br><span class="line">    <span class="keyword">if</span> (convertMatToPcl(cv_xyzImage_32F,cloud))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">boost::<span class="built_in">shared_ptr</span>&lt;pcl::visualization::PCLVisualizer&gt; <span class="title">viewer</span> <span class="params">(<span class="keyword">new</span> pcl::visualization::PCLVisualizer (<span class="string">&quot;3D Viewer&quot;</span>))</span></span>;</span><br><span class="line">        viewer-&gt;setBackgroundColor (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        pcl::<span class="function">visualization::PointCloudColorHandlerCustom&lt;pcl::PointXYZ&gt; <span class="title">single_color</span> <span class="params">(cloud, <span class="number">135</span>,<span class="number">206</span>,<span class="number">250</span>)</span></span>;<span class="comment">//淡蓝色点云</span></span><br><span class="line">        viewer-&gt;addPointCloud&lt;pcl::PointXYZ&gt;(cloud,single_color,<span class="string">&quot;点云&quot;</span>);</span><br><span class="line">        <span class="comment">//viewer-&gt;setPointCloudRenderingProperties(pcl::visualization::PCL_VISUALIZER_POINT_SIZE,1,&quot;sdf&quot;);</span></span><br><span class="line">        viewer-&gt;addCoordinateSystem(<span class="number">0.1</span>);</span><br><span class="line">        viewer-&gt;initCameraParameters();</span><br><span class="line">        <span class="keyword">while</span>(!viewer-&gt;wasStopped())</span><br><span class="line">        &#123;</span><br><span class="line">            viewer-&gt;spinOnce(<span class="number">100</span>);</span><br><span class="line">            <span class="comment">//boost::this_thread::sleep(boost::posix_time::microseconds(100000));</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 6.清场*/</span></span><br><span class="line">    cv::destroyAllWindows();</span><br><span class="line">    k4aTransformation.destroy();</span><br><span class="line">    rgbImage.reset();</span><br><span class="line">    depthImage.reset();</span><br><span class="line">    irImage.reset();</span><br><span class="line">    capture.reset();</span><br><span class="line">    device.close();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;----------------------------------&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;------------- closed -------------&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;----------------------------------&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="CMakeLists-txt"><a href="#CMakeLists-txt" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">project</span>(AzureKinect_01)</span><br><span class="line"><span class="keyword">add_definitions</span>(-std=c++<span class="number">11</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">14</span>)</span><br><span class="line"><span class="keyword">find_package</span>(OpenCV REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(k4a REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(PCL REQUIRED)</span><br><span class="line"><span class="keyword">if</span> (OpenCV_FOUND <span class="keyword">AND</span> k4a_FOUND <span class="keyword">AND</span> PCL_FOUND)</span><br><span class="line">    <span class="keyword">message</span>(STATUS <span class="string">&quot;opencv library has found\n&quot;</span>)</span><br><span class="line">    <span class="keyword">include_directories</span>(</span><br><span class="line">            <span class="variable">$&#123;PCL_INCLUDE_DIRS&#125;</span></span><br><span class="line">            <span class="variable">$&#123;k4a_INCLUDE_DIRS&#125;</span></span><br><span class="line">            <span class="variable">$&#123;OpenCV_INCLUDE_DIRS&#125;</span>)</span><br><span class="line">    <span class="keyword">add_executable</span>(AK main.cpp)</span><br><span class="line">    <span class="keyword">target_link_libraries</span>(AK</span><br><span class="line">            <span class="variable">$&#123;PCL_LIBRARIES&#125;</span></span><br><span class="line">            k4a::k4a</span><br><span class="line">            <span class="variable">$&#123;OpenCV_LIBRARIES&#125;</span>)</span><br><span class="line"><span class="keyword">else</span>(OpenCV_FOUND <span class="keyword">AND</span> k4a_FOUND <span class="keyword">AND</span> PCL_FOUND)</span><br><span class="line">    <span class="keyword">message</span>(FATAL_ERROR <span class="string">&quot;opencv library didn&#x27;t find\n&quot;</span>)</span><br><span class="line"><span class="keyword">endif</span> (OpenCV_FOUND <span class="keyword">AND</span> k4a_FOUND <span class="keyword">AND</span> PCL_FOUND)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Kinect</tag>
      </tags>
  </entry>
  <entry>
    <title>clion输入中文最新解决方法</title>
    <url>/2021/03/01/clion%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87%E6%9C%80%E6%96%B0%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CLion-输入中文失效问题解决方法-最新"><a href="#CLion-输入中文失效问题解决方法-最新" class="headerlink" title="CLion 输入中文失效问题解决方法-最新"></a>CLion 输入中文失效问题解决方法-最新</h1><blockquote>
<p>此处参考链接为：</p>
<p><a href="https://blog.csdn.net/u011166277/article/details/106287587">https://blog.csdn.net/u011166277/article/details/106287587</a></p>
<p><a href="https://bbs.archlinuxcn.org/viewtopic.php?id=10529&amp;p=1">https://bbs.archlinuxcn.org/viewtopic.php?id=10529&amp;p=1</a></p>
</blockquote>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Linux系统上，使用JetBrains的IDE，会出现输入中文的时候，搜狗输入法的候选词框一直停留在左下角，不会跟随光标移动</p>
<h2 id="问题根源"><a href="#问题根源" class="headerlink" title="问题根源"></a>问题根源</h2><p>具体问题官方其实七年前就有了（参考<a href="https://youtrack.jetbrains.com/issue/JBR-2460），但是比较坑的是官方也一直没有解决这个问题；">https://youtrack.jetbrains.com/issue/JBR-2460），但是比较坑的是官方也一直没有解决这个问题；</a></p>
<p>简单来说就是<code>Idea</code>的<code>jre</code>运行环境一个bug，导致输入法无法定位到鼠标位置。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>由于其问题根源在于源码，所以需要重新编译才能获得比较好的使用体验；其中解决方法1能够较好的解决问题，但是特别费事，困难重重；解决方法2比较简单，但是使用体验并不是很好。</p>
<p>解决方案1的成品链接：</p>
<p>链接: <a href="https://pan.baidu.com/s/1KGRDCcFa0gLw-xQAa8cvaw">https://pan.baidu.com/s/1KGRDCcFa0gLw-xQAa8cvaw</a>  密码: rm38</p>
<h3 id="1-重新编译JetBRainsRuntime"><a href="#1-重新编译JetBRainsRuntime" class="headerlink" title="1.重新编译JetBRainsRuntime"></a>1.重新编译<code>JetBRainsRuntime</code></h3><ol>
<li><p>下载JetBainsRuntime</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;JetBrains&#x2F;JetBrainsRuntime.git</span><br></pre></td></tr></table></figure></li>
<li><p>下载patch</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;prehonor&#x2F;myJetBrainsRuntime.git</span><br></pre></td></tr></table></figure></li>
<li><p>应用patch</p>
<p>将下载的idea.patch文件，复制到JetBrainsRuntime目录下；</p>
<p>之后输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout cfc3e87f2ac27a0b8c78c729c113aa52535feff6</span><br><span class="line">git apply idea.patch</span><br></pre></td></tr></table></figure></li>
<li><p>编译</p>
<p>以Ubuntu为例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install autoconf make build-essential libx11-dev libxext-dev libxrender-dev libxtst-dev libxt-dev libxrandr-dev libcups2-dev libfontconfig1-dev libasound2-dev</span><br><span class="line">cd JetBrainsRuntime</span><br><span class="line">sh .&#x2F;configure --disable-warnings-as-errors</span><br><span class="line"> make images</span><br></pre></td></tr></table></figure></li>
<li><p>更改IDE的启动环境</p>
<p>此处与其他教程有个别不同，以上面的参考教程为例，此处给出的步骤为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">修改 文件: home&#x2F;idea-2020.1&#x2F;bin&#x2F;idea.sh (找到你自己的idea的安装路径)</span><br><span class="line">在文件开头添加</span><br><span class="line">export IDEA_JDK&#x3D;&#x2F;home&#x2F;prehonor&#x2F;gitproject&#x2F;JetBrainsRuntime&#x2F;build&#x2F;linux-x86_64-normal-server-release&#x2F;images&#x2F;jdk (改成你自己的编译的jdk所在目录)</span><br></pre></td></tr></table></figure>
<p>我使用的方法是在clion中安装插件choose runtime；将路径设置为编译好的JDK；详细使用步骤参考另一篇文章，链接如下：<a href="https://junlu.club/2020/11/27/clion%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87/">https://junlu.club/2020/11/27/clion%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87/</a></p>
</li>
</ol>
<h3 id="2-修改搜狗输入法设置，使其不跟随光标移动"><a href="#2-修改搜狗输入法设置，使其不跟随光标移动" class="headerlink" title="2.修改搜狗输入法设置，使其不跟随光标移动"></a>2.修改搜狗输入法设置，使其不跟随光标移动</h3><p>这个解决方案特别简单，只需要在设置界面取消勾选跟随光标移动即可，将搜索候选词框放置在屏幕中间，能够解决部分问题；个人更推荐第一种解决方法。</p>
<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="1-JDK版本问题"><a href="#1-JDK版本问题" class="headerlink" title="1. JDK版本问题"></a>1. JDK版本问题</h3><p>编译过程中，需要我使用jdk11的版本，安装命令如下：（参考链接：<a href="https://wxnacy.com/2018/12/26/ubuntu-install-jdk11/）">https://wxnacy.com/2018/12/26/ubuntu-install-jdk11/）</a></p>
<p>首先我们使用 <code>apt</code> 进行搜索</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt search openjdk</span><br></pre></td></tr></table></figure>
<p>如果你的系统版本足够新，比如 18.04 LTS，那么很有可能搜索出这样的条目</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openjdk-11-jdk&#x2F;bionic-updates,bionic-security,now 10.0.2+13-1ubuntu0.18.04.4 amd64 [installed,automatic]</span><br><span class="line">  OpenJDK Development Kit (JDK)</span><br></pre></td></tr></table></figure>
<p>这代表软件源已经更新了 Java 11，这样直接安装默认版本即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install -y default-jdk</span><br></pre></td></tr></table></figure>
<h3 id="2-dpkg处理软件包的问题"><a href="#2-dpkg处理软件包的问题" class="headerlink" title="2. dpkg处理软件包的问题"></a>2. dpkg处理软件包的问题</h3><p>参考链接：<a href="https://www.qingsword.com/qing/ubuntu-dpkg-configure-error.html">https://www.qingsword.com/qing/ubuntu-dpkg-configure-error.html</a></p>
<p>解决方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#1.重命名dpkg目录下的info目录</span><br><span class="line"> sudo mv &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;info &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;info_qingsword</span><br><span class="line">#2.创建一个新的info文件夹</span><br><span class="line">sudo mkdir &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;info</span><br><span class="line">#3.执行更新操作</span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get -f install</span><br><span class="line">#4.将更新操作产生的文件，全部复制到重命名的info_qingsword文件夹下</span><br><span class="line">sudo mv &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;info&#x2F;* &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;info_qingsword</span><br><span class="line">#5.删除创建的info文件夹</span><br><span class="line">sudo rm -rf &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;info</span><br><span class="line">#6.将重命名的info_qingsword文件夹重新重命名为info</span><br><span class="line">sudo mv &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;info_qingsword &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;info</span><br><span class="line">#7.再次执行更新操作，问题解决</span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get upgrade</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Ubuntu配置</category>
      </categories>
      <tags>
        <tag>clion</tag>
        <tag>搜狗输入法</tag>
      </tags>
  </entry>
  <entry>
    <title>工业机器人课程大作业</title>
    <url>/2021/01/28/%E5%B7%A5%E4%B8%9A%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%AF%BE%E7%A8%8B%E5%A4%A7%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="工业机器人技术与应用课程报告"><a href="#工业机器人技术与应用课程报告" class="headerlink" title="工业机器人技术与应用课程报告"></a>工业机器人技术与应用课程报告</h1><h2 id="1-绪论"><a href="#1-绪论" class="headerlink" title="1. 绪论"></a>1. 绪论</h2><p><strong>作业要求</strong>：对KUKA KR210型工业机器人进行运动学（包括DH参数及挠度参数）校准，并测试校准后机器人位姿精度。</p>
<p><strong>编程环境：</strong>MATLAB R2019a</p>
<p><strong>章节安排：</strong>第二节至第四节为实现过程</p>
<h2 id="2-获取末端实际位姿"><a href="#2-获取末端实际位姿" class="headerlink" title="2. 获取末端实际位姿"></a>2. 获取末端实际位姿</h2><p>由于条件原因缺少真实的KUKA210进行实际实验，因此需要采用仿真的方法获取机器人末端的实际位姿，实现思路是建立机器人运动学正解，将真实误差参数补偿进理论运动学模型，通过随机采样获取多组机器人末端实际位姿数据。</p>
<h3 id="2-1-机器人正解"><a href="#2-1-机器人正解" class="headerlink" title="2.1 机器人正解"></a>2.1 机器人正解</h3><p>建立机器人正解的过程如下：</p>
<p>首先，建立理论DH参数表与真实误差参数表，代码实现如下：</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line"><span class="comment">%% 建立DH与误差表</span></span><br><span class="line">DH = [<span class="built_in">pi</span>,   <span class="number">0.675</span>,  <span class="number">0</span>,      <span class="number">0</span>,          <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">pi</span>/<span class="number">2</span>,   <span class="number">0</span>,      <span class="number">0</span>,      <span class="number">0.35</span>,       <span class="number">0</span>;</span><br><span class="line">    <span class="number">0</span>,      <span class="number">0</span>,      <span class="number">0</span>,      <span class="number">1.15</span>,       <span class="number">0</span>;</span><br><span class="line">    -<span class="built_in">pi</span>/<span class="number">2</span>,  <span class="number">0</span>,      <span class="built_in">pi</span>/<span class="number">2</span>,   <span class="number">0.041</span>,      <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">pi</span>/<span class="number">2</span>,   <span class="number">-1.2</span>    <span class="number">0</span>,      <span class="number">0</span>,          <span class="number">0</span>;</span><br><span class="line">    -<span class="built_in">pi</span>/<span class="number">2</span>,  <span class="number">0</span>,      <span class="number">0</span>,      <span class="number">0</span>,          <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">pi</span>,     <span class="number">-0.215</span>, <span class="number">0</span>,      <span class="number">0</span>,          <span class="number">0</span></span><br><span class="line">    ];</span><br><span class="line"><span class="comment">%alpha d theta a beta</span></span><br><span class="line">delta = [    <span class="number">0.00003</span>*<span class="built_in">pi</span>/<span class="number">180</span>,     <span class="number">-1.03</span>*<span class="number">0.001</span>,        <span class="number">-0.02</span>*<span class="built_in">pi</span>/<span class="number">180</span>,  <span class="number">-0.7</span>*<span class="number">0.001</span>,   <span class="number">0</span>;</span><br><span class="line">             <span class="number">0.002</span>*<span class="built_in">pi</span>/<span class="number">180</span>,       <span class="number">-0.15</span>*<span class="number">0.001</span>,        <span class="number">0</span>,             <span class="number">-0.4</span>*<span class="number">0.001</span>, <span class="number">0.3</span>*<span class="built_in">pi</span>/<span class="number">180</span>;</span><br><span class="line">              <span class="number">0.08</span>*<span class="built_in">pi</span>/<span class="number">180</span>,        <span class="number">-0.006</span>*<span class="number">0.001</span>,       <span class="number">0</span>,            <span class="number">0.5</span>*<span class="number">0.001</span>,  <span class="number">0</span>;</span><br><span class="line">              <span class="number">-0.08</span>*<span class="built_in">pi</span>/<span class="number">180</span>,       <span class="number">-0.1</span>*<span class="number">0.001</span>,         <span class="number">0.3</span>*<span class="built_in">pi</span>/<span class="number">180</span>,   <span class="number">0.5</span>*<span class="number">0.001</span>,  <span class="number">0</span>;</span><br><span class="line">             <span class="number">0.05</span>*<span class="built_in">pi</span>/<span class="number">180</span>,        <span class="number">0.0003</span>*<span class="number">0.001</span>,       <span class="number">0.02</span>*<span class="built_in">pi</span>/<span class="number">180</span>,  <span class="number">-0.1</span>*<span class="number">0.001</span>,  <span class="number">0</span>;</span><br><span class="line">             <span class="number">-0.06</span>*<span class="built_in">pi</span>/<span class="number">180</span>,       <span class="number">0.05</span>*<span class="number">0.001</span>,         <span class="number">-0.6</span>*<span class="built_in">pi</span>/<span class="number">180</span>,  <span class="number">-0.2</span>*<span class="number">0.001</span>,  <span class="number">0</span>;</span><br><span class="line">];</span><br></pre></td></tr></table></figure>
<p>其次，按照==公式1==，分别建立6个连杆之间的转换关系</p>
<script type="math/tex; mode=display">
\begin{aligned}
T_{i} &=\operatorname{Rot}\left(z, \theta_{i}\right) \cdot \operatorname{Trans}\left(0,0, d_{i}\right) \cdot \operatorname{Trans}\left(a_{i}, 0,0\right) \cdot \operatorname{Rot}\left(x, \alpha_{i}\right) \cdot \operatorname{Rot}\left(y, \beta_{i}\right) \\
&=\left[\begin{array}{cccc}
\mathrm{c} \theta_{i} \mathrm{c} \beta_{i}-\mathrm{s} \theta_{i} \mathrm{~s} \alpha_{i} \mathrm{~s} \beta_{i} & -\mathrm{s} \theta_{i} \mathrm{c} \alpha_{i} & \mathrm{c} \theta_{i} \mathrm{~s} \beta_{i}+\mathrm{s} \theta_{i} \mathrm{~s} \alpha_{i} \mathrm{c} \beta_{i} & a_{i} \mathrm{c} \theta_{i} \\
\mathrm{~s} \theta_{i} \mathrm{c} \beta_{i}+\mathrm{s} \alpha_{i} \mathrm{c} \theta_{i} \mathrm{~s} \beta_{i} & \mathrm{c} \theta_{i} \mathrm{c} \alpha_{i} & \mathrm{~s} \theta_{i} \mathrm{~s} \beta_{i}-\mathrm{s} \alpha_{i} \mathrm{c} \theta_{i} \mathrm{c} \beta_{i} & a_{i} \mathrm{~s} \theta_{i} \\
-\mathrm{c} \alpha_{i} \mathrm{~s} \beta_{i} & \mathrm{~s} \alpha_{i} & \mathrm{c} \alpha_{i} \mathrm{c} \beta_{i} & d_{i} \\
0 & 0 & 0 & 1
\end{array}\right]
\end{aligned}
\tag{公式1}</script><p>代码实现如下所示：</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[T]</span> = <span class="title">T_itoiplus1</span><span class="params">(alpha,d,theta,a,beta)</span></span></span><br><span class="line"><span class="comment">%连杆转换关系实现函数</span></span><br><span class="line">T = [</span><br><span class="line"><span class="built_in">cos</span>(theta)*<span class="built_in">cos</span>(<span class="built_in">beta</span>) - <span class="built_in">sin</span>(alpha)*<span class="built_in">sin</span>(theta)*<span class="built_in">sin</span>(<span class="built_in">beta</span>),     -<span class="built_in">cos</span>(alpha)*<span class="built_in">sin</span>(theta),     <span class="built_in">cos</span>(theta)*<span class="built_in">sin</span>(<span class="built_in">beta</span>)+<span class="built_in">sin</span>(alpha)*<span class="built_in">sin</span>(theta)*<span class="built_in">cos</span>(<span class="built_in">beta</span>),       a*<span class="built_in">cos</span>(theta);</span><br><span class="line"><span class="built_in">sin</span>(theta)*<span class="built_in">cos</span>(<span class="built_in">beta</span>) + <span class="built_in">sin</span>(alpha)*<span class="built_in">cos</span>(theta)*<span class="built_in">sin</span>(<span class="built_in">beta</span>),     <span class="built_in">cos</span>(alpha)*<span class="built_in">cos</span>(theta),      <span class="built_in">sin</span>(theta)*<span class="built_in">sin</span>(<span class="built_in">beta</span>)-<span class="built_in">sin</span>(alpha)*<span class="built_in">cos</span>(theta)*<span class="built_in">cos</span>(<span class="built_in">beta</span>),       a*<span class="built_in">sin</span>(theta);</span><br><span class="line">-<span class="built_in">cos</span>(alpha)*<span class="built_in">sin</span>(<span class="built_in">beta</span>),  <span class="built_in">sin</span>(alpha), <span class="built_in">cos</span>(alpha)*<span class="built_in">cos</span>(<span class="built_in">beta</span>), d;</span><br><span class="line"><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>;</span><br><span class="line">];</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>之后，将理论DH参数表代入==公式1==中，并将转换矩阵连乘，得到机器人末端相对于机器人基坐标系的转换关系，根据此转换关系，在分别指定6个关节角度的前提下，可以得到当机器人末端相对于基坐标系的位姿。代码实现如下：</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[pos]</span> = <span class="title">Positive</span><span class="params">(theta,dh)</span></span></span><br><span class="line"><span class="comment">%正解</span></span><br><span class="line">T1 = T_itoiplus1(dh(<span class="number">1</span>,<span class="number">1</span>),dh(<span class="number">1</span>,<span class="number">2</span>),theta(<span class="number">1</span>)+dh(<span class="number">1</span>,<span class="number">3</span>),dh(<span class="number">1</span>,<span class="number">4</span>),dh(<span class="number">1</span>,<span class="number">5</span>));</span><br><span class="line">T2 = T_itoiplus1(dh(<span class="number">2</span>,<span class="number">1</span>),dh(<span class="number">2</span>,<span class="number">2</span>),theta(<span class="number">2</span>)+dh(<span class="number">2</span>,<span class="number">3</span>),dh(<span class="number">2</span>,<span class="number">4</span>),dh(<span class="number">2</span>,<span class="number">5</span>));</span><br><span class="line">T3 = T_itoiplus1(dh(<span class="number">3</span>,<span class="number">1</span>),dh(<span class="number">3</span>,<span class="number">2</span>),theta(<span class="number">3</span>)+dh(<span class="number">3</span>,<span class="number">3</span>),dh(<span class="number">3</span>,<span class="number">4</span>),dh(<span class="number">3</span>,<span class="number">5</span>));</span><br><span class="line">T4 = T_itoiplus1(dh(<span class="number">4</span>,<span class="number">1</span>),dh(<span class="number">4</span>,<span class="number">2</span>),theta(<span class="number">4</span>)+dh(<span class="number">4</span>,<span class="number">3</span>),dh(<span class="number">4</span>,<span class="number">4</span>),dh(<span class="number">4</span>,<span class="number">5</span>));</span><br><span class="line">T5 = T_itoiplus1(dh(<span class="number">5</span>,<span class="number">1</span>),dh(<span class="number">5</span>,<span class="number">2</span>),theta(<span class="number">5</span>)+dh(<span class="number">5</span>,<span class="number">3</span>),dh(<span class="number">5</span>,<span class="number">4</span>),dh(<span class="number">5</span>,<span class="number">5</span>));</span><br><span class="line">T6 = T_itoiplus1(dh(<span class="number">6</span>,<span class="number">1</span>),dh(<span class="number">6</span>,<span class="number">2</span>),theta(<span class="number">6</span>)+dh(<span class="number">6</span>,<span class="number">3</span>),dh(<span class="number">6</span>,<span class="number">4</span>),dh(<span class="number">6</span>,<span class="number">5</span>));</span><br><span class="line">T7 = T_itoiplus1(dh(<span class="number">7</span>,<span class="number">1</span>),dh(<span class="number">7</span>,<span class="number">2</span>),dh(<span class="number">7</span>,<span class="number">3</span>),dh(<span class="number">7</span>,<span class="number">4</span>),dh(<span class="number">7</span>,<span class="number">5</span>));</span><br><span class="line">T = T1*T2*T3*T4*T5*T6*T7;</span><br><span class="line">pos(<span class="number">1</span>) = T(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">pos(<span class="number">2</span>) = T(<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line">pos(<span class="number">3</span>) = T(<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line">pos(<span class="number">4</span>) = <span class="built_in">atan2</span>(T(<span class="number">2</span>,<span class="number">1</span>),T(<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">pos(<span class="number">5</span>) = <span class="built_in">atan2</span>(-T(<span class="number">3</span>,<span class="number">1</span>),<span class="built_in">sqrt</span>(T(<span class="number">1</span>,<span class="number">1</span>)*T(<span class="number">1</span>,<span class="number">1</span>)+T(<span class="number">2</span>,<span class="number">1</span>)*T(<span class="number">2</span>,<span class="number">1</span>)));</span><br><span class="line">pos(<span class="number">6</span>) = <span class="built_in">atan2</span>(T(<span class="number">3</span>,<span class="number">2</span>),T(<span class="number">3</span>,<span class="number">3</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">abs</span>(pos(<span class="number">5</span>)*<span class="number">180</span>/<span class="built_in">pi</span><span class="number">-90</span>)&lt;<span class="number">0.01</span>)</span><br><span class="line">    pos(<span class="number">4</span>) = <span class="number">0</span>;</span><br><span class="line">    pos(<span class="number">5</span>) = <span class="built_in">pi</span>/<span class="number">2</span>;</span><br><span class="line">    pos(<span class="number">6</span>) = <span class="built_in">atan2</span>(T(<span class="number">1</span>,<span class="number">2</span>),T(<span class="number">2</span>,<span class="number">2</span>));   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(pos(<span class="number">5</span>)*<span class="number">180</span>/<span class="built_in">pi</span>+<span class="number">90</span>)&lt;<span class="number">0.01</span>)</span><br><span class="line">    pos(<span class="number">4</span>) = <span class="number">0</span>;</span><br><span class="line">    pos(<span class="number">5</span>) = -<span class="built_in">pi</span>/<span class="number">2</span>;</span><br><span class="line">    pos(<span class="number">6</span>) = -<span class="built_in">atan2</span>(T(<span class="number">1</span>,<span class="number">2</span>),T(<span class="number">2</span>,<span class="number">2</span>)); </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>为验证上述过程的正确性，将6个分别为0;0;-pi/2;pi/2;0;0关节角度代入上述过程，与机器人理论外形对比，经过验证后发现，正解模型正确；求解出的末端位姿与机器人实际外形数据如下所示：</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20210128112817.png" alt=""></p>
<p>图1：根据正解模型求解出的末端位姿</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20210128112906.png" alt=""></p>
<p>图2：真实的KUKA210参数</p>
<h3 id="2-2-采样获取实际位姿"><a href="#2-2-采样获取实际位姿" class="headerlink" title="2.2 采样获取实际位姿"></a>2.2 采样获取实际位姿</h3><p>在正解模型正确的前提下，为获取实际机器人的末端位姿，采用仿真的手段，将误差参数补偿进DH参数中，并随机采样100个点，得到100组机器人末端位姿数据，为后续的参数辨识及绝对定位误差比较环节提供数据基础。</p>
<p>与2.1节过程同理，将误差参数表与理论DH表相加，得到新的DH表，并代入正解模型中，得到的机器人末端位姿数据可以看做是由实际的机器人的实验数据；</p>
<p>其次，利用随机数生成6*100组随机数据，分布在0-30度之间，代表了100组不同的关节角度集合，输入实际正解模型中得到100组不同的末端位姿数据；</p>
<p>然后，将100组随机数也同样输入理论正解模型中，得到100组末端位姿的理论值；</p>
<p>最后，将理论值与实际值比较，可以得出下图所示的绝对定位误差图</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20210128114533.png" alt=""></p>
<p>此图为实际的末端位姿与理论的末端位姿之间的误差图，此图将作为判断后续参数辨识环节是否正确的主要依据，如将辨识后的参数输入正解模型，与理论值之间产生的误差与此图不符，则可以判断出参数辨识出错，若完全重合，则说明误差参数辨识正确。</p>
<p>此环节代码实现如下：</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%% 100组数据随机走</span></span><br><span class="line">theta =[<span class="number">0</span>;<span class="number">0</span>;-<span class="built_in">pi</span>/<span class="number">2</span>;<span class="built_in">pi</span>/<span class="number">2</span>;<span class="number">0</span>;<span class="number">0</span>];</span><br><span class="line">DHpos = Positive(theta,DH);</span><br><span class="line">newDH = DH+[delta;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">newPos = Positive(theta,newDH);</span><br><span class="line">err = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">x_err = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">y_err = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">z_err = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">delta_p = <span class="built_in">zeros</span>(<span class="number">300</span>,<span class="number">1</span>);</span><br><span class="line">r = randi(<span class="number">30</span>,<span class="number">100</span>,<span class="number">6</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">100</span></span><br><span class="line">    theta = r(<span class="built_in">i</span>,:);</span><br><span class="line">    pos = Positive(theta,DH);</span><br><span class="line">    newPos = Positive(theta,newDH);</span><br><span class="line">    err(<span class="number">1</span>,<span class="built_in">i</span>) = <span class="built_in">sqrt</span>(power(newPos(<span class="number">1</span>,<span class="number">1</span>)-pos(<span class="number">1</span>,<span class="number">1</span>),<span class="number">2</span>)+power(newPos(<span class="number">1</span>,<span class="number">2</span>)-pos(<span class="number">1</span>,<span class="number">2</span>),<span class="number">2</span>)+power(newPos(<span class="number">1</span>,<span class="number">3</span>)-pos(<span class="number">1</span>,<span class="number">3</span>),<span class="number">2</span>));</span><br><span class="line">    delta_p((<span class="built_in">i</span><span class="number">-1</span>)*<span class="number">3</span>+<span class="number">1</span>,<span class="number">1</span>) = newPos(<span class="number">1</span>,<span class="number">1</span>)-pos(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    delta_p((<span class="built_in">i</span><span class="number">-1</span>)*<span class="number">3</span>+<span class="number">2</span>,<span class="number">1</span>) = newPos(<span class="number">1</span>,<span class="number">2</span>)-pos(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    delta_p((<span class="built_in">i</span><span class="number">-1</span>)*<span class="number">3</span>+<span class="number">3</span>,<span class="number">1</span>) = newPos(<span class="number">1</span>,<span class="number">3</span>)-pos(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">    x_err(<span class="number">1</span>,<span class="built_in">i</span>) = newPos(<span class="number">1</span>,<span class="number">1</span>)-pos(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    y_err(<span class="number">1</span>,<span class="built_in">i</span>) = newPos(<span class="number">1</span>,<span class="number">2</span>)-pos(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    z_err(<span class="number">1</span>,<span class="built_in">i</span>) = newPos(<span class="number">1</span>,<span class="number">3</span>)-pos(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="3-参数辨识"><a href="#3-参数辨识" class="headerlink" title="3. 参数辨识"></a>3. 参数辨识</h2><p>误差参数辨识的主要任务在于，根据机器人的定位误差，迭代求解机器人各个连杆的参数误差，实现机器人实际运动学参数的标定。</p>
<p>考虑使用机器人的位置误差进行机器人运动学参数的标定，设机器人末端的理论位置是$p$，其位置误差记为$Δp$，有：</p>
<script type="math/tex; mode=display">
\begin{aligned}
\Delta \boldsymbol{p} &=\frac{\partial \boldsymbol{p}}{\partial \boldsymbol{\theta}} \Delta \boldsymbol{\theta}+\frac{\partial \boldsymbol{p}}{\partial \boldsymbol{d}} \Delta \boldsymbol{d}+\frac{\partial \boldsymbol{p}}{\partial \boldsymbol{a}} \Delta \boldsymbol{a}+\frac{\partial \boldsymbol{p}}{\partial \boldsymbol{\alpha}} \Delta \boldsymbol{\alpha}+\frac{\partial \boldsymbol{p}}{\partial \boldsymbol{\beta}} \Delta \boldsymbol{\beta} \\
&=\boldsymbol{J}_{\theta} \Delta \boldsymbol{\theta}+\boldsymbol{J}_{d} \Delta \boldsymbol{d}+\boldsymbol{J}_{a} \Delta \boldsymbol{a}+\boldsymbol{J}_{\alpha} \Delta \boldsymbol{\alpha}+\boldsymbol{J}_{\beta} \Delta \boldsymbol{\beta}
\end{aligned}
\tag{公式2}</script><p>式中，$J<em>{\theta}$、$Jd$、$Ja$、$J</em>{\alpha}$和$J_{\beta}$ 是由机器人理论运动学参数构成的$3 * n$ 矩阵：</p>
<script type="math/tex; mode=display">
\begin{aligned}
\boldsymbol{J}_{\theta} &=\left[\begin{array}{llll}
\partial \boldsymbol{p}_{/ \partial \theta_{1}} & \partial \boldsymbol{p}_{/ \partial \theta_{2}} & \cdots & \partial \boldsymbol{p}_{/ \partial \theta_{n}}
\end{array}\right] \\
\boldsymbol{J}_{d} &=\left[\begin{array}{lll}
\partial \boldsymbol{p}_{/ \partial d_{1}} & \partial \boldsymbol{p}_{/ \partial d_{2}} & \cdots & \partial \boldsymbol{p} / \partial d_{n}
\end{array}\right] \\
\boldsymbol{J}_{a} &=\left[\begin{array}{lll}
\partial \boldsymbol{p} / \partial a_{1} & \partial \boldsymbol{p}_{/ \partial a_{2}} & \cdots & \partial \boldsymbol{p} / \partial a_{n}
\end{array}\right] \\
\boldsymbol{J}_{\alpha} &=\left[\begin{array}{lll}
\partial \boldsymbol{p} / \partial \alpha_{1} & \partial \boldsymbol{p} / \partial \alpha_{2} & \cdots & \partial \boldsymbol{p} / \partial \alpha_{n}
\end{array}\right] \\
\boldsymbol{J}_{\beta} &=\left[\begin{array}{ll}
\partial \boldsymbol{p}_{/ \partial \beta_{1}} & \partial \boldsymbol{p}_{/ \partial \beta_{2}} & \cdots & \partial \boldsymbol{p}_{/ \partial \beta_{n}}
\end{array}\right]
\end{aligned}</script><p>若测量了$m$ 组机器人的定位误差，由==公式2==可以得到：</p>
<script type="math/tex; mode=display">
\left[\begin{array}{c}
\Delta \boldsymbol{p}^{(1)} \\
\Delta \boldsymbol{p}^{(2)} \\
\vdots \\
\Delta \boldsymbol{p}^{(m)}
\end{array}\right]=\left[\begin{array}{ccccc}
\boldsymbol{J}_{\theta}^{(1)} & \boldsymbol{J}_{d}^{(1)} & \boldsymbol{J}_{a}^{(1)} & \boldsymbol{J}_{\alpha}^{(1)} & \boldsymbol{J}_{\beta}^{(1)} \\
\boldsymbol{J}_{\theta}^{(2)} & \boldsymbol{J}_{d}^{(2)} & \boldsymbol{J}_{a}^{(2)} & \boldsymbol{J}_{\alpha}^{(2)} & \boldsymbol{J}_{\beta}^{(2)} \\
\vdots & \vdots & \vdots & \vdots & \vdots \\
\boldsymbol{J}_{\theta}^{(m)} & \boldsymbol{J}_{d}^{(m)} & \boldsymbol{J}_{a}^{(m)} & \boldsymbol{J}_{\alpha}^{(m)} & \boldsymbol{J}_{\beta}^{(m)}
\end{array}\right]\left[\begin{array}{c}
\Delta \boldsymbol{\theta} \\
\Delta \boldsymbol{d} \\
\Delta \boldsymbol{a} \\
\Delta \boldsymbol{\alpha} \\
\Delta \boldsymbol{\beta}
\end{array}\right]</script><p>上式可以写成：$\Delta \boldsymbol{P}=\boldsymbol{J} \cdot \Delta \boldsymbol{\rho}$</p>
<p>其中，$Δ\rho$ 是由机器人各连杆参数误差所构成的列向量。</p>
<p>这样，机器人运动学参数误差辨识问题就被化为形如$Ax = b$ 的线性方程组的求解问题；</p>
<p>使用Levenberg-Marquardt 算法进行迭代求解，其第k 步迭代过程如下：</p>
<ul>
<li>根据机器人各连杆参数计算矩阵$J({\rho}_k)$；</li>
<li>根据下式计算机器人各连杆参数误差$Δ\rho_k$：</li>
</ul>
<script type="math/tex; mode=display">
\Delta \boldsymbol{\rho}_{k}=-\left[\boldsymbol{J}\left(\boldsymbol{\rho}_{k}\right)^{\top} \boldsymbol{J}\left(\boldsymbol{\rho}_{k}\right)+\mu_{k} \boldsymbol{I}\right]^{-1} \boldsymbol{J}\left(\boldsymbol{\rho}_{k}\right)^{\top} \Delta \boldsymbol{P}\left(\boldsymbol{\rho}_{k}\right)</script><p>其中，$\mu_k$ 是阻尼系数，可以根据下式进行计算：</p>
<script type="math/tex; mode=display">
\left\{\begin{array}{l}
\mu_{0}=0.001 \\
\mu_{k+1}=\left\{\begin{array}{ll}
0.001 \lambda & \left\|\Delta \boldsymbol{P}\left(\boldsymbol{\rho}_{k+1}\right)\right\| \geq\left\|\Delta \boldsymbol{P}\left(\boldsymbol{\rho}_{k}\right)\right\| \\
0.001 / \lambda & \left\|\Delta \boldsymbol{P}\left(\boldsymbol{\rho}_{k+1}\right)\right\|<\left\|\Delta \boldsymbol{P}\left(\boldsymbol{\rho}_{k}\right)\right\|
\end{array}\right. \\
2.5<\lambda<10
\end{array}\right.</script><ul>
<li><p>利用$\rho<em>{k+1}=\rho</em>{k}+\Delta \rho_{k}$更新机器人各连杆参数。</p>
</li>
<li><p>重复上述步骤，即可得到机器人各连杆参数的误差。</p>
</li>
</ul>
<p>代码实现如下：</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%% 求解方程系数</span></span><br><span class="line">syms theta1 theta2 theta3 theta4 theta5 theta6;</span><br><span class="line">syms d1 d2 d3 d4 d5 d6;</span><br><span class="line">syms a1 a2 a3 a4 a5 a6;</span><br><span class="line">syms alpha1 alpha2 alpha3 alpha4 alpha5 alpha6;</span><br><span class="line">syms beta1 beta2 beta3 beta4 beta5 beta6;</span><br><span class="line">symstheta = [theta1 theta2 theta3 theta4 theta5 theta6];</span><br><span class="line">symsd = [d1 d2 d3 d4 d5 d6;];</span><br><span class="line">symsa = [a1 a2 a3 a4 a5 a6];</span><br><span class="line">symsalpha = [alpha1 alpha2 alpha3 alpha4 alpha5 alpha6];</span><br><span class="line">symsbeta = [beta1 beta2 beta3 beta4 beta5 beta6];</span><br><span class="line">J = <span class="built_in">zeros</span>(<span class="number">300</span>,<span class="number">30</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">3</span>:<span class="number">300</span></span><br><span class="line">    theta = r((<span class="built_in">i</span><span class="number">-1</span>)/<span class="number">3</span>+<span class="number">1</span>,:);</span><br><span class="line">    item = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">6</span>);</span><br><span class="line">     <span class="comment">%求出j_theta_i</span></span><br><span class="line">    pos_theta = symPostive(symstheta,item,item,item,item,DH);</span><br><span class="line">    a_theta = transpose(subs(diff(pos_theta,<span class="string">&#x27;theta1&#x27;</span>),symstheta,theta));</span><br><span class="line">    b_theta = transpose(subs(diff(pos_theta,<span class="string">&#x27;theta2&#x27;</span>),symstheta,theta));</span><br><span class="line">    c_theta = transpose(subs(diff(pos_theta,<span class="string">&#x27;theta3&#x27;</span>),symstheta,theta));</span><br><span class="line">    d_theta = transpose(subs(diff(pos_theta,<span class="string">&#x27;theta4&#x27;</span>),symstheta,theta));</span><br><span class="line">    e_theta = transpose(subs(diff(pos_theta,<span class="string">&#x27;theta5&#x27;</span>),symstheta,theta));</span><br><span class="line">    f_theta = transpose(subs(diff(pos_theta,<span class="string">&#x27;theta6&#x27;</span>),symstheta,theta));</span><br><span class="line">    j_theta_i = <span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">6</span>);</span><br><span class="line">    j_theta_i(:,<span class="number">1</span>) = a_theta;</span><br><span class="line">    j_theta_i(:,<span class="number">2</span>) = b_theta;</span><br><span class="line">    j_theta_i(:,<span class="number">3</span>) = c_theta;</span><br><span class="line">    j_theta_i(:,<span class="number">4</span>) = d_theta;    </span><br><span class="line">    j_theta_i(:,<span class="number">5</span>) = e_theta;    </span><br><span class="line">    j_theta_i(:,<span class="number">6</span>) = f_theta;    </span><br><span class="line">    <span class="comment">%求j_d_i</span></span><br><span class="line">    pos_d = symPostive(theta,symsd,item,item,item,DH);</span><br><span class="line">    a_d = transpose(subs(diff(pos_d,<span class="string">&#x27;d1&#x27;</span>),symsd,item));</span><br><span class="line">    b_d = transpose(subs(diff(pos_d,<span class="string">&#x27;d2&#x27;</span>),symsd,item));</span><br><span class="line">    c_d = transpose(subs(diff(pos_d,<span class="string">&#x27;d3&#x27;</span>),symsd,item));</span><br><span class="line">    d_d = transpose(subs(diff(pos_d,<span class="string">&#x27;d4&#x27;</span>),symsd,item));</span><br><span class="line">    e_d = transpose(subs(diff(pos_d,<span class="string">&#x27;d5&#x27;</span>),symsd,item));</span><br><span class="line">    f_d = transpose(subs(diff(pos_d,<span class="string">&#x27;d6&#x27;</span>),symsd,item));</span><br><span class="line">    j_d_i = <span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">6</span>);</span><br><span class="line">    j_d_i(:,<span class="number">1</span>) = a_d;</span><br><span class="line">    j_d_i(:,<span class="number">2</span>) = b_d;</span><br><span class="line">    j_d_i(:,<span class="number">3</span>) = c_d;</span><br><span class="line">    j_d_i(:,<span class="number">4</span>) = d_d;    </span><br><span class="line">    j_d_i(:,<span class="number">5</span>) = e_d;    </span><br><span class="line">    j_d_i(:,<span class="number">6</span>) = f_d;</span><br><span class="line">    <span class="comment">%求j_a_i</span></span><br><span class="line">    pos_a = symPostive(theta,item,symsa,item,item,DH);</span><br><span class="line">    a_a = transpose(subs(diff(pos_a,<span class="string">&#x27;a1&#x27;</span>),symsa,item));</span><br><span class="line">    b_a = transpose(subs(diff(pos_a,<span class="string">&#x27;a2&#x27;</span>),symsa,item));</span><br><span class="line">    c_a = transpose(subs(diff(pos_a,<span class="string">&#x27;a3&#x27;</span>),symsa,item));</span><br><span class="line">    d_a = transpose(subs(diff(pos_a,<span class="string">&#x27;a4&#x27;</span>),symsa,item));</span><br><span class="line">    e_a = transpose(subs(diff(pos_a,<span class="string">&#x27;a5&#x27;</span>),symsa,item));</span><br><span class="line">    f_a = transpose(subs(diff(pos_a,<span class="string">&#x27;a6&#x27;</span>),symsa,item));</span><br><span class="line">    j_a_i = <span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">6</span>);</span><br><span class="line">    j_a_i(:,<span class="number">1</span>) = a_a;</span><br><span class="line">    j_a_i(:,<span class="number">2</span>) = b_a;</span><br><span class="line">    j_a_i(:,<span class="number">3</span>) = c_a;</span><br><span class="line">    j_a_i(:,<span class="number">4</span>) = d_a;    </span><br><span class="line">    j_a_i(:,<span class="number">5</span>) = e_a;    </span><br><span class="line">    j_a_i(:,<span class="number">6</span>) = f_a;</span><br><span class="line">    <span class="comment">%求j_alpha_i</span></span><br><span class="line">    pos_alpha = symPostive(theta,item,item,symsalpha,item,DH);</span><br><span class="line">    a_alpha = transpose(subs(diff(pos_alpha,<span class="string">&#x27;alpha1&#x27;</span>),symsalpha,item));</span><br><span class="line">    b_alpha = transpose(subs(diff(pos_alpha,<span class="string">&#x27;alpha2&#x27;</span>),symsalpha,item));</span><br><span class="line">    c_alpha = transpose(subs(diff(pos_alpha,<span class="string">&#x27;alpha3&#x27;</span>),symsalpha,item));</span><br><span class="line">    d_alpha = transpose(subs(diff(pos_alpha,<span class="string">&#x27;alpha4&#x27;</span>),symsalpha,item));</span><br><span class="line">    e_alpha = transpose(subs(diff(pos_alpha,<span class="string">&#x27;alpha5&#x27;</span>),symsalpha,item));</span><br><span class="line">    f_alpha = transpose(subs(diff(pos_alpha,<span class="string">&#x27;alpha6&#x27;</span>),symsalpha,item));</span><br><span class="line">    j_alpha_i = <span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">6</span>);</span><br><span class="line">    j_alpha_i(:,<span class="number">1</span>) = a_alpha;</span><br><span class="line">    j_alpha_i(:,<span class="number">2</span>) = b_alpha;</span><br><span class="line">    j_alpha_i(:,<span class="number">3</span>) = c_alpha;</span><br><span class="line">    j_alpha_i(:,<span class="number">4</span>) = d_alpha;    </span><br><span class="line">    j_alpha_i(:,<span class="number">5</span>) = e_alpha;    </span><br><span class="line">    j_alpha_i(:,<span class="number">6</span>) = f_alpha;</span><br><span class="line">    <span class="comment">%求j_beta_i</span></span><br><span class="line">    pos_beta = symPostive(theta,item,item,item,symsbeta,DH);</span><br><span class="line">    a_beta = transpose(subs(diff(pos_beta,<span class="string">&#x27;beta1&#x27;</span>),symsbeta,item));</span><br><span class="line">    b_beta = transpose(subs(diff(pos_beta,<span class="string">&#x27;beta2&#x27;</span>),symsbeta,item));</span><br><span class="line">    c_beta = transpose(subs(diff(pos_beta,<span class="string">&#x27;beta3&#x27;</span>),symsbeta,item));</span><br><span class="line">    d_beta = transpose(subs(diff(pos_beta,<span class="string">&#x27;beta4&#x27;</span>),symsbeta,item));</span><br><span class="line">    e_beta = transpose(subs(diff(pos_beta,<span class="string">&#x27;beta5&#x27;</span>),symsbeta,item));</span><br><span class="line">    f_beta = transpose(subs(diff(pos_beta,<span class="string">&#x27;beta6&#x27;</span>),symsbeta,item));</span><br><span class="line">    j_beta_i = <span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">6</span>);</span><br><span class="line">    j_beta_i(:,<span class="number">1</span>) = a_beta;</span><br><span class="line">    j_beta_i(:,<span class="number">2</span>) = b_beta;</span><br><span class="line">    j_beta_i(:,<span class="number">3</span>) = c_beta;</span><br><span class="line">    j_beta_i(:,<span class="number">4</span>) = d_beta;    </span><br><span class="line">    j_beta_i(:,<span class="number">5</span>) = e_beta;    </span><br><span class="line">    j_beta_i(:,<span class="number">6</span>) = f_beta;</span><br><span class="line">    <span class="comment">%放到J中</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="number">6</span></span><br><span class="line">        J(<span class="built_in">i</span>,<span class="built_in">j</span>) = j_theta_i(<span class="number">1</span>,<span class="built_in">j</span>);</span><br><span class="line">        J(<span class="built_in">i</span>+<span class="number">1</span>,<span class="built_in">j</span>) = j_theta_i(<span class="number">2</span>,<span class="built_in">j</span>);</span><br><span class="line">        J(<span class="built_in">i</span>+<span class="number">2</span>,<span class="built_in">j</span>) = j_theta_i(<span class="number">3</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">7</span>:<span class="number">12</span></span><br><span class="line">        J(<span class="built_in">i</span>,<span class="built_in">j</span>) = j_d_i(<span class="number">1</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">1</span>);</span><br><span class="line">        J(<span class="built_in">i</span>+<span class="number">1</span>,<span class="built_in">j</span>) = j_d_i(<span class="number">2</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">1</span>);</span><br><span class="line">        J(<span class="built_in">i</span>+<span class="number">2</span>,<span class="built_in">j</span>) = j_d_i(<span class="number">3</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">13</span>:<span class="number">18</span></span><br><span class="line">        J(<span class="built_in">i</span>,<span class="built_in">j</span>) = j_a_i(<span class="number">1</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">2</span>);</span><br><span class="line">        J(<span class="built_in">i</span>+<span class="number">1</span>,<span class="built_in">j</span>) = j_a_i(<span class="number">2</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">2</span>);</span><br><span class="line">        J(<span class="built_in">i</span>+<span class="number">2</span>,<span class="built_in">j</span>) = j_a_i(<span class="number">3</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">19</span>:<span class="number">24</span></span><br><span class="line">        J(<span class="built_in">i</span>,<span class="built_in">j</span>) = j_alpha_i(<span class="number">1</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">3</span>);</span><br><span class="line">        J(<span class="built_in">i</span>+<span class="number">1</span>,<span class="built_in">j</span>) = j_alpha_i(<span class="number">2</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">3</span>);</span><br><span class="line">        J(<span class="built_in">i</span>+<span class="number">2</span>,<span class="built_in">j</span>) = j_alpha_i(<span class="number">3</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">25</span>:<span class="number">30</span></span><br><span class="line">        J(<span class="built_in">i</span>,<span class="built_in">j</span>) = j_beta_i(<span class="number">1</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">4</span>);</span><br><span class="line">        J(<span class="built_in">i</span>+<span class="number">1</span>,<span class="built_in">j</span>) = j_beta_i(<span class="number">2</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">4</span>);</span><br><span class="line">        J(<span class="built_in">i</span>+<span class="number">2</span>,<span class="built_in">j</span>) = j_beta_i(<span class="number">3</span>,<span class="built_in">j</span><span class="number">-6</span>*<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 求解线性方程组</span></span><br><span class="line">delta_pk = -inv(transpose(J)*J+<span class="number">0.001</span>*<span class="built_in">eye</span>(<span class="number">30</span>,<span class="number">30</span>))*transpose(J)*delta_p;</span><br><span class="line"><span class="comment">%delta_p = J\delta_p;</span></span><br></pre></td></tr></table></figure>
<h2 id="4-绝对定位误差比较"><a href="#4-绝对定位误差比较" class="headerlink" title="4. 绝对定位误差比较"></a>4. 绝对定位误差比较</h2><p>将得到的辨识出的误差参数，代入正解模型中，并走100组随机关节角度集合，将理论位姿与实际位姿作比较，得出绝对定位误差；将题目给的真实误差参数代入正解模型中，走同样的100组数据，得出另外一组绝对定位误差，将两组绝对定位误差放在一起比较，如下图所示，可以看出两组绝对定位误差折线完全重合，说明参数辨识正确。</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20210128114105.png" alt=""></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>xml操作</title>
    <url>/2021/01/14/xml%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="XML操作"><a href="#XML操作" class="headerlink" title="XML操作"></a>XML操作</h1><h2 id="XML文本"><a href="#XML文本" class="headerlink" title="XML文本"></a>XML文本</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">skills</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">skill</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>2<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span> <span class="attr">lang</span> =<span class="string">&quot;cn&quot;</span>&gt;</span>天下无敌<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">damage</span>&gt;</span>123<span class="tag">&lt;/<span class="name">damage</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">skill</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">skill</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>4<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span> <span class="attr">lang</span> =<span class="string">&quot;cn&quot;</span>&gt;</span>宇宙无敌<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">damage</span>&gt;</span>1231<span class="tag">&lt;/<span class="name">damage</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">skill</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">skill</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>5<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span> <span class="attr">lang</span> =<span class="string">&quot;cn&quot;</span>&gt;</span>多个平行宇宙无敌<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">damage</span>&gt;</span>12331<span class="tag">&lt;/<span class="name">damage</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">skill</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">skills</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="对应的解析代码"><a href="#对应的解析代码" class="headerlink" title="对应的解析代码"></a>对应的解析代码</h2><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.CompilerServices;</span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br><span class="line"></span><br><span class="line">namespace xml操作</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//创建技能信息集合，用来存储所有集合</span></span><br><span class="line">            List&lt;skill&gt; skilllist = <span class="keyword">new</span> List&lt;skill&gt;();</span><br><span class="line">            <span class="comment">//XmlDocument 文档解析类</span></span><br><span class="line">            XmlDocument xmldoc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//xmldoc.Load(&quot;TextFile1.txt&quot;);//选择要加载解析的xml文档</span></span><br><span class="line">            xmldoc.LoadXml(File.ReadAllText(<span class="string">&quot;TextFile1.txt&quot;</span>));<span class="comment">//同上</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//得到根节点</span></span><br><span class="line">            XmlNode rootNode = xmldoc.FirstChild;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//得到子节点</span></span><br><span class="line">            XmlNodeList childrenListNode = rootNode.ChildNodes;<span class="comment">//获取根节点下的所有子节点集合</span></span><br><span class="line">            <span class="keyword">foreach</span> (XmlNode skillNode <span class="keyword">in</span> childrenListNode)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//创建skill对象</span></span><br><span class="line">                skill skill = <span class="keyword">new</span> skill();</span><br><span class="line">                XmlNodeList childchildNodeList = skillNode.ChildNodes;<span class="comment">//获取所有的子节点下的子节点</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//遍历子节点的子节点</span></span><br><span class="line">                <span class="keyword">foreach</span> (XmlNode childchildNode <span class="keyword">in</span> childchildNodeList)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//通过name属性可以获取节点属性</span></span><br><span class="line">                    <span class="keyword">if</span> (childchildNode.Name == <span class="string">&quot;id&quot;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        skill.id = <span class="built_in">int</span>.Parse(childchildNode.InnerText);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (childchildNode.Name == <span class="string">&quot;name&quot;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        skill.name = childchildNode.InnerText;</span><br><span class="line">                        skill.lang = childchildNode.Attributes[<span class="number">0</span>].Value;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (childchildNode.Name == <span class="string">&quot;damage&quot;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        skill.damage = <span class="built_in">int</span>.Parse(childchildNode.InnerText);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                skill.printSkillValues();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>充电</category>
      </categories>
      <tags>
        <tag>xml</tag>
      </tags>
  </entry>
  <entry>
    <title>matlab学习笔记</title>
    <url>/2021/01/11/matlab%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Matlab学习笔记"><a href="#Matlab学习笔记" class="headerlink" title="Matlab学习笔记"></a>Matlab学习笔记</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">矩阵格式</span><br><span class="line">x=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>;<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">x*y</span><br><span class="line">x.*y</span><br><span class="line">对于矩阵来说是不同的</span><br><span class="line"></span><br><span class="line">x = <span class="number">5</span>;</span><br><span class="line">y = <span class="number">7</span>;</span><br><span class="line">x + y</span><br><span class="line">加分号的话，matlab的命令区不会显示（屏蔽）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C = input(<span class="string">&#x27;please enter a temporary .c :&#x27;</span>);</span><br><span class="line"></span><br><span class="line">fprintf(<span class="string">&#x27;华氏度=%f\n&#x27;</span>,F);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fprintf(<span class="string">&#x27;%g + %g = %g\n&#x27;</span>,x,y,x+y);</span><br><span class="line">&gt;&gt; tutorial2_1</span><br><span class="line">please enter x :<span class="number">8</span></span><br><span class="line">please enter y :<span class="number">9</span></span><br><span class="line"><span class="number">8</span> + <span class="number">9</span> = <span class="number">17</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% if 格式</span></span><br><span class="line">x=input(<span class="string">&#x27;please enter x :&#x27;</span>);</span><br><span class="line">y=input(<span class="string">&#x27;please enter y :&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x&gt;<span class="number">10</span>)</span><br><span class="line">    fprintf(<span class="string">&#x27;%g + %g = %g\n&#x27;</span>,x,y,x+y);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    fprintf(<span class="string">&#x27;gg\n&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">%取余</span></span><br><span class="line"><span class="built_in">mod</span>(<span class="number">19</span>,<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">%求最大公约数</span></span><br><span class="line">a= input(<span class="string">&#x27;请输入数字1：&#x27;</span>);</span><br><span class="line">b= input(<span class="string">&#x27;请输入数字2：&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">mod</span>(a,b)~= <span class="number">0</span>)</span><br><span class="line">    a =b;</span><br><span class="line">    b = <span class="built_in">mod</span>(a,b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">disp</span>(b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%矩阵元素遍历</span></span><br><span class="line">v =[<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">5</span>];</span><br><span class="line">s =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = v</span><br><span class="line">    <span class="built_in">disp</span>(<span class="built_in">i</span>);</span><br><span class="line">    s =s +<span class="built_in">i</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">disp</span>(s);</span><br><span class="line"><span class="built_in">disp</span>(sum(v));<span class="comment">%matlab自带求和</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment">%s是返回值，x,y是传入的参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">s</span> = <span class="title">Hanshu1</span><span class="params">( x ,y )</span></span></span><br><span class="line">    v =[<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">5</span>,x,y];</span><br><span class="line">    s =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = v</span><br><span class="line">        <span class="built_in">disp</span>(<span class="built_in">i</span>);</span><br><span class="line">        s =s +<span class="built_in">i</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="built_in">disp</span>(s);</span><br><span class="line">    <span class="built_in">disp</span>(sum(v));<span class="comment">%matlab自带求和</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;blue-o&#x27;</span>,x,y,<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">axis equal</span><br><span class="line"></span><br><span class="line"><span class="comment">%将窗口划分为2*3，在第1个里面画图</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x1 = <span class="number">0</span>:<span class="number">1</span>:<span class="number">10</span>;</span><br><span class="line">x2 = <span class="number">0</span>:<span class="number">1</span>:<span class="number">10</span>;</span><br><span class="line">y1 = x1.*x1;</span><br><span class="line">y2 = <span class="number">10</span>:<span class="number">1</span>:<span class="number">20</span>;</span><br><span class="line"><span class="built_in">plot</span>(x1,y1,<span class="string">&#x27;black&#x27;</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(x2,y2,<span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line"><span class="comment">%添加网格</span></span><br><span class="line">grid on;</span><br><span class="line"><span class="comment">%添加标题</span></span><br><span class="line">title(<span class="string">&#x27;sdfsdfsdf&#x27;</span>);</span><br><span class="line"><span class="comment">%添加标签</span></span><br><span class="line">xlabel(<span class="string">&#x27;sdfsdfsdfsdfs&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;sdfsdddddddddddd&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x = <span class="number">-1</span>:<span class="number">0.1</span>:<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">y1 = <span class="built_in">sin</span>(x);</span><br><span class="line">y2 = <span class="built_in">sin</span>(<span class="number">2</span>*x);</span><br><span class="line">y3 = <span class="built_in">sin</span>(<span class="number">3</span>*x);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y1);</span><br><span class="line">title(<span class="string">&#x27;01&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y2);</span><br><span class="line">title(<span class="string">&#x27;02&#x27;</span>);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,[<span class="number">3</span>,<span class="number">4</span>]);</span><br><span class="line"><span class="built_in">plot</span>(x,y3);</span><br><span class="line">title(<span class="string">&#x27;03&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x=<span class="number">-3</span>:<span class="number">0.1</span>:<span class="number">3</span>;</span><br><span class="line">y=<span class="number">-3</span>:<span class="number">0.1</span>:<span class="number">3</span>;</span><br><span class="line">[X,Y] = <span class="built_in">meshgrid</span>(x,y);</span><br><span class="line">Z=X.^<span class="number">2</span>+Y.^<span class="number">2</span>;</span><br><span class="line"><span class="comment">%画曲面</span></span><br><span class="line">surf(X,Y,Z);</span><br></pre></td></tr></table></figure>
<h3 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%eye(3)---&gt;3x3单位矩阵</span></span><br><span class="line"><span class="comment">%ones(3)---&gt;3x3全一矩阵</span></span><br><span class="line">&gt;&gt; <span class="built_in">eye</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span></span><br><span class="line">&gt;&gt; <span class="built_in">ones</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 产生行向量</span></span><br><span class="line"><span class="comment">%linspace(a,b,n)</span></span><br><span class="line"><span class="comment">%n缺省时，默认产生100个元素</span></span><br><span class="line"><span class="built_in">linspace</span>(<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">  <span class="number">1</span> 至 <span class="number">11</span> 列</span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">1.0404</span>    <span class="number">1.0808</span>    <span class="number">1.1212</span>    <span class="number">1.1616</span>    <span class="number">1.2020</span>    <span class="number">1.2424</span>    <span class="number">1.2828</span>    <span class="number">1.3232</span>    <span class="number">1.3636</span>    <span class="number">1.4040</span></span><br><span class="line">  <span class="number">12</span> 至 <span class="number">22</span> 列</span><br><span class="line">    <span class="number">1.4444</span>    <span class="number">1.4848</span>    <span class="number">1.5253</span>    <span class="number">1.5657</span>    <span class="number">1.6061</span>    <span class="number">1.6465</span>    <span class="number">1.6869</span>    <span class="number">1.7273</span>    <span class="number">1.7677</span>    <span class="number">1.8081</span>    <span class="number">1.8485</span></span><br><span class="line">  <span class="number">23</span> 至 <span class="number">33</span> 列</span><br><span class="line">    <span class="number">1.8889</span>    <span class="number">1.9293</span>    <span class="number">1.9697</span>    <span class="number">2.0101</span>    <span class="number">2.0505</span>    <span class="number">2.0909</span>    <span class="number">2.1313</span>    <span class="number">2.1717</span>    <span class="number">2.2121</span>    <span class="number">2.2525</span>    <span class="number">2.2929</span></span><br><span class="line">  <span class="number">34</span> 至 <span class="number">44</span> 列</span><br><span class="line">    <span class="number">2.3333</span>    <span class="number">2.3737</span>    <span class="number">2.4141</span>    <span class="number">2.4545</span>    <span class="number">2.4949</span>    <span class="number">2.5354</span>    <span class="number">2.5758</span>    <span class="number">2.6162</span>    <span class="number">2.6566</span>    <span class="number">2.6970</span>    <span class="number">2.7374</span></span><br><span class="line">  <span class="number">45</span> 至 <span class="number">55</span> 列</span><br><span class="line">    <span class="number">2.7778</span>    <span class="number">2.8182</span>    <span class="number">2.8586</span>    <span class="number">2.8990</span>    <span class="number">2.9394</span>    <span class="number">2.9798</span>    <span class="number">3.0202</span>    <span class="number">3.0606</span>    <span class="number">3.1010</span>    <span class="number">3.1414</span>    <span class="number">3.1818</span></span><br><span class="line">  <span class="number">56</span> 至 <span class="number">66</span> 列</span><br><span class="line">    <span class="number">3.2222</span>    <span class="number">3.2626</span>    <span class="number">3.3030</span>    <span class="number">3.3434</span>    <span class="number">3.3838</span>    <span class="number">3.4242</span>    <span class="number">3.4646</span>    <span class="number">3.5051</span>    <span class="number">3.5455</span>    <span class="number">3.5859</span>    <span class="number">3.6263</span></span><br><span class="line">  <span class="number">67</span> 至 <span class="number">77</span> 列</span><br><span class="line">    <span class="number">3.6667</span>    <span class="number">3.7071</span>    <span class="number">3.7475</span>    <span class="number">3.7879</span>    <span class="number">3.8283</span>    <span class="number">3.8687</span>    <span class="number">3.9091</span>    <span class="number">3.9495</span>    <span class="number">3.9899</span>    <span class="number">4.0303</span>    <span class="number">4.0707</span></span><br><span class="line">  <span class="number">78</span> 至 <span class="number">88</span> 列</span><br><span class="line">    <span class="number">4.1111</span>    <span class="number">4.1515</span>    <span class="number">4.1919</span>    <span class="number">4.2323</span>    <span class="number">4.2727</span>    <span class="number">4.3131</span>    <span class="number">4.3535</span>    <span class="number">4.3939</span>    <span class="number">4.4343</span>    <span class="number">4.4747</span>    <span class="number">4.5152</span></span><br><span class="line">  <span class="number">89</span> 至 <span class="number">99</span> 列</span><br><span class="line">    <span class="number">4.5556</span>    <span class="number">4.5960</span>    <span class="number">4.6364</span>    <span class="number">4.6768</span>    <span class="number">4.7172</span>    <span class="number">4.7576</span>    <span class="number">4.7980</span>    <span class="number">4.8384</span>    <span class="number">4.8788</span>    <span class="number">4.9192</span>    <span class="number">4.9596</span></span><br><span class="line">  <span class="number">100</span> 列</span><br><span class="line">    <span class="number">5.0000</span></span><br></pre></td></tr></table></figure>
<p>matlab矩阵元素的存储顺序按<strong>列</strong>存储；</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%在矩阵总元素保持不变的前提下，将矩阵A重新排列为m*n的二维矩阵</span></span><br><span class="line"><span class="built_in">reshape</span>(A,m,n)</span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A(:,<span class="built_in">j</span>)</span><br><span class="line"><span class="comment">%取A矩阵的第j列全部元素</span></span><br><span class="line">A(<span class="built_in">i</span>,:)</span><br><span class="line"><span class="comment">%取A矩阵的第i行全部元素</span></span><br><span class="line">A(<span class="built_in">i</span>,<span class="built_in">j</span>)</span><br><span class="line"><span class="comment">%取A矩阵的第i行,第j列的元素</span></span><br><span class="line">A(<span class="built_in">i</span>:<span class="built_in">i</span>+m,;)</span><br><span class="line"><span class="comment">%取A矩阵的第i-i+m行的全部元素</span></span><br><span class="line">A(:,k:k+m)</span><br><span class="line"><span class="comment">%取A矩阵的第k-k+m列的全部元素</span></span><br><span class="line">A(<span class="built_in">i</span>:<span class="built_in">i</span>+m,k:k+m)</span><br><span class="line"><span class="comment">%取A矩阵的第i-i+m行,第k-k+m列的全部元素</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>C#进程与线程</title>
    <url>/2021/01/11/C-%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="501-进程与线程"><a href="#501-进程与线程" class="headerlink" title="501 进程与线程"></a>501 进程与线程</h2><ol>
<li><p>一般情况下，一个应用程序开启一个进程，开启多个线程</p>
</li>
<li><p>应用程序 —&gt; 进程1（车间）</p>
<p>​                  —&gt;线程1，2，3，。。（多个工人）</p>
</li>
<li><p>单个CPU只能开启并运行一个进程；</p>
</li>
<li><p>线程之中，某些内存区域在同一时间只能由一个线程访问；（互斥锁）</p>
</li>
</ol>
<p>​                                某些内存区域可以容纳固定数目的线程访问；（信号量）</p>
<ol>
<li>线程中语句的执行是从上到下的</li>
<li>多线程（异步多线程），同时执行</li>
</ol>
<h2 id="502-开启线程"><a href="#502-开启线程" class="headerlink" title="502 开启线程"></a>502 开启线程</h2><ol>
<li>委托开启（有一个参数）</li>
</ol>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test</span>(<span class="params"><span class="built_in">int</span> i</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.通过委托，开启一个线程</span></span><br><span class="line">            Action&lt;<span class="built_in">int</span>&gt; a = Test;</span><br><span class="line">            <span class="comment">//开启一个新线程，执行a中引用的方法</span></span><br><span class="line">            a.BeginInvoke(<span class="number">100</span>,<span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="comment">//可以认为线程是同时执行的（异步执行）</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>有两个参数：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test</span>(<span class="params"><span class="built_in">int</span> i,<span class="built_in">string</span> str</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.通过委托，开启一个线程</span></span><br><span class="line">            Action&lt;<span class="built_in">int</span>,<span class="built_in">string</span>&gt; a = Test;</span><br><span class="line">            <span class="comment">//开启一个新线程，执行a中引用的方法</span></span><br><span class="line">            a.BeginInvoke(<span class="number">100</span>,<span class="string">&quot;s&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="comment">//可以认为线程是同时执行的（异步执行）</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>有返回值：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//为比较耗时的操作开启单独的线程，如下载</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">Test</span>(<span class="params"><span class="built_in">int</span> i,<span class="built_in">string</span> str</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">            <span class="comment">//当前线程休眠100ms，即暂停0.1s</span></span><br><span class="line">            Thread.Sleep(<span class="number">100</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">100</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.通过委托，开启一个线程</span></span><br><span class="line">            Func&lt;<span class="built_in">int</span>,<span class="built_in">string</span>,<span class="built_in">int</span>&gt; a = Test;</span><br><span class="line">            <span class="comment">//开启一个新线程，执行a中引用的方法</span></span><br><span class="line">            <span class="comment">//IAsyncResult---取得线程状态</span></span><br><span class="line">            IAsyncResult ar = a.BeginInvoke(<span class="number">100</span>,<span class="string">&quot;s&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="comment">//可以认为线程是同时执行的（异步执行）</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">            <span class="comment">//判断当前线程状态</span></span><br><span class="line">            <span class="keyword">while</span>(ar.IsCompleted == <span class="literal">false</span> )</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">                <span class="comment">//控制检测频率</span></span><br><span class="line">                Thread.Sleep(<span class="number">10</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//取得异步线程的返回值</span></span><br><span class="line">            <span class="built_in">int</span> result = a.EndInvoke(ar);</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="601-socket编程"><a href="#601-socket编程" class="headerlink" title="601 socket编程"></a>601 socket编程</h2><ol>
<li>通信协议：TCP ; UDP</li>
<li>服务器端创建Socket；客户端创建Socket；</li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>线程</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式</title>
    <url>/2021/01/11/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>正则表达式语言是一种专门用于字符串处理的语言</p>
<ul>
<li><p>检索：通过正则表达式，从字符串中获取我们想要的部分</p>
</li>
<li><p>匹配：判断给定的字符串是否符合正则表达式的过滤逻辑</p>
</li>
</ul>
<p>正则表达式表述了一个字符串的书写规则</p>
<hr>
<p>正则表达式就是由普通字符以及特殊字符（成为元字符）组成的文字模式。</p>
<hr>
<p>常用元字符：</p>
<p>^  匹配必须出现在字符串的开头或行的开头</p>
<p>$  匹配必须出现在以下位置：字符串结尾、字符串结尾处的 \n 之前或行的结尾。</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line">namespace 正则表达式</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//正则表达式（字符串处理语言）</span></span><br><span class="line">        <span class="comment">//检索 + 匹配</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> s = <span class="string">&quot;sdfsdfsdfsdfsdfsdfdsfasdf发士大夫士大夫&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> ss = Regex.Replace(s, <span class="string">&quot;^&quot;</span>, <span class="string">&quot;被替换成的字符串&quot;</span>);<span class="comment">//匹配字符串的开头，并替换成&quot;被替换成的字符串&quot;</span></span><br><span class="line">            Console.WriteLine(ss);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line">namespace 正则表达式</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//正则表达式（字符串处理语言）</span></span><br><span class="line">        <span class="comment">//检索 + 匹配</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> s = <span class="string">&quot;sdfsdfsdfsdfsdfsdfdsfasdf发士大夫士大夫&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> ss = Regex.Replace(s, <span class="string">&quot;$&quot;</span>, <span class="string">&quot;结尾被替换成的字符串&quot;</span>);<span class="comment">//匹配字符串的开头，并替换成&quot;被替换成的字符串&quot;</span></span><br><span class="line">            Console.WriteLine(ss);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>基本语法元字符：</p>
<blockquote>
<p>.                           匹配除换行符以外的任意字符</p>
<p>\w                       匹配字母、数字、下划线、汉字 (指大小写字母、0-9的数字、下划线_)</p>
<p>\W                       \w的补集 （ 除“大小写字母、0-9的数字、下划线_”之外）</p>
<p>\s                        匹配任意空白符 (包括换行符/n、回车符/r、制表符/t、垂直制表符/v、换页符/f)</p>
<p>\S                        \s的补集 (除\s定义的字符之外)</p>
<p>\d                        匹配数字 (0-9数字)</p>
<p>\D                        表示\d的补集 (除0-9数字之外)</p>
</blockquote>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line">namespace 正则表达式</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//校验只输入数字</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> s = Console.ReadLine();</span><br><span class="line">            <span class="built_in">bool</span> isMatch = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i =<span class="number">0</span>;i&lt;s.Length;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (s[i] &lt; <span class="string">&#x27;0&#x27;</span> || s[i] &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    isMatch = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;密码&quot;</span> + isMatch);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line">namespace 正则表达式</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//校验只输入数字</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> s = Console.ReadLine();</span><br><span class="line"> <span class="comment">//           string pattern = @&quot;^\d*$&quot;;//以数字结尾的一个或多个(*:一个或多个)</span></span><br><span class="line">            <span class="built_in">string</span> pattern = <span class="string">@&quot;\d*&quot;</span>;<span class="comment">//以数字结尾的一个或多个(*:一个或多个)（空字符串也是符合规则的）</span></span><br><span class="line">            <span class="built_in">bool</span> isMatch = Regex.IsMatch(s, pattern);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;结果&quot;</span> + isMatch);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line">namespace 正则表达式</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//校验只允许输入除大小写字母、0-9的数字、下划线_以外的任何字</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> s = Console.ReadLine();</span><br><span class="line">            <span class="built_in">string</span> pattern = <span class="string">@&quot;^\W*$&quot;</span>;<span class="comment">//以数字结尾的一个或多个(*:一个或多个)（空字符串也是符合规则的）</span></span><br><span class="line">            <span class="built_in">bool</span> isMatch = Regex.IsMatch(s, pattern);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;结果&quot;</span> + isMatch);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>\W                 \w的补集 （ 除“大小写字母、0-9的数字、下划线_”之外）</p>
<p>\S                  \s的补集 (除\s定义的字符之外)</p>
<p>\D                  表示\d的补集 (除0-9数字之外)</p>
<p>\B                  匹配不是单词开头或结束的位置</p>
<p>[ab]               匹配中括号中的字符</p>
<p>[a-c]               a字符到c字符之间是字符（字母表）</p>
<p><sup><a href="#fn_x" id="reffn_x">x</a></sup>                匹配除了x以外的任意字符</p>
<p><sup><a href="#fn_adwz" id="reffn_adwz">adwz</a></sup>         匹配除了adwz这几个字符以外的任意字符</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line">namespace 正则表达式</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//校验只允许输入除大小写字母、0-9的数字、下划线_以外的任何字</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> str = <span class="string">&quot;sdafsa&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> pattern = <span class="string">@&quot;[^asd]&quot;</span>;<span class="comment">//除了asd之外的字符串</span></span><br><span class="line">            <span class="built_in">string</span> ss = Regex.Replace(str, pattern, <span class="string">&quot;#&quot;</span>);</span><br><span class="line">            Console.WriteLine(ss);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>{n}          匹配前面的字符n次</p>
<p>{n,}         匹配前面的字符n次或多于n次</p>
<p>{n,m}      匹配前面的字符n到m次</p>
<p>?              重复零次或一次</p>
<p>+             重复一次或更多次</p>
<p>*              重复零次或更多次</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line">namespace 正则表达式</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//校验是否为QQ号（5-12位数字）</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> str = <span class="string">&quot;15151151515&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> pattern = <span class="string">@&quot;^\d&#123;5,12&#125;$&quot;</span>;<span class="comment">//重复\d的5-12次</span></span><br><span class="line">            <span class="built_in">bool</span> ism = Regex.IsMatch(str, pattern);</span><br><span class="line">            Console.WriteLine(ism);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>择一匹配：</p>
<p>|                 将两个匹配条件进行逻辑“或”（Or）运算。</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line">namespace 正则表达式</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//择一匹配</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> str = <span class="string">&quot;15151151大师傅士大夫12【】【】‘515&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> pattern = <span class="string">@&quot;\d|[a-z]&quot;</span>;<span class="comment">// | 相当于或运算</span></span><br><span class="line">            MatchCollection o = Regex.Matches(str, pattern);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="keyword">var</span> itm <span class="keyword">in</span> o)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(itm);<span class="comment">//输出匹配出的字符串</span></span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="委托"><a href="#委托" class="headerlink" title="委托"></a>委托</h2><p>委托是一个类型，这个类型可以赋值一个方法的引用</p>
<blockquote>
<p> 如：int 是一个类型，存储 整形数字；</p>
<p> 委托是一个类型，存储 方法的引用；</p>
</blockquote>
<ul>
<li>定义委托</li>
<li>创建委托实例</li>
</ul>
<h3 id="定义委托"><a href="#定义委托" class="headerlink" title="定义委托"></a>定义委托</h3>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo迁移</title>
    <url>/2021/01/10/hexo%E8%BF%81%E7%A7%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo博客迁移"><a href="#hexo博客迁移" class="headerlink" title="hexo博客迁移"></a>hexo博客迁移</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前面几次迁移都很顺利，但是最近2次迁移发生了错误，所以特定记录下来，以后迁移的时候傻瓜式操作就好些了</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li><p>根据官网文档看步骤<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p>
</li>
<li><p>git安装</p>
</li>
<li><p>通过NodeSource安装Node.js</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20210110101009.png" alt=""></p>
</li>
<li><p>执行命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li>
<li>OK</li>
</ol>
]]></content>
      <categories>
        <category>Ubuntu配置</category>
      </categories>
      <tags>
        <tag>博客迁移</tag>
      </tags>
  </entry>
  <entry>
    <title>AR入门</title>
    <url>/2021/01/10/AR%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="3cbe88ee5581a52df9ea738ae5b32fd29969763576237409ad8ff16fb396a65b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>指导入门</tag>
      </tags>
  </entry>
  <entry>
    <title>SFM-1</title>
    <url>/2021/01/05/%E8%BF%90%E5%8A%A8%E6%81%A2%E5%A4%8D%E7%BB%93%E6%9E%84-1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="5d9741b07ae9edc20b536a1104230bc6f15f08c5c545d8067b38ba939f11f2da"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>SFM</category>
      </categories>
      <tags>
        <tag>SFM</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu20.04内置输入法词库导入</title>
    <url>/2020/12/26/Ubuntu20-04%E5%86%85%E7%BD%AE%E8%BE%93%E5%85%A5%E6%B3%95%E8%AF%8D%E5%BA%93%E5%AF%BC%E5%85%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ubuntu20-04-内置输入法词库导入"><a href="#Ubuntu20-04-内置输入法词库导入" class="headerlink" title="Ubuntu20.04 内置输入法词库导入"></a>Ubuntu20.04 内置输入法词库导入</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于需要在Clion上写代码，但是它对中文的支持并不好，无法输入中文，为了解决这个问题，我尝试了搜狗输入法，虽然能输入中文，但是无法看到候选词框，体验依旧很难受，万般无奈之下，换回了IBUS，将搜狗输入法的词库导入后，体验还可以</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ol>
<li>IBUS架构，默认输入法</li>
<li>按照<a href="https://junlu.club/2020/11/27/clion%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87/">此方法</a>配置Clion</li>
<li>安装深蓝词库转换，github上有，<a href="https://github.com/studyzy/imewlconverter">传送门</a></li>
<li>将搜狗输入法的词库导出文件转换为txt</li>
<li>导入默认输入法</li>
</ol>
]]></content>
      <categories>
        <category>Ubuntu配置</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu-开发库配置记录</title>
    <url>/2020/12/25/Ubuntu-%E5%BC%80%E5%8F%91%E5%BA%93%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ubuntu-开发库配置记录"><a href="#Ubuntu-开发库配置记录" class="headerlink" title="Ubuntu-开发库配置记录"></a>Ubuntu-开发库配置记录</h1><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>由于配置库的过程太过惨痛，所以将现在以及以后的开发库的配置过程记录一下，以供后续参考</p>
<h2 id="2-Eigen"><a href="#2-Eigen" class="headerlink" title="2. Eigen"></a>2. Eigen</h2><ol>
<li><p>简单命令安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libeigen3-dev</span><br></pre></td></tr></table></figure></li>
<li><p>源码编译安装</p>
<p>git clone</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;gitlab.com&#x2F;libeigen&#x2F;eigen.git</span><br></pre></td></tr></table></figure>
<p>安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir build</span><br><span class="line"></span><br><span class="line">cd build</span><br><span class="line"></span><br><span class="line">cmake ..</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="3-Cmake"><a href="#3-Cmake" class="headerlink" title="3. Cmake"></a>3. Cmake</h2><ol>
<li><p>进入<a href="https://cmake.org/download/">官网</a>下载压缩包</p>
</li>
<li><p>解压后按照Github上的提示，安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;bootstrap</span><br><span class="line"></span><br><span class="line">make -j8</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Ubuntu配置</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu-安装系统以及花屏问题解决</title>
    <url>/2020/12/25/Ubuntu-%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F%E4%BB%A5%E5%8F%8A%E8%8A%B1%E5%B1%8F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ubuntu-安装系统以及花屏问题解决"><a href="#Ubuntu-安装系统以及花屏问题解决" class="headerlink" title="Ubuntu-安装系统以及花屏问题解决"></a>Ubuntu-安装系统以及花屏问题解决</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>马上就快寒假了，想到回家的时候家里没有这么好的科研条件，就打算买个笔记本作为主力机，教研室电脑作为Ubuntu的机子，然后使用向日葵连接使用；今年已经配置了号多次Ubuntu系统，今天记录一下，以后直接上就好了</p>
<h2 id="1-制作安装盘"><a href="#1-制作安装盘" class="headerlink" title="1. 制作安装盘"></a>1. 制作安装盘</h2><ol>
<li>从<a href="https://cn.ubuntu.com/download">官网</a>下载安装包，格式化U盘，然后将<strong>.iso</strong>文件全部解压到U盘中；</li>
<li>制作完成</li>
</ol>
<h2 id="2-花屏问题解决"><a href="#2-花屏问题解决" class="headerlink" title="2. 花屏问题解决"></a>2. 花屏问题解决</h2><ol>
<li><p>安装系统时，采用安全图形模式安装，最后安装重启阶段，一直按住e键不放，进入一大摞代码的界面；（或者不停的按Esc）</p>
</li>
<li><p>修改代码，在quite splash后面输入nomodeset；</p>
</li>
<li><p>快捷键 Ctrl+x启动系统</p>
</li>
<li><p>进入系统后，第一件事，并不是修改软件源，而是在终端执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo gedit &#x2F;etc&#x2F;default&#x2F;grub</span><br></pre></td></tr></table></figure></li>
<li><p>同样，找到quite splash，在后面加入nomodeset</p>
</li>
<li><p>执行命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure>
<h2 id="3-最后"><a href="#3-最后" class="headerlink" title="3. 最后"></a>3. 最后</h2></li>
</ol>
<p>重新进入系统后，更换软件源，添加附加驱动等等，就不详细说了</p>
]]></content>
      <categories>
        <category>Ubuntu配置</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>阶段总结</title>
    <url>/2020/12/19/%E9%98%B6%E6%AE%B5%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="1052857e6c88e7e6b21dd75201733b794eec0a9e09909bfeb3a957a63b8d55b6"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>ArRobot</tag>
      </tags>
  </entry>
  <entry>
    <title>大学生在线答题打开复制权限</title>
    <url>/2020/12/01/%E5%A4%A7%E5%AD%A6%E7%94%9F%E5%9C%A8%E7%BA%BF%E7%AD%94%E9%A2%98%E6%89%93%E5%BC%80%E5%A4%8D%E5%88%B6%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="关于实现“大学生在线”答题页面开启复制题目权限的技巧"><a href="#关于实现“大学生在线”答题页面开启复制题目权限的技巧" class="headerlink" title="关于实现“大学生在线”答题页面开启复制题目权限的技巧"></a>关于实现“大学生在线”答题页面开启复制题目权限的技巧</h1><h2 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h2><ul>
<li>谷歌浏览器</li>
<li>油猴插件</li>
</ul>
<h2 id="正式行动"><a href="#正式行动" class="headerlink" title="正式行动"></a>正式行动</h2><ol>
<li><p>安装谷歌浏览器，<a href="https://www.google.cn/intl/zh-CN/chrome/">点我进下载页面</a></p>
</li>
<li><p>安装油猴插件</p>
<ol>
<li><p>打开谷歌浏览器，打开<strong>设置</strong>，点击<strong>更多工具</strong>，点击<strong>扩展程序</strong>，如下图所示：</p>
<p><img src="https://i.loli.net/2020/11/30/iKardxQjqfvOVc1.png" alt=""></p>
</li>
<li><p>在右上角开启<strong>开发者模式</strong>，如下图</p>
<p><img src="https://i.loli.net/2020/11/30/9iLyc78JbROedsa.png" alt=""></p>
</li>
<li><p>下载油猴插件，<a href="https://wwe.lanzous.com/im2mPixnyng">点我下载</a>，下载完成后，是一个<strong>.crx</strong>文件，要做的是将其安装到浏览器中</p>
<ul>
<li><p>下载完成后，放在桌面上，将文件的<strong>后缀名.crx</strong>改掉，改为<strong>.zip</strong>，然后将其用解压软件<strong>解压</strong>到桌面</p>
</li>
<li><p>打开浏览器的扩展程序页面，选择<strong>加载已解压的扩展程序</strong>，选择桌面上的已经解压的文件夹，安装扩展程序</p>
<p><img src="https://i.loli.net/2020/11/30/3VTR9M7SHZoCN82.png" alt=""></p>
</li>
</ul>
</li>
</ol>
</li>
<li><p>安装网页限制解除脚本</p>
<p>打开<a href="https://greasyfork.org/zh-CN/scripts/28497-remove-web-limits-modified">此网址</a>，点击<strong>安装</strong>按钮，如下图所示；</p>
<p><img src="https://i.loli.net/2020/11/30/mhzNHLXOpIkPUb3.png" alt=""></p>
<p>安装完成后，任意打开网页，如，百度主页，<strong>鼠标移动至左上角</strong>，如下图所示：</p>
<p><img src="https://i.loli.net/2020/11/30/w9k1FPehMJzsAVQ.png" alt=""></p>
<p>可以发现有解除限制的选项，点它！就可以在此网页有复制权限了，因此，<strong>在大学生在线答题之前，需要先点击此按钮，再答题</strong></p>
<p>至此配置结束</p>
</li>
</ol>
<h2 id="具体效果"><a href="#具体效果" class="headerlink" title="具体效果"></a>具体效果</h2><p><img src="https://i.loli.net/2020/11/30/gmns5GQjYivwUlA.png" alt=""></p>
<p><img src="https://i.loli.net/2020/12/01/rlnXqy8dzUIk976.png" alt=""></p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>大学生在线</tag>
      </tags>
  </entry>
  <entry>
    <title>将ubuntu默认中文文件夹名称改为英文</title>
    <url>/2020/11/27/%E5%B0%86ubuntu%E9%BB%98%E8%AE%A4%E4%B8%AD%E6%96%87%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D%E7%A7%B0%E6%94%B9%E4%B8%BA%E8%8B%B1%E6%96%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="将Ubuntu默认中文文件夹名称改为英文"><a href="#将Ubuntu默认中文文件夹名称改为英文" class="headerlink" title="将Ubuntu默认中文文件夹名称改为英文"></a>将Ubuntu默认中文文件夹名称改为英文</h1><blockquote>
<p>转载于<a href="https://blog.csdn.net/jeffrey_li/article/details/54947502">https://blog.csdn.net/jeffrey_li/article/details/54947502</a></p>
</blockquote>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ul>
<li><p><strong>方法一：</strong><br>打开 系统设置-》语言支持 将“english”拖动到最上端，重启系统。<br>重启后，会提示更新文件名称，更新后在将语言”中文“拖动到顶部，重启系统 。</p>
</li>
<li><p><strong>方法二：</strong>编辑~/.config/user-dirs.dirs文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim ~&#x2F;.config&#x2F;user-dirs.dirs1</span><br></pre></td></tr></table></figure>
<p>修改文件内容为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">XDG_DESKTOP_DIR&#x3D;&quot;$HOME&#x2F;Desktop&quot;</span><br><span class="line">XDG_DOWNLOAD_DIR&#x3D;&quot;$HOME&#x2F;Downloads&quot;</span><br><span class="line">XDG_TEMPLATES_DIR&#x3D;&quot;$HOME&#x2F;Templates&quot;</span><br><span class="line">XDG_PUBLICSHARE_DIR&#x3D;&quot;$HOME&#x2F;Public&quot;</span><br><span class="line">XDG_DOCUMENTS_DIR&#x3D;&quot;$HOME&#x2F;Documents&quot;</span><br><span class="line">XDG_MUSIC_DIR&#x3D;&quot;$HOME&#x2F;Music&quot;</span><br><span class="line">XDG_PICTURES_DIR&#x3D;&quot;$HOME&#x2F;Pictures&quot;</span><br><span class="line">XDG_VIDEOS_DIR&#x3D;&quot;$HOME&#x2F;Videos&quot;12345678</span><br></pre></td></tr></table></figure></li>
<li><p><strong>方法三：</strong><br>打开终端，在终端中输入命令:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export LANG&#x3D;en_US</span><br><span class="line">xdg-user-dirs-gtk-update12</span><br></pre></td></tr></table></figure>
<p>跳出对话框询问是否将目录转化为英文路径,同意并关闭。<br>在终端中输入命令:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export LANG&#x3D;zh_CN1</span><br></pre></td></tr></table></figure>
<p>重新启动系统，系统会提示更新文件名称，选择不再提示,并取消修改。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Ubuntu配置</category>
      </categories>
      <tags>
        <tag>文件夹改名</tag>
      </tags>
  </entry>
  <entry>
    <title>clion输入中文</title>
    <url>/2020/11/27/clion%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ubuntu20-04下clion无法输入中文问题解决"><a href="#Ubuntu20-04下clion无法输入中文问题解决" class="headerlink" title="Ubuntu20.04下clion无法输入中文问题解决"></a>Ubuntu20.04下clion无法输入中文问题解决</h1><blockquote>
<p>转载于<a href="https://blog.csdn.net/dyg7777/article/details/108334293?utm_medium=distribute.pc_relevant.none-task-blog-title-2&amp;spm=1001.2101.3001.4242">https://blog.csdn.net/dyg7777/article/details/108334293?utm_medium=distribute.pc_relevant.none-task-blog-title-2&amp;spm=1001.2101.3001.4242</a></p>
</blockquote>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol>
<li><p>设置输入法</p>
<p>将 Ubuntu 的输入法设置为 Ibus Pinyin</p>
<p><a href="https://blog.forgiveher.cn/2020/08/20/1597932898303/ibus.png"><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ibG9nLmZvcmdpdmVoZXIuY24vMjAyMC8wOC8yMC8xNTk3OTMyODk4MzAzL2lidXMucG5n?x-oss-process=image/format,png" alt="Ibus"></a></p>
</li>
<li><p>下载JBR</p>
<p>下载解压 <a href="https://confluence.jetbrains.com/pages/viewpage.action?pageId=173178989">JBR</a></p>
<p><a href="https://blog.forgiveher.cn/2020/08/20/1597932898303/jbr.png"><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ibG9nLmZvcmdpdmVoZXIuY24vMjAyMC8wOC8yMC8xNTk3OTMyODk4MzAzL2pici5wbmc?x-oss-process=image/format,png" alt="JBR"></a></p>
</li>
<li><p>安装runtime插件</p>
<p>打开 IDE，下载插件 <a href="https://www.jetbrains.com/help/idea/switching-boot-jdk.html">Choose Runtime</a></p>
</li>
<li><p>IDE在jbr下运行</p>
<p>在 CLion中按下 <code>Ctrl + Shift + A</code>， 随后输入 <code>Choose Runtime</code>，打开对话框，随后选择下载解压的 JBR，点击 <code>Install</code>，随后 IDE 会在自动重启</p>
<p>就此结束</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Ubuntu配置</category>
      </categories>
      <tags>
        <tag>clion</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu18.04拨号上网</title>
    <url>/2020/11/27/ubuntu18-04%E6%8B%A8%E5%8F%B7%E4%B8%8A%E7%BD%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ubuntu18-04-拨号上网方法"><a href="#Ubuntu18-04-拨号上网方法" class="headerlink" title="Ubuntu18.04 拨号上网方法"></a>Ubuntu18.04 拨号上网方法</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于20.04系统还没有成熟，博主使用的相关的开发工具还没有支持20系统，所以又重新格式化装了18.04；但是上网步骤这里卡住了，特此记录</p>
<p>网上的大多数方法，比如改正true之类的，对我都没有太大用处。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><blockquote>
<p>转载于<a href="https://blog.csdn.net/qq_38649880/article/details/102651760">https://blog.csdn.net/qq_38649880/article/details/102651760</a></p>
</blockquote>
<ol>
<li><p>输入命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmcli con edit type pppoe con-name “YOUR_CONNECTION_NAME”</span><br></pre></td></tr></table></figure>
<p>把里面的<code>YOUR_CONNECTION_NAME</code>改成新建立的拨号上网的名字。<br>然后命令行界面会有所变化，接下来开始设置用户名和密码就行了.</p>
</li>
<li><p>依次输入命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set pppoe.username YOUR_DSL_ACCOUNT_USERNAME</span><br><span class="line">set pppoe.password YOUR_DSL_ACCOUNT_PASSWORD</span><br><span class="line">save</span><br></pre></td></tr></table></figure>
<p>把用户名和密码填成你自己的账号和密码就OK。<br>接下来回询问你是否想设置成自动连接，经常用的话输入<code>yes</code>就可以，开机就会自动连接，比较方便。<br>这就设置好了，然后输入<code>quit</code>退出即可。</p>
<p>就此结束</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Ubuntu配置</category>
      </categories>
      <tags>
        <tag>拨号上网</tag>
      </tags>
  </entry>
  <entry>
    <title>三维重建基础与极几何</title>
    <url>/2020/11/09/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA%E4%B8%8E%E6%9E%81%E5%87%A0%E4%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="三维重建基础与极几何"><a href="#三维重建基础与极几何" class="headerlink" title="三维重建基础与极几何"></a>三维重建基础与极几何</h1><blockquote>
<p>学习记录</p>
</blockquote>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>多视图几何中的关键问题有：</p>
<ol>
<li><p>摄像机几何</p>
<blockquote>
<p>从一张或者多张图像中求解摄像机的内外参数</p>
</blockquote>
</li>
<li><p>场景几何</p>
<blockquote>
<p>通过多个图像求解3D场景坐标</p>
</blockquote>
</li>
<li><p>对应关系</p>
<blockquote>
<p>已知一个图像的p点，如何在另一张图像中找到p’点</p>
</blockquote>
</li>
</ol>
<p>1+3 =&gt; 2：三维重建</p>
<p>3 =&gt; 1 + 2：SFM（运动恢复结构）</p>
<h2 id="三维重建基础"><a href="#三维重建基础" class="headerlink" title="三维重建基础"></a>三维重建基础</h2><h3 id="从单幅视图恢复场景结构"><a href="#从单幅视图恢复场景结构" class="headerlink" title="从单幅视图恢复场景结构"></a>从单幅视图恢复场景结构</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20201109164053.png" alt=""></p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201109164136.png" alt=""></p>
<p>一张照片缺乏深度信息，从上图看出，不止有P点一个点可以在成像平面上成像点p，红线上的场景点都满足；所以说，单张照片2D到3D的映射具有多义性。</p>
<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20201109164617.png" alt=""></p>
<p>考虑两只眼睛观察空间，模型如下：</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201109164554.png" style="zoom:150%;" /></p>
<p>O1与O2分别代表两只眼睛，两个相机，p与p’所在平面分别为两个相机的成像平面，P点为空间点；</p>
<p>理想情况下，P点空间点的确定由以下公式确定：</p>
<script type="math/tex; mode=display">
P = l × l'</script><p>但是实际情况下，由于噪声的存在，或者由于计算机精度丢失的原因，导致两条直线通常不会相交，实际使用中此方法无法做到，作废</p>
<p>所以，求解空间点P的问题，可以描述为：</p>
<blockquote>
<p>已知p和p’，K与K’，R，T</p>
<p>求解：P的三维坐标</p>
</blockquote>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><h4 id="线性解法"><a href="#线性解法" class="headerlink" title="线性解法"></a>线性解法</h4><p>线性解法参见《 Multiple View Geometry in Computer Vision》</p>
<h4 id="非线性解法"><a href="#非线性解法" class="headerlink" title="非线性解法"></a>非线性解法</h4><p>最优化问题，求点$P^<em>$，使得$MP^</em>$到$p$的距离，加上${M’P^*}$到$p’$的距离之和最小</p>
<p>即：</p>
<script type="math/tex; mode=display">
d\left(p, M P^{*}\right)+d\left(p^{\prime}, M^{\prime} P^{*}\right)</script><p>求解方法：牛顿法与列文伯格-马夸尔特法（L-M方法）</p>
<h2 id="极几何"><a href="#极几何" class="headerlink" title="极几何"></a>极几何</h2><h3 id="极几何解决的问题"><a href="#极几何解决的问题" class="headerlink" title="极几何解决的问题"></a>极几何解决的问题</h3><p>已知一个图像的p点，如何在另一张图像中找到p’点</p>
<h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20201109171145.png" alt=""></p>
<p>极平面：过点P，$O_1$与$O_2$的平面</p>
<p>基线：$O_1$与$O_2$的连线</p>
<p>极线：极平面与成像平面的交线</p>
<p>极点：基线与成像平面的交点</p>
<h3 id="本质矩阵"><a href="#本质矩阵" class="headerlink" title="本质矩阵"></a>本质矩阵</h3><p>定义：本质矩阵是对<code>规范化摄像机</code>拍摄的两个视点图像间的极几何关系进行代数描述</p>
<h3 id="规范化摄像机"><a href="#规范化摄像机" class="headerlink" title="规范化摄像机"></a>规范化摄像机</h3><p>实际情况下，摄像机坐标系下的空间点 与 像素坐标系下的平面点 之间的转换：</p>
<script type="math/tex; mode=display">
P'=
K
\begin{bmatrix}
\ E & 0 \\
\end{bmatrix}
P
=
\begin{bmatrix}
\ u \\
\ v \\
\ z \\
\end{bmatrix}
=
\begin{bmatrix}
\ \alpha & -\alpha cot\theta & c_x \\
0 & \frac{\beta}{sin\theta} & c_y \\
0 & 0 & 1 \\
\end{bmatrix}
\begin{bmatrix}
1 & 0 & 0 & 0 \\
0 & 1 & 0 & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}
\begin{bmatrix}
\ x \\
\ y \\
\ z \\
\ 1 \\
\end{bmatrix}
\\\\
= 
\begin{bmatrix}
\ \alpha & -\alpha cot\theta & c_x & 0 \\
0 & \frac{\beta}{sin\theta} & c_y & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}
\begin{bmatrix}
\ x \\
\ y \\
\ z \\
\ 1 \\
\end{bmatrix}
=
MP</script><p>规范化摄像机指的是K = 0的情况下。</p>
<h3 id="推导本质矩阵"><a href="#推导本质矩阵" class="headerlink" title="推导本质矩阵"></a>推导本质矩阵</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20201127092425.png" alt=""></p>
<ol>
<li><p>三维点$p’$ 在$O_1$下的坐标是多少？</p>
<p>设$p’$在$O<em>2$下的坐标为$P</em>{O2}$，$p’$在$O<em>1$下的坐标为$P</em>{O1}$</p>
<script type="math/tex; mode=display">
P'_{O2} = RP'_{O1}+T</script><p>由上述公式可以推导出:</p>
<script type="math/tex; mode=display">
P'_{O1} = R^T(P'_{O2} - T) \\
= R^TP'_{O2} - R^TT</script></li>
<li><p>三维点$O_2$在$O_1$下的坐标是多少？</p>
<p>根据上面的公式，令$P’_{O2}$为0，即$P’$与$O_2$重合，可得三维点$O_2$在$O_1$下的坐标是$-R^TT$</p>
</li>
<li><p>两个向量叉乘，得到垂直于极平面的向量，与$p$点在$O_1$下的向量，点乘为0</p>
<script type="math/tex; mode=display">
\vec{a} =R^TT \times (R^TP'_{O2}-R^TT) \\
\vec{b}=P_{O1} \\
\vec{a} ^T\cdot \vec{b} = 0</script><p>最终得到：</p>
<script type="math/tex; mode=display">
[R^TT \times (R^TP'_{O2}-R^TT) ]^T \cdot P_{O1} = 0</script><p>最终化简得到：</p>
<script type="math/tex; mode=display">
p'^{T}[T \times R]p = 0</script><blockquote>
<p>p’：1x3，右边图像像素坐标系下的p’的齐次坐标</p>
<p>p： 3x1，左边图像像素坐标系下的p 的齐次坐标</p>
</blockquote>
</li>
</ol>
<ol>
<li><p>叉乘变成矩阵乘法</p>
<p>若$\vec{a} =\begin{bmatrix}\ a_1 \ \ a_2 \ \ a_3 \end{bmatrix}$，$\vec{b} =\begin{bmatrix}\ b_1 \ \ b_2 \ \ b_3 \end{bmatrix}$</p>
<p>则$\vec{a} \times \vec{b} = \begin{bmatrix} \ 0 &amp;-a_3  &amp;a_2 \ \ a_3 &amp;0 &amp;-a_1 \ \ -a_2 &amp;a_1 &amp;0\end{bmatrix}\begin{bmatrix} \ b_1 \ \ b_2 \ \ b_3 \end{bmatrix}$</p>
</li>
<li><p>将3中的最终得到的公式，将叉乘变为矩阵运算</p>
<p>记 $E=T\times R$</p>
<script type="math/tex; mode=display">
p'^{T}Ep = 0</script><blockquote>
<p>E 称之为<strong>本质矩阵*</strong></p>
<p>p’：1x3，右边图像像素坐标系下的p’的齐次坐标</p>
<p>p： 3x1，左边图像像素坐标系下的p 的齐次坐标</p>
</blockquote>
<p>此公式反映了左右两个图像上的点之间的对应关系，也就是本质矩阵的内涵</p>
</li>
</ol>
<h3 id="基础矩阵"><a href="#基础矩阵" class="headerlink" title="基础矩阵"></a>基础矩阵</h3><p>基础矩阵是对<strong>一般的透视摄像机</strong>拍摄的两个视点之间图像之间的极几何关系的代数描述</p>
<h3 id="一般的透视摄像机"><a href="#一般的透视摄像机" class="headerlink" title="一般的透视摄像机"></a>一般的透视摄像机</h3><p>实际情况下，摄像机坐标系下的空间点 与 像素坐标系下的平面点 之间的转换：</p>
<script type="math/tex; mode=display">
p=
K
\begin{bmatrix}
\ E & 0 \\
\end{bmatrix}
P
=
\begin{bmatrix}
\ u \\
\ v \\
\ z \\
\end{bmatrix}
=
\begin{bmatrix}
\ \alpha & -\alpha cot\theta & c_x \\
0 & \frac{\beta}{sin\theta} & c_y \\
0 & 0 & 1 \\
\end{bmatrix}
\begin{bmatrix}
1 & 0 & 0 & 0 \\
0 & 1 & 0 & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}
\begin{bmatrix}
\ x \\
\ y \\
\ z \\
\ 1 \\
\end{bmatrix}
\\\\
= 
\begin{bmatrix}
\ \alpha & -\alpha cot\theta & c_x & 0 \\
0 & \frac{\beta}{sin\theta} & c_y & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}
\begin{bmatrix}
\ x \\
\ y \\
\ z \\
\ 1 \\
\end{bmatrix}
=
MP</script><blockquote>
<p>$p$为像素坐标系的二维坐标</p>
<p>$P$为相机坐标系下的空间坐标</p>
</blockquote>
<h3 id="推导基础矩阵"><a href="#推导基础矩阵" class="headerlink" title="推导基础矩阵"></a>推导基础矩阵</h3><p>思路：将其变为规范化摄像机</p>
<script type="math/tex; mode=display">
p= K\begin{bmatrix} \ E & 0 \\ \end{bmatrix}P \\
K^{-1}p = K^{-1}K\begin{bmatrix} \ E & 0 \end{bmatrix} P 
= \begin{bmatrix}
\ 1 & 0 & 0 & 0 \\
0 & 1 & 0 & 0 \\
0 &  0 & 1 & 0 \\
\end{bmatrix}
P</script><p>设 $P_c = K^{-1}p$，则上式可以写为：</p>
<script type="math/tex; mode=display">
P_c = \begin{bmatrix}
\ 1 & 0 & 0 & 0 \\
0 & 1 & 0 & 0 \\
0 &  0 & 1 & 0 \\
\end{bmatrix}
P</script><p>由规范化相机模型可知：</p>
<script type="math/tex; mode=display">
P_c'^{T}EP_c = 0 \\
(K'^{-1}p')^{T}E(K^{-1}p)=0 \\
p'^{T}K'^{-T}EK^{-1}p = 0 \\</script><p>记$F = K’^{-T}EK^{-1}$，上式可以表达为：</p>
<script type="math/tex; mode=display">
p'^{T}Fp = 0</script><p>F即为<strong>基础矩阵</strong></p>
<p>由于$E = T \times R$，所以E与外部参数有关，又因为K是相机内部参数的矩阵，所以，基础矩阵F与内部参数，外部参数都有关；</p>
<h3 id="基础矩阵小结"><a href="#基础矩阵小结" class="headerlink" title="基础矩阵小结"></a>基础矩阵小结</h3><p>基础矩阵F刻画了两幅图像之间的极几何关系，即相同场景下，不同视图之间的对应关系</p>
<h3 id="估计基础矩阵"><a href="#估计基础矩阵" class="headerlink" title="估计基础矩阵"></a>估计基础矩阵</h3><p>已知$p’$与$p$，求解F</p>
<p>通常使用<strong>归一化八点算法</strong>对F进行估计</p>
]]></content>
      <categories>
        <category>充电</category>
      </categories>
      <tags>
        <tag>三维重建</tag>
      </tags>
  </entry>
  <entry>
    <title>C#-文件操作</title>
    <url>/2020/10/27/C-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-文件操作"><a href="#C-文件操作" class="headerlink" title="C#-文件操作"></a>C#-文件操作</h1><h2 id="查看文件属性"><a href="#查看文件属性" class="headerlink" title="查看文件属性"></a>查看文件属性</h2><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ----------------------------文件操作-查看文件或文件夹属性------------------------</span></span><br><span class="line">            FileInfo fileInfo = <span class="keyword">new</span> FileInfo(<span class="string">&quot;TextFile1.txt&quot;</span>);<span class="comment">//相对路径，只找当前程序输出路径内的文件</span></span><br><span class="line">            FileInfo fileInfo = <span class="keyword">new</span> FileInfo(<span class="string">@&quot;F:\VS_Area\sikiLearning\文件操作\bin\Debug\TextFile2.txt&quot;</span>);<span class="comment">//绝对路径</span></span><br><span class="line">            <span class="keyword">if</span> (fileInfo.Exists)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;文件存在&quot;</span>);</span><br><span class="line">                Console.WriteLine(fileInfo.Name);<span class="comment">//文件名称</span></span><br><span class="line">                Console.WriteLine(fileInfo.Directory);<span class="comment">//文件所在路径</span></span><br><span class="line">                Console.WriteLine(fileInfo.Length);<span class="comment">//文件大小，单位字节</span></span><br><span class="line">                Console.WriteLine(fileInfo.IsReadOnly);<span class="comment">//判断是否只读</span></span><br><span class="line">                <span class="comment">//fileInfo.Delete();//删除文件</span></span><br><span class="line">                <span class="comment">//fileInfo.CopyTo(&quot;copy.txt&quot;);//复制文件到当前目录，为copy.txt</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;文件不存在&quot;</span>);</span><br><span class="line">                fileInfo.Create();<span class="comment">//创建文件</span></span><br><span class="line">                fileInfo.MoveTo(<span class="string">&quot;重命名.txt&quot;</span>);<span class="comment">//剪切，相当于重命名操作</span></span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure>
<h2 id="查看文件夹属性"><a href="#查看文件夹属性" class="headerlink" title="查看文件夹属性"></a>查看文件夹属性</h2><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">DirectoryInfo dirInfo = <span class="keyword">new</span> DirectoryInfo(<span class="string">@&quot;F:\VS_Area\sikiLearning\文件操作\bin\Debug&quot;</span>);<span class="comment">//绝对路径</span></span><br><span class="line"><span class="keyword">if</span> (dirInfo.Exists)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(dirInfo.CreationTime);<span class="comment">//获取创建时间</span></span><br><span class="line">    dirInfo.CreateSubdirectory(<span class="string">&quot;soki&quot;</span>);<span class="comment">//创建子目录</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">----------------------------------取得文件内容---------------------------------------------------- -</span><br><span class="line"><span class="built_in">string</span>[] line = File.ReadAllLines(<span class="string">&quot;TextFile1.txt&quot;</span>);<span class="comment">//读取行,文本文件</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> item <span class="keyword">in</span> line)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">byte</span>[] image = File.ReadAllBytes(<span class="string">&quot;1.jpg&quot;</span>);<span class="comment">//对于非文本文件</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> image)</span><br><span class="line">&#123;</span><br><span class="line">    Console.Write(item);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//---------------------------------写文件------------------------------</span></span><br><span class="line">File.WriteAllText(<span class="string">&quot;3.txt&quot;</span>, <span class="string">&quot;kjsafjnksdlajfksdajagsjdalkfjk\nskdjfksjdkafj&quot;</span>);<span class="comment">//写文本文件到相对目录</span></span><br><span class="line">File.WriteAllBytes(<span class="string">&quot;3.jpg&quot;</span>, image);<span class="comment">//写非文本文件到相对目录</span></span><br></pre></td></tr></table></figure>
<h2 id="FileStream，常用于读取二进制文件"><a href="#FileStream，常用于读取二进制文件" class="headerlink" title="FileStream，常用于读取二进制文件"></a>FileStream，常用于读取二进制文件</h2><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">FileStream stream = <span class="keyword">new</span> FileStream(<span class="string">&quot;1.txt&quot;</span>,FileMode.Open);</span><br><span class="line">            <span class="comment">//读取或者写入数据</span></span><br><span class="line">            <span class="built_in">byte</span>[] data = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="comment">//从0-最后读取数据，放到data里面，返回值为读取内容的大小</span></span><br><span class="line">            <span class="built_in">int</span> length = stream.Read(data, <span class="number">0</span>, data.Length);</span><br><span class="line">            <span class="comment">//输出读取的内容</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(data[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//另一种读取内容的方式</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//read命令，读取指针不断偏移</span></span><br><span class="line">                <span class="built_in">int</span> length = stream.Read(data, <span class="number">0</span>, data.Length);</span><br><span class="line">                <span class="keyword">if</span> (length == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;所有内容已经读取完成&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i&lt;length; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(data[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//最后关闭流</span></span><br><span class="line">            stream.Close();</span><br></pre></td></tr></table></figure>
<h2 id="streamreader-streamwriter-常用于写入读取文本文件"><a href="#streamreader-streamwriter-常用于写入读取文本文件" class="headerlink" title="streamreader,streamwriter,常用于写入读取文本文件"></a>streamreader,streamwriter,常用于写入读取文本文件</h2><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建文本文件读取流</span></span><br><span class="line">            StreamReader sr = <span class="keyword">new</span> StreamReader(<span class="string">&quot;textfile1.txt&quot;</span>);</span><br><span class="line">            <span class="comment">//读取方法1，一行一行的读取</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> text = sr.ReadLine();</span><br><span class="line">                <span class="keyword">if</span> (text == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(text);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//读取方法2；一次性全部读取完毕</span></span><br><span class="line">            <span class="built_in">string</span> allText = sr.ReadToEnd();</span><br><span class="line">            <span class="comment">//读取方法3,一次一个字母</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//读取的ASCLL码值，强制转换为char</span></span><br><span class="line">                <span class="built_in">char</span> letter = (<span class="built_in">char</span>)sr.Read();</span><br><span class="line">                <span class="keyword">if</span> (letter == <span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(letter);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            sr.Close();</span><br></pre></td></tr></table></figure>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">StreamWriter sw = <span class="keyword">new</span> StreamWriter(<span class="string">&quot;c.txt&quot;</span>);<span class="comment">//如果文件已经存在，则会被覆盖</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> message = Console.ReadLine();</span><br><span class="line">                <span class="keyword">if</span> (message == <span class="string">&quot;q&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//会一直写，紧接着文档末尾接着写，不换行</span></span><br><span class="line">                    sw.Write(message);</span><br><span class="line">                    <span class="comment">//带换行的，同样接着末尾接着写</span></span><br><span class="line">                    sw.WriteLine(message);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            sw.Close();</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>充电</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>SLAM-Eigen几何模块</title>
    <url>/2020/10/26/SLAM-Eigen%E5%87%A0%E4%BD%95%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SLAM-Eigen几何模块"><a href="#SLAM-Eigen几何模块" class="headerlink" title="SLAM-Eigen几何模块"></a>SLAM-Eigen几何模块</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;eigen3/Eigen/Core&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;eigen3/Eigen/Geometry&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Eigen;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 本程序演示Eigen几何模块的使用方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//生成单位矩阵</span></span><br><span class="line">    Matrix3d rotation_matrix = Matrix3d::Identity();</span><br><span class="line">    <span class="comment">//旋转向量使用AngleAxisd，底层非Matrix，但是可以当做矩阵使用运算(重载运算符）</span></span><br><span class="line">    <span class="comment">//定义旋转向量，沿z轴旋转45度</span></span><br><span class="line">    <span class="function">AngleAxisd <span class="title">rotation_vector</span><span class="params">(M_PI/<span class="number">4</span>,Vector3d(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>))</span></span>;</span><br><span class="line">    <span class="comment">//格式控制，输出时保持小数点后3位</span></span><br><span class="line">    <span class="built_in">cout</span>.precision(<span class="number">3</span>);</span><br><span class="line">    <span class="comment">//将旋转向量转化为矩阵形式，AngleAxisd转为matrix</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;rotation matrix =\n&quot;</span>&lt;&lt;rotation_vector.matrix()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//将旋转向量转化为旋转矩阵，AngleAxisd转Matrix</span></span><br><span class="line">    rotation_matrix = rotation_vector.toRotationMatrix();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用AngleAxisd进行坐标转换</span></span><br><span class="line">    <span class="function">Vector3d <span class="title">v</span><span class="params">(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    Vector3d v_rotated = rotation_vector * v;<span class="comment">//方式1:使用旋转向量</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;(1,0,0) after rotation (by angle axis) = &quot;</span>&lt;&lt;v_rotated.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    v_rotated = rotation_matrix*v;<span class="comment">//方式2:使用旋转矩阵</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;(1,0,0) after rotation (by matrix) = &quot;</span>&lt;&lt;v_rotated.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//欧拉角:旋转矩阵-&gt;欧拉角</span></span><br><span class="line">    Vector3d euler_angles = rotation_matrix.eulerAngles(<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>);<span class="comment">//ZYX顺序</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;yaw pitch roll = &quot;</span>&lt;&lt;euler_angles.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//欧式变换矩阵</span></span><br><span class="line">    Isometry3d T =Isometry3d::Identity();</span><br><span class="line">    T.rotate(rotation_vector);<span class="comment">//设置变换矩阵的旋转向量</span></span><br><span class="line">    T.pretranslate(Vector3d(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>));<span class="comment">//将平移向量设置为（1,3,4）</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Transform matrix = \n&quot;</span>&lt;&lt;T.matrix()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//使用欧式变换矩阵对v进行变换</span></span><br><span class="line">    Vector3d v_transformed = T*v;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;v transformed = &quot;</span>&lt;&lt;v_transformed.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//AngleAxisd转换为四元数</span></span><br><span class="line">    Quaterniond q = Quaterniond(rotation_vector);</span><br><span class="line">    <span class="comment">//输出四元数系数，(x,y,z,w)；w是实部，xyz是虚部</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;quaternion from rotation vector = &quot;</span>&lt;&lt;q.coeffs().transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//matrix转换为四元数</span></span><br><span class="line">    q = Quaterniond(rotation_matrix);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;quaternion form roation matrix = &quot;</span>&lt;&lt;q.coeffs().transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用四元数旋转向量</span></span><br><span class="line">    v_rotated = q*v;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;(1,0,0) after rotation = &quot;</span>&lt;&lt;v_rotated.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;should be equal to &quot;</span>&lt;&lt;(q*Quaterniond(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>)*q.inverse()).coeffs().transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>充电</category>
      </categories>
      <tags>
        <tag>Eigen</tag>
        <tag>SLAM</tag>
      </tags>
  </entry>
  <entry>
    <title>Hololens与六维力传感器通信</title>
    <url>/2020/10/25/Hololens%E4%B8%8E%E5%85%AD%E7%BB%B4%E5%8A%9B%E4%BC%A0%E6%84%9F%E5%99%A8%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="fa02fad267cd3e7bad91aa18aaa8773a14dc3d8a2be6349332335f61ef181c27"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>udp</tag>
        <tag>Hololens2</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title>UDP-客户端无限次发送消息</title>
    <url>/2020/10/23/UDP-%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%97%A0%E9%99%90%E6%AC%A1%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d6d48f2081b5a8a80dc74e072e23ce61db5786c35ea33d8212804f5d1bf1b445"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>socket</tag>
        <tag>udp</tag>
      </tags>
  </entry>
  <entry>
    <title>UDP-简单通信</title>
    <url>/2020/10/23/UDP-%E7%AE%80%E5%8D%95%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="13e120ef428cf1f303222166424378eaa77941ed573c4a2333c4afc4bc062232"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>socket</tag>
        <tag>udp</tag>
      </tags>
  </entry>
  <entry>
    <title>SLAM-Eigen初识</title>
    <url>/2020/10/22/SLAM-Eigen%E5%88%9D%E5%A7%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SLAM-Eigen初识"><a href="#SLAM-Eigen初识" class="headerlink" title="SLAM-Eigen初识"></a>SLAM-Eigen初识</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;eigen3/Eigen/Core&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;eigen3/Eigen/Dense&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Eigen;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MATRIX_SIZE 50</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************</span></span><br><span class="line"><span class="comment"> * 本程序演示了Eigen基本类型的使用</span></span><br><span class="line"><span class="comment"> * ************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Matrix&lt;<span class="keyword">float</span>,<span class="number">2</span>,<span class="number">3</span>&gt; matrix_23;</span><br><span class="line">    <span class="comment">//3维向量,3x1,与Matrix&lt;double,3,1&gt; v_3d相同</span></span><br><span class="line">    Vector3d v_3d;</span><br><span class="line">    Matrix&lt;<span class="keyword">float</span>,<span class="number">3</span>,<span class="number">1</span>&gt; vd_3d;</span><br><span class="line">    <span class="comment">//Matrix3d实质上是Matrix&lt;double,3,3&gt;</span></span><br><span class="line">    Matrix3d matrix_33 = Matrix3d::Zero();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//不确定矩阵大小，使用动态大小的矩阵</span></span><br><span class="line">    Matrix&lt;<span class="keyword">double</span>,Dynamic,Dynamic&gt; matrix_dynamic;</span><br><span class="line">    <span class="comment">//同上，动态大小</span></span><br><span class="line">    MatrixXd matrix_x;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输入数据（初始化）</span></span><br><span class="line">    matrix_23&lt;&lt;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>;</span><br><span class="line">    <span class="comment">//输出各个元素</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;matrix 2x3 from 1 to 6:\n&quot;</span>&lt;&lt;matrix_23&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用（）访问矩阵中的元素</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;print matrix 2x3&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span> ;i &lt;<span class="number">2</span> ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j =<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;matrix_23(i,j)&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    v_3d&lt;&lt;<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>;</span><br><span class="line">    vd_3d&lt;&lt;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>;</span><br><span class="line">    <span class="comment">//matrix_23里的元素是float类型</span></span><br><span class="line">    <span class="comment">//vd_3d里的元素是float类型</span></span><br><span class="line">    <span class="comment">//v_3d里的元素是double类型</span></span><br><span class="line">    Matrix&lt;<span class="keyword">double</span>,<span class="number">2</span>,<span class="number">1</span>&gt; result = matrix_23.cast&lt;<span class="keyword">double</span>&gt;()*v_3d;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;[1,2,3;4,5,6]*[3,2,1]=&quot;</span>&lt;&lt;result.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    Matrix&lt;<span class="keyword">float</span>,<span class="number">2</span>,<span class="number">1</span>&gt; result2 = matrix_23 * vd_3d;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;[1,2,3;4,5,6]*[4,5,6]&quot;</span>&lt;&lt;result2.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//矩阵运算</span></span><br><span class="line">    <span class="comment">//随机数矩阵</span></span><br><span class="line">    matrix_33 = Matrix3d::Random();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;random matrix ：\n&quot;</span>&lt;&lt;matrix_33&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;transpose:\n&quot;</span>&lt;&lt;matrix_33.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;the sum of all members:\n&quot;</span>&lt;&lt;matrix_33.sum()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;trace:\n&quot;</span>&lt;&lt;matrix_33.trace()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;数乘:\n&quot;</span>&lt;&lt;matrix_33*<span class="number">10</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;inverse:\n&quot;</span>&lt;&lt;matrix_33.inverse()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;det:\n&quot;</span>&lt;&lt;matrix_33.determinant()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//特征值</span></span><br><span class="line">    <span class="comment">//实对称矩阵可以保证对角化成功</span></span><br><span class="line">    <span class="function">SelfAdjointEigenSolver&lt;Matrix3d&gt; <span class="title">eigen_solver</span><span class="params">(matrix_33.transpose() * matrix_33)</span></span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Eigen values = \n&quot;</span>&lt;&lt;eigen_solver.eigenvalues()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Eigen vectors = \n&quot;</span>&lt;&lt;eigen_solver.eigenvectors()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//解方程</span></span><br><span class="line">    <span class="comment">//求解matrix_NN * x = v_Nd 方程</span></span><br><span class="line">    <span class="comment">//N的大小在前边的宏里定义，由随机数生成</span></span><br><span class="line">    <span class="comment">//直接求逆是最直接的，但是运算量大</span></span><br><span class="line">    Matrix&lt;<span class="keyword">double</span>,MATRIX_SIZE,MATRIX_SIZE&gt; matrix_NN = MatrixXd::Random(MATRIX_SIZE,MATRIX_SIZE);</span><br><span class="line">    matrix_NN = matrix_NN * matrix_NN.transpose();<span class="comment">//保证半正定</span></span><br><span class="line">    Matrix&lt;<span class="keyword">double</span>,MATRIX_SIZE,<span class="number">1</span>&gt; v_Nd = MatrixXd::Random(MATRIX_SIZE,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">clock_t</span> time_stt = clock();<span class="comment">//计时</span></span><br><span class="line">    <span class="comment">//直接求逆</span></span><br><span class="line">    Matrix&lt;<span class="keyword">double</span>,MATRIX_SIZE,<span class="number">1</span>&gt; x = matrix_NN.inverse() * v_Nd;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;time of normal inverse is &quot;</span>&lt;&lt;<span class="number">1000</span> * (clock()-time_stt)/(<span class="keyword">double</span>)CLOCKS_PER_SEC&lt;&lt;<span class="string">&quot;ms&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;x = &quot;</span>&lt;&lt;x.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通常用矩阵分解来求解，例如QR分解，速度会快很多</span></span><br><span class="line">    time_stt = clock();</span><br><span class="line">    x = matrix_NN.colPivHouseholderQr().solve(v_Nd);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;time of Qr decomposition is &quot;</span>&lt;&lt;<span class="number">1000</span>*(clock()-time_stt)/(<span class="keyword">double</span>)CLOCKS_PER_SEC&lt;&lt;<span class="string">&quot;ms&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;x = &quot;</span>&lt;&lt;x.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对于正定矩阵，还可以用cholesky分解来分解方程</span></span><br><span class="line">    time_stt = clock();</span><br><span class="line">    x = matrix_NN.ldlt().solve(v_Nd);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;time of ldlt decompisition is &quot;</span>&lt;&lt;<span class="number">1000</span> * (clock()-time_stt)/(<span class="keyword">double</span>)CLOCKS_PER_SEC&lt;&lt;<span class="string">&quot;ms&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;x = &quot;</span>&lt;&lt;x.transpose()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>充电</category>
      </categories>
      <tags>
        <tag>Eigen</tag>
        <tag>SLAM</tag>
      </tags>
  </entry>
  <entry>
    <title>融合NKeyBoard与滚动条的适用于Hololens2的通用Socket通信服务端与客户端</title>
    <url>/2020/10/21/%E8%9E%8D%E5%90%88NKeyBoard%E4%B8%8E%E6%BB%9A%E5%8A%A8%E6%9D%A1%E7%9A%84%E9%80%82%E7%94%A8%E4%BA%8EHololens2%E7%9A%84Socket%E9%80%9A%E4%BF%A1%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="189f0c0f5bc3f303d51fd5c3c8591126e6c2f8692df1120e0727ecc874f6cf47"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>Socket</tag>
        <tag>Hololens2</tag>
        <tag>NKeyBoard</tag>
      </tags>
  </entry>
  <entry>
    <title>Hololens-Socket服务端</title>
    <url>/2020/10/18/Hololens-Socket%E6%9C%8D%E5%8A%A1%E7%AB%AF/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="878c989fbb0a3292cbbd55dd61d7601da575b339a8cefddff734d88452a2241b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>Socket</tag>
        <tag>Hololens</tag>
      </tags>
  </entry>
  <entry>
    <title>C#编程-线程01</title>
    <url>/2020/10/14/C-%E7%BA%BF%E7%A8%8B01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-编程-线程01"><a href="#C-编程-线程01" class="headerlink" title="C#编程-线程01"></a>C#编程-线程01</h1><h2 id="线程的概念"><a href="#线程的概念" class="headerlink" title="线程的概念"></a>线程的概念</h2><p>计算机的核心是CPU，它承担了所有的计算任务。它就像一座工厂，时刻在运行。</p>
<p>如果工厂的电力有限一次只能供给一个车间使用。也就是说一个车间开工的时候，其他车间就必须停工。背后的含义就是。单个CPU一次只能运行一个任务。（多核CPU可以运行多个任务）</p>
<p>进程就好比工厂的车间，它代表CPU所能处理的单个任务。任一时刻，CPU总是运行一个进程，其他进程处于非运行状态。</p>
<p>一个车间里，可以有很多工人，他们协同完成一个任务。</p>
<p>线程就好比车间里的工人。一个进程可以包括多个线程。</p>
<p>车间的控件是工人们共享的，比如许多房间是每个工人都可以进出的。这象征一个进程的内存空间是共享的，每个线程都可以使用这些共享空间。</p>
<p>进程就好比工厂的车间，它代表CPU所能处理的单个任务。任一时刻，CPU总是运行一个进程，其他进程处于非运行状态。</p>
<p>一个防止他人进入的简单方法，就是门口加一把锁（厕所）。先到的人锁上门，后到的人看到上锁，就在门口排队，等锁打开再进去。这就叫<strong>“互斥锁”（Mutual exclusion，缩写 Mutex），防止多个线程同时读写某一块内存区域</strong>。</p>
<p>还有些房间，可以同时容纳n个人，比如厨房。也就是说，如果人数大于n，多出来的人只能在外面等着。这好比某些内存区域，只能供给固定数目的线程使用。</p>
<p>1这时的解决方法，就是在门口挂n把钥匙。进去的人就取一把钥匙，出来时再把钥匙挂回原处。后到的人发现钥匙架空了，就知道必须在门口排队等着了。这种做法叫做<strong>“信号量”（Semaphore），用来保证多个线程不会互相冲突</strong>。</p>
<p>不难看出，mutex是semaphore的一种特殊情况（n=1时）。也就是说，完全可以用后者替代前者。但是，因为mutex较为简单，且效率高，所以在必须保证资源独占的情况下，还是采用这种设计。</p>
<p>操作系统的设计，因此可以归结为三点：</p>
<ul>
<li>以多进程形式，允许多个任务同时运行；</li>
<li>以多线程形式，允许单个任务分成不同的部分运行；</li>
<li>提供协调机制，一方面防止进程之间和线程之间产生冲突，另一方面允许进程之间和线程之间共享资源。</li>
</ul>
<h2 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h2><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line">namespace 线程委托</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span>(<span class="params"><span class="built_in">int</span> c,<span class="built_in">string</span> name</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;线程1&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">test2</span>(<span class="params"><span class="built_in">float</span> c,<span class="built_in">string</span> name</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;线程2&quot;</span>);</span><br><span class="line">            <span class="comment">//线程休眠100ms</span></span><br><span class="line">            Thread.Sleep(<span class="number">100</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">test3</span>(<span class="params"><span class="built_in">float</span> c, <span class="built_in">string</span> name</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;线程3&quot;</span>);</span><br><span class="line">            <span class="comment">//线程休眠100ms</span></span><br><span class="line">            Thread.Sleep(<span class="number">100</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">onCallBack</span>(<span class="params">IAsyncResult acr</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;线程3已经结束，我是回调函数&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//acr.AsyncState 是 c.BeginInvoke 的倒数第一个参数，c</span></span><br><span class="line">            Func&lt;<span class="built_in">float</span>, <span class="built_in">string</span>, <span class="built_in">int</span>&gt; c = acr.AsyncState <span class="keyword">as</span> Func&lt;<span class="built_in">float</span>, <span class="built_in">string</span>, <span class="built_in">int</span>&gt;;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> d = c.EndInvoke(acr);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;线程3结束后的输出结果为：&quot;</span>+d);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 一般为比较耗时的任务，开启线程</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;args&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//主线程</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;主线程&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> 定义线程方式01</span></span><br><span class="line">            <span class="comment">//1. 使用委托定义线程</span></span><br><span class="line">            <span class="comment">//无返回值，有形参</span></span><br><span class="line">            Action&lt;<span class="built_in">int</span>, <span class="built_in">string</span>&gt; a = test;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//开启线程1</span></span><br><span class="line">            a.BeginInvoke(<span class="number">120</span>, <span class="string">&quot;&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> 定义线程方式02</span></span><br><span class="line">            <span class="comment">//1. 使用委托定义线程</span></span><br><span class="line">            <span class="comment">//有返回值，有形参</span></span><br><span class="line">            Func&lt;<span class="built_in">float</span>, <span class="built_in">string</span>, <span class="built_in">int</span>&gt; b = test2;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//开启线程2</span></span><br><span class="line">            <span class="comment">//取得当前线程的状态,ar</span></span><br><span class="line">            IAsyncResult ar = b.BeginInvoke(<span class="number">1.0f</span>, <span class="string">&quot;&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//检测线程是否运行完毕</span></span><br><span class="line">            <span class="comment">//method01(b,ar);</span></span><br><span class="line">            <span class="comment">//method02(b, ar);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//异步回调</span></span><br><span class="line">            Func&lt;<span class="built_in">float</span>, <span class="built_in">string</span>, <span class="built_in">int</span>&gt; c = test3;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//倒数第二个参数，委托类型，表示回调函数，线程结束后，调用此方法</span></span><br><span class="line">            <span class="comment">//倒数第一个参数，用来给回调函数传递数据，可以是任意类型，现在把c传出去</span></span><br><span class="line">            IAsyncResult acr = c.BeginInvoke(<span class="number">1.0f</span>, <span class="string">&quot;&quot;</span>,onCallBack, c);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method02</span>(<span class="params">Func&lt;<span class="built_in">float</span>, <span class="built_in">string</span>, <span class="built_in">int</span>&gt; b, IAsyncResult ar</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">bool</span> isEnd = ar.AsyncWaitHandle.WaitOne(<span class="number">1000</span>);<span class="comment">//等待&lt;=1000ms，若线程结束，返回true，若线程未结束，返回false</span></span><br><span class="line">            <span class="keyword">if</span> (isEnd)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;线程2已经完成&quot;</span>);</span><br><span class="line">                <span class="built_in">int</span> res2 = b.EndInvoke(ar);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;线程2完成结果：&quot;</span> + res2);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;线程2未在规定时间内完成&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method01</span>(<span class="params">Func&lt;<span class="built_in">float</span>, <span class="built_in">string</span>, <span class="built_in">int</span>&gt; b, IAsyncResult ar</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//判断线程是否执行完成</span></span><br><span class="line">            <span class="keyword">while</span> (!ar.IsCompleted)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">                <span class="comment">//主线程休眠10ms，控制检测频率</span></span><br><span class="line">                Thread.Sleep(<span class="number">10</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;线程2已经完成&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//取得线程执行完毕后的返回值</span></span><br><span class="line">            <span class="built_in">int</span> res = b.EndInvoke(ar);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;线程2完成结果为：&quot;</span> + res);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//检测线程结束</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>充电</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>线程</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity-Socket通信_3</title>
    <url>/2020/10/12/Unity-Socket%E9%80%9A%E4%BF%A1-3/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="c0a053614a4139a52c0297f6bc47f728ef45885394996596dc7925541d1d17c8"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>实践</category>
      </categories>
  </entry>
  <entry>
    <title>Idea</title>
    <url>/2020/10/12/Idea/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="a6ae19096d92740120998060ec27748d6c4238840c00cc08f88060f8f91b6208">2d058b368786be6af85840de2b870e3a8e0d65d8d41b6c86d759371d32e3a62070c385ccac7a240fd061091b8fe71e980e811cb1e708fdb93e3ccce966db820994fac143d30ef08f0bb32aefbcf9ce377fd35803db98d1f84d47abafbb37a946bcbd9e073adf671a49f558c26597568fb402655cfd17597fd2d21ce0a8ff2bf376281a38f8c37cedd4ee2a7052d77cbdd516edc319531206f9f47a4c8e8c538930acb62dc24948a116f879d96b4426b3742a607a4debc70e6347a4eccd1c6c5dba08707dacf3ccdc5b80d96d71e334b965f992381544dd629fa5e288574c7dab69d7a2ba1c814e9bd753834ebed0de1ca46358a3460f1972d5cea8f199fd1451490cf3cddc8596212df407fda1b3c977421f29a9ab6112dba62c6d9d56acf590f3bb4e74ecf9430eca8e924f5e683c352b438d86679240ede3452122e0dcb23c2d0c9fbb4db116ef46747eb1a96c069c3ce8fbd29a7c0da3b16ceccbef8987e6f17cc949fbe5d0cc47c92f65b1b861187c17b51515e5f20e4ce9d981a94840115de0fe533bc28a16d4eec7a47fdfe346ef5bfa97130803ba820897661cb8e9abfaf03970be45d19bf6f101e7ffb2e5463ba9743e5d7d62133f651bedb34e2e8e03c4dc425e0f3d30b9f6b2105f3c081e0addb4e45617800fc5fc8e9b346a638266cce7b0a2eb394c7841624d0a05e30d985e76a9c5248010b8ee0ea763abeb7d0ba1e0c709327ae32c7e3e656343d34f6fe9070a8e2ed4e1fbfd0ab0c8fba2285e186cd98b89e745c92ace9dfb31e5ec88ddb5f69a45968f76a18bc1079908742a8137e0c85072301e47ab0f702d408b1e2afedbbfd2915a0b600b2f728365933006252dc2b2611e2422ea0ccfb1ed8bfda89e6d1be4c231982c981f6bad5a77aa30b99dc6091024565e956c393d558c394d11a84f8d180ae010152308bf48a0cdc8cc41f01b155f5e3b3560a96c4cf4</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>C++核心编程</title>
    <url>/2020/10/09/C-%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-核心编程"><a href="#C-核心编程" class="headerlink" title="C++核心编程"></a>C++核心编程</h1><p>本阶段主要针对C++==面向对象==编程技术做详细讲解，探讨C++中的核心和精髓。</p>
<h2 id="1-内存分区模型"><a href="#1-内存分区模型" class="headerlink" title="1 内存分区模型"></a>1 内存分区模型</h2><p>C++程序在执行时，将内存大方向划分为<strong>4个区域</strong></p>
<ul>
<li>代码区：存放函数体的二进制代码，由操作系统进行管理的</li>
<li>全局区：存放全局变量和静态变量以及常量</li>
<li>栈区：由编译器自动分配释放, 存放函数的参数值,局部变量等</li>
<li>堆区：由程序员分配和释放,若程序员不释放,程序结束时由操作系统回收</li>
</ul>
<p><strong>内存四区意义：</strong></p>
<p>不同区域存放的数据，赋予不同的生命周期, 给我们更大的灵活编程</p>
<h3 id="1-1-程序运行前"><a href="#1-1-程序运行前" class="headerlink" title="1.1 程序运行前"></a>1.1 程序运行前</h3><p>​    在程序编译后，生成了exe可执行程序，<strong>未执行该程序前</strong>分为两个区域</p>
<p>​    <strong>代码区：</strong></p>
<p>​        存放 CPU 执行的机器指令</p>
<p>​        代码区是<strong>共享</strong>的，共享的目的是对于频繁被执行的程序，只需要在内存中有一份代码即可</p>
<p>​        代码区是<strong>只读</strong>的，使其只读的原因是防止程序意外地修改了它的指令</p>
<p>​    <strong>全局区：</strong></p>
<p>​        全局变量和静态变量存放在此.</p>
<p>​        全局区还包含了常量区, 字符串常量和其他常量也存放在此.</p>
<p>​        ==该区域的数据在程序结束后由操作系统释放==.</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//全局变量</span></span><br><span class="line"><span class="keyword">int</span> g_a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> g_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局常量</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> c_g_a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> c_g_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//局部变量</span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//打印地址</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;局部变量a地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;局部变量b地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;全局变量g_a地址为： &quot;</span> &lt;&lt;  (<span class="keyword">int</span>)&amp;g_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;全局变量g_b地址为： &quot;</span> &lt;&lt;  (<span class="keyword">int</span>)&amp;g_b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//静态变量</span></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> s_a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> s_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;静态变量s_a地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;s_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;静态变量s_b地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;s_b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;字符串常量地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;<span class="string">&quot;hello world&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;字符串常量地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;<span class="string">&quot;hello world1&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;全局常量c_g_a地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;c_g_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;全局常量c_g_b地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;c_g_b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span> c_l_a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span> c_l_b = <span class="number">10</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;局部常量c_l_a地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;c_l_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;局部常量c_l_b地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;c_l_b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印结果：</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201009204015.png" alt=""></p>
<p>总结：</p>
<ul>
<li>C++中在程序运行前分为全局区和代码区</li>
<li>代码区特点是共享和只读</li>
<li>全局区中存放全局变量、静态变量、常量</li>
<li>常量区中存放 const修饰的全局常量  和 字符串常量</li>
</ul>
<h3 id="1-2-程序运行后"><a href="#1-2-程序运行后" class="headerlink" title="1.2 程序运行后"></a>1.2 程序运行后</h3><p>​    <strong>栈区：</strong></p>
<p>​        由编译器自动分配释放, 存放函数的参数值,局部变量等</p>
<p>​        注意事项：不要返回局部变量的地址，栈区开辟的数据由编译器自动释放</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">return</span> &amp;a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> *p = func();</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>​    <strong>堆区：</strong></p>
<p>​        由程序员分配释放,若程序员不释放,程序结束时由操作系统回收</p>
<p>​        在C++中主要利用new在堆区开辟内存</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span>* a = <span class="keyword">new</span> <span class="keyword">int</span>(<span class="number">10</span>);</span><br><span class="line">	<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> *p = func();</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>总结：</strong></p>
<p>堆区数据由程序员管理开辟和释放</p>
<p>堆区数据利用new关键字进行开辟内存</p>
<h3 id="1-3-new操作符"><a href="#1-3-new操作符" class="headerlink" title="1.3 new操作符"></a>1.3 new操作符</h3><p>​    C++中利用==new==操作符在堆区开辟数据</p>
<p>​    堆区开辟的数据，由程序员手动开辟，手动释放，释放利用操作符 ==delete==</p>
<p>​    语法：<code>new 数据类型</code></p>
<p>​    利用new创建的数据，会返回该数据对应的类型的指针</p>
<p><strong>示例1： 基本语法</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span>* a = <span class="keyword">new</span> <span class="keyword">int</span>(<span class="number">10</span>);</span><br><span class="line">	<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> *p = func();</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//利用delete释放堆区数据</span></span><br><span class="line">	<span class="keyword">delete</span> p;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//cout &lt;&lt; *p &lt;&lt; endl; //报错，释放的空间不可访问</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>示例2：开辟数组</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//堆区开辟数组</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span>* arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		arr[i] = i + <span class="number">100</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//释放数组 delete 后加 []</span></span><br><span class="line">	<span class="keyword">delete</span>[] arr;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="2-引用"><a href="#2-引用" class="headerlink" title="2 引用"></a>2 引用</h2><h3 id="2-1-引用的基本使用"><a href="#2-1-引用的基本使用" class="headerlink" title="2.1 引用的基本使用"></a>2.1 引用的基本使用</h3><p><strong>作用： </strong>给变量起别名</p>
<p><strong>语法：</strong> <code>数据类型 &amp;别名 = 原名</code></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> &amp;b = a;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	b = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-2-引用注意事项"><a href="#2-2-引用注意事项" class="headerlink" title="2.2 引用注意事项"></a>2.2 引用注意事项</h3><ul>
<li>引用必须初始化</li>
<li>引用在初始化后，不可以改变</li>
</ul>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">	<span class="comment">//int &amp;c; //错误，引用必须初始化</span></span><br><span class="line">	<span class="keyword">int</span> &amp;c = a; <span class="comment">//一旦初始化后，就不可以更改</span></span><br><span class="line">	c = b; <span class="comment">//这是赋值操作，不是更改引用</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-3-引用做函数参数"><a href="#2-3-引用做函数参数" class="headerlink" title="2.3 引用做函数参数"></a>2.3 引用做函数参数</h3><p><strong>作用：</strong>函数传参时，可以利用引用的技术让形参修饰实参</p>
<p><strong>优点：</strong>可以简化指针修改实参</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1. 值传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mySwap01</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> temp = a;</span><br><span class="line">	a = b;</span><br><span class="line">	b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 地址传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mySwap02</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span>* b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> temp = *a;</span><br><span class="line">	*a = *b;</span><br><span class="line">	*b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3. 引用传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mySwap03</span><span class="params">(<span class="keyword">int</span>&amp; a, <span class="keyword">int</span>&amp; b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> temp = a;</span><br><span class="line">	a = b;</span><br><span class="line">	b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">	mySwap01(a, b);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot; b:&quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	mySwap02(&amp;a, &amp;b);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot; b:&quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	mySwap03(a, b);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot; b:&quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：通过引用参数产生的效果同按地址传递是一样的。引用的语法更清楚简单</p>
</blockquote>
<h3 id="2-4-引用做函数返回值"><a href="#2-4-引用做函数返回值" class="headerlink" title="2.4 引用做函数返回值"></a>2.4 引用做函数返回值</h3><p>作用：引用是可以作为函数的返回值存在的</p>
<p>注意：<strong>不要返回局部变量引用</strong></p>
<p>用法：函数调用作为左值</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//返回局部变量引用</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>&amp; <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>; <span class="comment">//局部变量</span></span><br><span class="line">	<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回静态变量引用</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>&amp; <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> a = <span class="number">20</span>;</span><br><span class="line">	<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//不能返回局部变量的引用</span></span><br><span class="line">	<span class="keyword">int</span>&amp; ref = test01();</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ref = &quot;</span> &lt;&lt; ref &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ref = &quot;</span> &lt;&lt; ref &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//如果函数做左值，那么必须返回引用</span></span><br><span class="line">	<span class="keyword">int</span>&amp; ref2 = test02();</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ref2 = &quot;</span> &lt;&lt; ref2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ref2 = &quot;</span> &lt;&lt; ref2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	test02() = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ref2 = &quot;</span> &lt;&lt; ref2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ref2 = &quot;</span> &lt;&lt; ref2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>​    </p>
<h3 id="2-5-引用的本质"><a href="#2-5-引用的本质" class="headerlink" title="2.5 引用的本质"></a>2.5 引用的本质</h3><p>本质：<strong>引用的本质在c++内部实现是一个指针常量.</strong></p>
<p>讲解示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//发现是引用，转换为 int* const ref = &amp;a;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span>&amp; ref)</span></span>&#123;</span><br><span class="line">	ref = <span class="number">100</span>; <span class="comment">// ref是引用，转换为*ref = 100</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//自动转换为 int* const ref = &amp;a; 指针常量是指针指向不可改，也说明为什么引用不可更改</span></span><br><span class="line">	<span class="keyword">int</span>&amp; ref = a; </span><br><span class="line">	ref = <span class="number">20</span>; <span class="comment">//内部发现ref是引用，自动帮我们转换为: *ref = 20;</span></span><br><span class="line">    </span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ref:&quot;</span> &lt;&lt; ref &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">	func(a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结论：C++推荐用引用技术，因为语法方便，引用本质是指针常量，但是所有的指针操作编译器都帮我们做了</p>
<h3 id="2-6-常量引用"><a href="#2-6-常量引用" class="headerlink" title="2.6 常量引用"></a>2.6 常量引用</h3><p><strong>作用：</strong>常量引用主要用来修饰形参，防止误操作</p>
<p>在函数形参列表中，可以加==const修饰形参==，防止形参改变实参</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引用使用的场景，通常用来修饰形参</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showValue</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span>&amp; v)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//v += 10;</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; v &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//int&amp; ref = 10;  引用本身需要一个合法的内存空间，因此这行错误</span></span><br><span class="line">	<span class="comment">//加入const就可以了，编译器优化代码，int temp = 10; const int&amp; ref = temp;</span></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span>&amp; ref = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//ref = 100;  //加入const后不可以修改变量</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; ref &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//函数中利用常量引用防止误操作修改实参</span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	showValue(a);</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-函数提高"><a href="#3-函数提高" class="headerlink" title="3 函数提高"></a>3 函数提高</h2><h3 id="3-1-函数默认参数"><a href="#3-1-函数默认参数" class="headerlink" title="3.1 函数默认参数"></a>3.1 函数默认参数</h3><p>在C++中，函数的形参列表中的形参是可以有默认值的。</p>
<p>语法：<code>返回值类型  函数名 （参数= 默认值）&#123;&#125;</code></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b = <span class="number">10</span>, <span class="keyword">int</span> c = <span class="number">10</span>)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1. 如果某个位置参数有默认值，那么从这个位置往后，从左向右，必须都要有默认值</span></span><br><span class="line"><span class="comment">//2. 如果函数声明有默认值，函数实现的时候就不能有默认参数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func2</span><span class="params">(<span class="keyword">int</span> a = <span class="number">10</span>, <span class="keyword">int</span> b = <span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func2</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ret = &quot;</span> &lt;&lt; func(<span class="number">20</span>, <span class="number">20</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ret = &quot;</span> &lt;&lt; func(<span class="number">100</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-2-函数占位参数"><a href="#3-2-函数占位参数" class="headerlink" title="3.2 函数占位参数"></a>3.2 函数占位参数</h3><p>C++中函数的形参列表里可以有占位参数，用来做占位，调用函数时必须填补该位置</p>
<p><strong>语法：</strong> <code>返回值类型 函数名 (数据类型)&#123;&#125;</code></p>
<p>在现阶段函数的占位参数存在意义不大，但是后面的课程中会用到该技术</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数占位参数 ，占位参数也可以有默认参数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span>)</span> </span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;this is func&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	func(<span class="number">10</span>,<span class="number">10</span>); <span class="comment">//占位参数必须填补</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-3-函数重载"><a href="#3-3-函数重载" class="headerlink" title="3.3 函数重载"></a>3.3 函数重载</h3><h4 id="3-3-1-函数重载概述"><a href="#3-3-1-函数重载概述" class="headerlink" title="3.3.1 函数重载概述"></a>3.3.1 函数重载概述</h4><p><strong>作用：</strong>函数名可以相同，提高复用性</p>
<p><strong>函数重载满足条件：</strong></p>
<ul>
<li>同一个作用域下</li>
<li>函数名称相同</li>
<li>函数参数<strong>类型不同</strong>  或者 <strong>个数不同</strong> 或者 <strong>顺序不同</strong></li>
</ul>
<p><strong>注意:</strong>  函数的返回值不可以作为函数重载的条件</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数重载需要函数都在同一个作用域下</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func 的调用！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func (int a) 的调用！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">double</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func (double a)的调用！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> a ,<span class="keyword">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func (int a ,double b) 的调用！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">double</span> a ,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func (double a ,int b)的调用！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数返回值不可以作为函数重载条件</span></span><br><span class="line"><span class="comment">//int func(double a, int b)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//	cout &lt;&lt; &quot;func (double a ,int b)的调用！&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	func();</span><br><span class="line">	func(<span class="number">10</span>);</span><br><span class="line">	func(<span class="number">3.14</span>);</span><br><span class="line">	func(<span class="number">10</span>,<span class="number">3.14</span>);</span><br><span class="line">	func(<span class="number">3.14</span> , <span class="number">10</span>);</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3-3-2-函数重载注意事项"><a href="#3-3-2-函数重载注意事项" class="headerlink" title="3.3.2 函数重载注意事项"></a>3.3.2 函数重载注意事项</h4><ul>
<li>引用作为重载条件</li>
<li>函数重载碰到函数默认参数</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数重载注意事项</span></span><br><span class="line"><span class="comment">//1、引用作为重载条件</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func (int &amp;a) 调用 &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func (const int &amp;a) 调用 &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、函数重载碰到函数默认参数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b = <span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func2(int a, int b = 10) 调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func2(int a) 调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	func(a); <span class="comment">//调用无const</span></span><br><span class="line">	func(<span class="number">10</span>);<span class="comment">//调用有const</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//func2(10); //碰到默认参数产生歧义，需要避免</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-类和对象"><a href="#4-类和对象" class="headerlink" title="4 类和对象"></a><strong>4</strong> 类和对象</h2><p>C++面向对象的三大特性为：==封装、继承、多态==</p>
<p>C++认为==万事万物都皆为对象==，对象上有其属性和行为</p>
<p><strong>例如：</strong></p>
<p>​    人可以作为对象，属性有姓名、年龄、身高、体重…，行为有走、跑、跳、吃饭、唱歌…</p>
<p>​    车也可以作为对象，属性有轮胎、方向盘、车灯…,行为有载人、放音乐、放空调…</p>
<p>​    具有相同性质的==对象==，我们可以抽象称为==类==，人属于人类，车属于车类</p>
<h3 id="4-1-封装"><a href="#4-1-封装" class="headerlink" title="4.1 封装"></a>4.1 封装</h3><h4 id="4-1-1-封装的意义"><a href="#4-1-1-封装的意义" class="headerlink" title="4.1.1  封装的意义"></a>4.1.1  封装的意义</h4><p>封装是C++面向对象三大特性之一</p>
<p>封装的意义：</p>
<ul>
<li>将属性和行为作为一个整体，表现生活中的事物</li>
<li>将属性和行为加以权限控制</li>
</ul>
<p><strong>封装意义一：</strong></p>
<p>​    在设计类的时候，属性和行为写在一起，表现事物</p>
<p><strong>语法：</strong> <code>class 类名&#123;   访问权限： 属性  / 行为  &#125;;</code></p>
<p><strong>示例1：</strong>设计一个圆类，求圆的周长</p>
<p><strong>示例代码：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//圆周率</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、封装的意义</span></span><br><span class="line"><span class="comment">//将属性和行为作为一个整体，用来表现生活中的事物</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//封装一个圆类，求圆的周长</span></span><br><span class="line"><span class="comment">//class代表设计一个类，后面跟着的是类名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:  <span class="comment">//访问权限  公共的权限</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//属性</span></span><br><span class="line">	<span class="keyword">int</span> m_r;<span class="comment">//半径</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//行为</span></span><br><span class="line">	<span class="comment">//获取到圆的周长</span></span><br><span class="line">	<span class="function"><span class="keyword">double</span> <span class="title">calculateZC</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">//2 * pi  * r</span></span><br><span class="line">		<span class="comment">//获取圆的周长</span></span><br><span class="line">		<span class="keyword">return</span>  <span class="number">2</span> * PI * m_r;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//通过圆类，创建圆的对象</span></span><br><span class="line">	<span class="comment">// c1就是一个具体的圆</span></span><br><span class="line">	Circle c1;</span><br><span class="line">	c1.m_r = <span class="number">10</span>; <span class="comment">//给圆对象的半径 进行赋值操作</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//2 * pi * 10 = = 62.8</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;圆的周长为： &quot;</span> &lt;&lt; c1.calculateZC() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>示例2：</strong>设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号</p>
<p><strong>示例2代码：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="built_in">string</span> name)</span> </span>&#123;</span><br><span class="line">		m_name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setID</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">		m_id = id;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">showStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; m_name &lt;&lt; <span class="string">&quot; ID:&quot;</span> &lt;&lt; m_id &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">string</span> m_name;</span><br><span class="line">	<span class="keyword">int</span> m_id;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	Student stu;</span><br><span class="line">	stu.setName(<span class="string">&quot;德玛西亚&quot;</span>);</span><br><span class="line">	stu.setID(<span class="number">250</span>);</span><br><span class="line">	stu.showStudent();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>封装意义二：</strong></p>
<p>类在设计时，可以把属性和行为放在不同的权限下，加以控制</p>
<p>访问权限有三种：</p>
<ol>
<li>public        公共权限  </li>
<li>protected 保护权限</li>
<li>private      私有权限</li>
</ol>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//三种权限</span></span><br><span class="line"><span class="comment">//公共权限  public     类内可以访问  类外可以访问</span></span><br><span class="line"><span class="comment">//保护权限  protected  类内可以访问  类外不可以访问</span></span><br><span class="line"><span class="comment">//私有权限  private    类内可以访问  类外不可以访问</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">//姓名  公共权限</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">string</span> m_Name;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//汽车  保护权限</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="built_in">string</span> m_Car;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//银行卡密码  私有权限</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_Password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		m_Name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">		m_Car = <span class="string">&quot;拖拉机&quot;</span>;</span><br><span class="line">		m_Password = <span class="number">123456</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	Person p;</span><br><span class="line">	p.m_Name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line">	<span class="comment">//p.m_Car = &quot;奔驰&quot;;  //保护权限类外访问不到</span></span><br><span class="line">	<span class="comment">//p.m_Password = 123; //私有权限类外访问不到</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-1-2-struct和class区别"><a href="#4-1-2-struct和class区别" class="headerlink" title="4.1.2 struct和class区别"></a>4.1.2 struct和class区别</h4><p>在C++中 struct和class唯一的<strong>区别</strong>就在于 <strong>默认的访问权限不同</strong></p>
<p>区别：</p>
<ul>
<li>struct 默认权限为公共</li>
<li>class   默认权限为私有</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span>  m_A; <span class="comment">//默认是私有权限</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">C2</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> m_A;  <span class="comment">//默认是公共权限</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	C1 c1;</span><br><span class="line">	c1.m_A = <span class="number">10</span>; <span class="comment">//错误，访问权限是私有</span></span><br><span class="line"></span><br><span class="line">	C2 c2;</span><br><span class="line">	c2.m_A = <span class="number">10</span>; <span class="comment">//正确，访问权限是公共</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-1-3-成员属性设置为私有"><a href="#4-1-3-成员属性设置为私有" class="headerlink" title="4.1.3 成员属性设置为私有"></a>4.1.3 成员属性设置为私有</h4><p><strong>优点1：</strong>将所有成员属性设置为私有，可以自己控制读写权限</p>
<p><strong>优点2：</strong>对于写权限，我们可以检测数据的有效性</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	<span class="comment">//姓名设置可读可写</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="built_in">string</span> name)</span> </span>&#123;</span><br><span class="line">		m_Name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="built_in">string</span> <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> m_Name;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//获取年龄 </span></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> m_Age;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//设置年龄</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (age &lt; <span class="number">0</span> || age &gt; <span class="number">150</span>) &#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;你个老妖精!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		m_Age = age;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//情人设置为只写</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setLover</span><span class="params">(<span class="built_in">string</span> lover)</span> </span>&#123;</span><br><span class="line">		m_Lover = lover;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="built_in">string</span> m_Name; <span class="comment">//可读可写  姓名</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> m_Age; <span class="comment">//只读  年龄</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">string</span> m_Lover; <span class="comment">//只写  情人</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	Person p;</span><br><span class="line">	<span class="comment">//姓名设置</span></span><br><span class="line">	p.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名： &quot;</span> &lt;&lt; p.getName() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//年龄设置</span></span><br><span class="line">	p.setAge(<span class="number">50</span>);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;年龄： &quot;</span> &lt;&lt; p.getAge() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//情人设置</span></span><br><span class="line">	p.setLover(<span class="string">&quot;苍井&quot;</span>);</span><br><span class="line">	<span class="comment">//cout &lt;&lt; &quot;情人： &quot; &lt;&lt; p.m_Lover &lt;&lt; endl;  //只写属性，不可以读取</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>练习案例1：设计立方体类</strong></p>
<p>设计立方体类(Cube)</p>
<p>求出立方体的面积和体积</p>
<p>分别用全局函数和成员函数判断两个立方体是否相等。</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201009204054.png" alt=""></p>
<p><strong>练习案例2：点和圆的关系</strong></p>
<p>设计一个圆形类（Circle），和一个点类（Point），计算点和圆的关系。</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201009204105.png" alt=""></p>
<h3 id="4-2-对象的初始化和清理"><a href="#4-2-对象的初始化和清理" class="headerlink" title="4.2 对象的初始化和清理"></a>4.2 对象的初始化和清理</h3><ul>
<li>生活中我们买的电子产品都基本会有出厂设置，在某一天我们不用时候也会删除一些自己信息数据保证安全</li>
<li>C++中的面向对象来源于生活，每个对象也都会有初始设置以及 对象销毁前的清理数据的设置。</li>
</ul>
<h4 id="4-2-1-构造函数和析构函数"><a href="#4-2-1-构造函数和析构函数" class="headerlink" title="4.2.1 构造函数和析构函数"></a>4.2.1 构造函数和析构函数</h4><p>对象的<strong>初始化和清理</strong>也是两个非常重要的安全问题</p>
<p>​    一个对象或者变量没有初始状态，对其使用后果是未知</p>
<p>​    同样的使用完一个对象或变量，没有及时清理，也会造成一定的安全问题</p>
<p>c++利用了<strong>构造函数</strong>和<strong>析构函数</strong>解决上述问题，这两个函数将会被编译器自动调用，完成对象初始化和清理工作。</p>
<p>对象的初始化和清理工作是编译器强制要我们做的事情，因此如果<strong>我们不提供构造和析构，编译器会提供</strong></p>
<p><strong>编译器提供的构造函数和析构函数是空实现。</strong></p>
<ul>
<li>构造函数：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无须手动调用。</li>
<li>析构函数：主要作用在于对象<strong>销毁前</strong>系统自动调用，执行一些清理工作。</li>
</ul>
<p><strong>构造函数语法：</strong><code>类名()&#123;&#125;</code></p>
<ol>
<li>构造函数，没有返回值也不写void</li>
<li>函数名称与类名相同</li>
<li>构造函数可以有参数，因此可以发生重载</li>
<li>程序在调用对象时候会自动调用构造，无须手动调用,而且只会调用一次</li>
</ol>
<p><strong>析构函数语法：</strong> <code>~类名()&#123;&#125;</code></p>
<ol>
<li>析构函数，没有返回值也不写void</li>
<li>函数名称与类名相同,在名称前加上符号  ~</li>
<li>析构函数不可以有参数，因此不可以发生重载</li>
<li>程序在对象销毁前会自动调用析构，无须手动调用,而且只会调用一次</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//构造函数</span></span><br><span class="line">	Person()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person的构造函数调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//析构函数</span></span><br><span class="line">	~Person()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person的析构函数调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Person p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-2-2-构造函数的分类及调用"><a href="#4-2-2-构造函数的分类及调用" class="headerlink" title="4.2.2 构造函数的分类及调用"></a>4.2.2 构造函数的分类及调用</h4><p>两种分类方式：</p>
<p>​    按参数分为： 有参构造和无参构造</p>
<p>​    按类型分为： 普通构造和拷贝构造</p>
<p>三种调用方式：</p>
<p>​    括号法</p>
<p>​    显示法</p>
<p>​    隐式转换法</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、构造函数分类</span></span><br><span class="line"><span class="comment">// 按照参数分类分为 有参和无参构造   无参又称为默认构造函数</span></span><br><span class="line"><span class="comment">// 按照类型分类分为 普通构造和拷贝构造</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//无参（默认）构造函数</span></span><br><span class="line">	Person() &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;无参构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//有参构造函数</span></span><br><span class="line">	Person(<span class="keyword">int</span> a) &#123;</span><br><span class="line">		age = a;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;有参构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//拷贝构造函数</span></span><br><span class="line">	Person(<span class="keyword">const</span> Person&amp; p) &#123;</span><br><span class="line">		age = p.age;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;拷贝构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//析构函数</span></span><br><span class="line">	~Person() &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;析构函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、构造函数的调用</span></span><br><span class="line"><span class="comment">//调用无参构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	Person p; <span class="comment">//调用无参构造函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用有参的构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//2.1  括号法，常用</span></span><br><span class="line">	<span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">	<span class="comment">//注意1：调用无参构造函数不能加括号，如果加了编译器认为这是一个函数声明</span></span><br><span class="line">	<span class="comment">//Person p2();</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//2.2 显式法</span></span><br><span class="line">	Person p2 = Person(<span class="number">10</span>); </span><br><span class="line">	Person p3 = Person(p2);</span><br><span class="line">	<span class="comment">//Person(10)单独写就是匿名对象  当前行结束之后，马上析构</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//2.3 隐式转换法</span></span><br><span class="line">	Person p4 = <span class="number">10</span>; <span class="comment">// Person p4 = Person(10); </span></span><br><span class="line">	Person p5 = p4; <span class="comment">// Person p5 = Person(p4); </span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//注意2：不能利用 拷贝构造函数 初始化匿名对象 编译器认为是对象声明</span></span><br><span class="line">	<span class="comment">//Person p5(p4);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line">	<span class="comment">//test02();</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-2-3-拷贝构造函数调用时机"><a href="#4-2-3-拷贝构造函数调用时机" class="headerlink" title="4.2.3 拷贝构造函数调用时机"></a>4.2.3 拷贝构造函数调用时机</h4><p>C++中拷贝构造函数调用时机通常有三种情况</p>
<ul>
<li>使用一个已经创建完毕的对象来初始化一个新对象</li>
<li>值传递的方式给函数参数传值</li>
<li>以值方式返回局部对象</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Person() &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;无参构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		mAge = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Person(<span class="keyword">int</span> age) &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;有参构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		mAge = age;</span><br><span class="line">	&#125;</span><br><span class="line">	Person(<span class="keyword">const</span> Person&amp; p) &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;拷贝构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		mAge = p.mAge;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//析构函数在释放内存之前调用</span></span><br><span class="line">	~Person() &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;析构函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> mAge;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1. 使用一个已经创建完毕的对象来初始化一个新对象</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function">Person <span class="title">man</span><span class="params">(<span class="number">100</span>)</span></span>; <span class="comment">//p对象已经创建完毕</span></span><br><span class="line">	<span class="function">Person <span class="title">newman</span><span class="params">(man)</span></span>; <span class="comment">//调用拷贝构造函数</span></span><br><span class="line">	Person newman2 = man; <span class="comment">//拷贝构造</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//Person newman3;</span></span><br><span class="line">	<span class="comment">//newman3 = man; //不是调用拷贝构造函数，赋值操作</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 值传递的方式给函数参数传值</span></span><br><span class="line"><span class="comment">//相当于Person p1 = p;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doWork</span><span class="params">(Person p1)</span> </span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	Person p; <span class="comment">//无参构造函数</span></span><br><span class="line">	doWork(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3. 以值方式返回局部对象</span></span><br><span class="line"><span class="function">Person <span class="title">doWork2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Person p1;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (<span class="keyword">int</span> *)&amp;p1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> p1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Person p = doWork2();</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (<span class="keyword">int</span> *)&amp;p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//test01();</span></span><br><span class="line">	<span class="comment">//test02();</span></span><br><span class="line">	test03();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-2-4-构造函数调用规则"><a href="#4-2-4-构造函数调用规则" class="headerlink" title="4.2.4 构造函数调用规则"></a>4.2.4 构造函数调用规则</h4><p>默认情况下，c++编译器至少给一个类添加3个函数</p>
<p>1．默认构造函数(无参，函数体为空)</p>
<p>2．默认析构函数(无参，函数体为空)</p>
<p>3．默认拷贝构造函数，对属性进行值拷贝</p>
<p>构造函数调用规则如下：</p>
<ul>
<li>如果用户定义有参构造函数，c++不在提供默认无参构造，但是会提供默认拷贝构造</li>
</ul>
<ul>
<li>如果用户定义拷贝构造函数，c++不会再提供其他构造函数</li>
</ul>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//无参（默认）构造函数</span></span><br><span class="line">	Person() &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;无参构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//有参构造函数</span></span><br><span class="line">	Person(<span class="keyword">int</span> a) &#123;</span><br><span class="line">		age = a;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;有参构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//拷贝构造函数</span></span><br><span class="line">	Person(<span class="keyword">const</span> Person&amp; p) &#123;</span><br><span class="line">		age = p.age;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;拷贝构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//析构函数</span></span><br><span class="line">	~Person() &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;析构函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>)</span></span>;</span><br><span class="line">	<span class="comment">//如果不写拷贝构造，编译器会自动添加拷贝构造，并且做浅拷贝操作</span></span><br><span class="line">	<span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p2的年龄为： &quot;</span> &lt;&lt; p2.age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//如果用户提供有参构造，编译器不会提供默认构造，会提供拷贝构造</span></span><br><span class="line">	Person p1; <span class="comment">//此时如果用户自己没有提供默认构造，会出错</span></span><br><span class="line">	<span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>; <span class="comment">//用户提供的有参</span></span><br><span class="line">	<span class="function">Person <span class="title">p3</span><span class="params">(p2)</span></span>; <span class="comment">//此时如果用户没有提供拷贝构造，编译器会提供</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//如果用户提供拷贝构造，编译器不会提供其他构造函数</span></span><br><span class="line">	Person p4; <span class="comment">//此时如果用户自己没有提供默认构造，会出错</span></span><br><span class="line">	<span class="function">Person <span class="title">p5</span><span class="params">(<span class="number">10</span>)</span></span>; <span class="comment">//此时如果用户自己没有提供有参，会出错</span></span><br><span class="line">	<span class="function">Person <span class="title">p6</span><span class="params">(p5)</span></span>; <span class="comment">//用户自己提供拷贝构造</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-2-5-深拷贝与浅拷贝"><a href="#4-2-5-深拷贝与浅拷贝" class="headerlink" title="4.2.5 深拷贝与浅拷贝"></a>4.2.5 深拷贝与浅拷贝</h4><p>深浅拷贝是面试经典问题，也是常见的一个坑</p>
<p>浅拷贝：简单的赋值拷贝操作</p>
<p>深拷贝：在堆区重新申请空间，进行拷贝操作</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//无参（默认）构造函数</span></span><br><span class="line">	Person() &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;无参构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//有参构造函数</span></span><br><span class="line">	Person(<span class="keyword">int</span> age ,<span class="keyword">int</span> height) &#123;</span><br><span class="line">		</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;有参构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">		m_age = age;</span><br><span class="line">		m_height = <span class="keyword">new</span> <span class="keyword">int</span>(height);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//拷贝构造函数  </span></span><br><span class="line">	Person(<span class="keyword">const</span> Person&amp; p) &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;拷贝构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="comment">//如果不利用深拷贝在堆区创建新内存，会导致浅拷贝带来的重复释放堆区问题</span></span><br><span class="line">		m_age = p.m_age;</span><br><span class="line">		m_height = <span class="keyword">new</span> <span class="keyword">int</span>(*p.m_height);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//析构函数</span></span><br><span class="line">	~Person() &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;析构函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">if</span> (m_height != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">delete</span> m_height;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_age;</span><br><span class="line">	<span class="keyword">int</span>* m_height;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>, <span class="number">180</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p1的年龄： &quot;</span> &lt;&lt; p1.m_age &lt;&lt; <span class="string">&quot; 身高： &quot;</span> &lt;&lt; *p1.m_height &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p2的年龄： &quot;</span> &lt;&lt; p2.m_age &lt;&lt; <span class="string">&quot; 身高： &quot;</span> &lt;&lt; *p2.m_height &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：如果属性有在堆区开辟的，一定要自己提供拷贝构造函数，防止浅拷贝带来的问题</p>
</blockquote>
<h4 id="4-2-6-初始化列表"><a href="#4-2-6-初始化列表" class="headerlink" title="4.2.6 初始化列表"></a>4.2.6 初始化列表</h4><p><strong>作用：</strong></p>
<p>C++提供了初始化列表语法，用来初始化属性</p>
<p><strong>语法：</strong><code>构造函数()：属性1(值1),属性2（值2）... &#123;&#125;</code></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	<span class="comment">////传统方式初始化</span></span><br><span class="line">	<span class="comment">//Person(int a, int b, int c) &#123;</span></span><br><span class="line">	<span class="comment">//	m_A = a;</span></span><br><span class="line">	<span class="comment">//	m_B = b;</span></span><br><span class="line">	<span class="comment">//	m_C = c;</span></span><br><span class="line">	<span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//初始化列表方式初始化</span></span><br><span class="line">	Person(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c) :m_A(a), m_B(b), m_C(c) &#123;&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">PrintPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;mA:&quot;</span> &lt;&lt; m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;mB:&quot;</span> &lt;&lt; m_B &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;mC:&quot;</span> &lt;&lt; m_C &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line">	<span class="keyword">int</span> m_B;</span><br><span class="line">	<span class="keyword">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function">Person <span class="title">p</span><span class="params">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span></span>;</span><br><span class="line">	p.PrintPerson();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-2-7-类对象作为类成员"><a href="#4-2-7-类对象作为类成员" class="headerlink" title="4.2.7 类对象作为类成员"></a>4.2.7 类对象作为类成员</h4><p>C++类中的成员可以是另一个类的对象，我们称该成员为 对象成员</p>
<p>例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span>&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    A a；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>B类中有对象A作为成员，A为对象成员</p>
<p>那么当创建B对象时，A与B的构造和析构的顺序是谁先谁后？</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Phone(<span class="built_in">string</span> name)</span><br><span class="line">	&#123;</span><br><span class="line">		m_PhoneName = name;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Phone构造&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	~Phone()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Phone析构&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">string</span> m_PhoneName;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	<span class="comment">//初始化列表可以告诉编译器调用哪一个构造函数</span></span><br><span class="line">	Person(<span class="built_in">string</span> name, <span class="built_in">string</span> pName) :m_Name(name), m_Phone(pName)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person构造&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	~Person()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person析构&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">playGame</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; m_Name &lt;&lt; <span class="string">&quot; 使用&quot;</span> &lt;&lt; m_Phone.m_PhoneName &lt;&lt; <span class="string">&quot; 牌手机! &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">string</span> m_Name;</span><br><span class="line">	Phone m_Phone;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//当类中成员是其他类对象时，我们称该成员为 对象成员</span></span><br><span class="line">	<span class="comment">//构造的顺序是 ：先调用对象成员的构造，再调用本类构造</span></span><br><span class="line">	<span class="comment">//析构顺序与构造相反</span></span><br><span class="line">	<span class="function">Person <span class="title">p</span><span class="params">(<span class="string">&quot;张三&quot;</span> , <span class="string">&quot;苹果X&quot;</span>)</span></span>;</span><br><span class="line">	p.playGame();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-2-8-静态成员"><a href="#4-2-8-静态成员" class="headerlink" title="4.2.8 静态成员"></a>4.2.8 静态成员</h4><p>静态成员就是在成员变量和成员函数前加上关键字static，称为静态成员</p>
<p>静态成员分为：</p>
<ul>
<li>静态成员变量<ul>
<li>所有对象共享同一份数据</li>
<li>在编译阶段分配内存</li>
<li>类内声明，类外初始化</li>
</ul>
</li>
<li>静态成员函数<ul>
<li>所有对象共享同一个函数</li>
<li>静态成员函数只能访问静态成员变量</li>
</ul>
</li>
</ul>
<p><strong>示例1 ：</strong>静态成员变量</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> m_A; <span class="comment">//静态成员变量</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//静态成员变量特点：</span></span><br><span class="line">	<span class="comment">//1 在编译阶段分配内存</span></span><br><span class="line">	<span class="comment">//2 类内声明，类外初始化</span></span><br><span class="line">	<span class="comment">//3 所有对象共享同一份数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> m_B; <span class="comment">//静态成员变量也是有访问权限的</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> Person::m_A = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> Person::m_B = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//静态成员变量两种访问方式</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//1、通过对象</span></span><br><span class="line">	Person p1;</span><br><span class="line">	p1.m_A = <span class="number">100</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p1.m_A = &quot;</span> &lt;&lt; p1.m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	Person p2;</span><br><span class="line">	p2.m_A = <span class="number">200</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p1.m_A = &quot;</span> &lt;&lt; p1.m_A &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//共享同一份数据</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p2.m_A = &quot;</span> &lt;&lt; p2.m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//2、通过类名</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;m_A = &quot;</span> &lt;&lt; Person::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//cout &lt;&lt; &quot;m_B = &quot; &lt;&lt; Person::m_B &lt;&lt; endl; //私有权限访问不到</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>示例2：</strong>静态成员函数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	<span class="comment">//静态成员函数特点：</span></span><br><span class="line">	<span class="comment">//1 程序共享一个函数</span></span><br><span class="line">	<span class="comment">//2 静态成员函数只能访问静态成员变量</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		m_A = <span class="number">100</span>;</span><br><span class="line">		<span class="comment">//m_B = 100; //错误，不可以访问非静态成员变量</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> m_A; <span class="comment">//静态成员变量</span></span><br><span class="line">	<span class="keyword">int</span> m_B; <span class="comment">// </span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">	<span class="comment">//静态成员函数也是有访问权限的</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func2调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> Person::m_A = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//静态成员变量两种访问方式</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//1、通过对象</span></span><br><span class="line">	Person p1;</span><br><span class="line">	p1.func();</span><br><span class="line"></span><br><span class="line">	<span class="comment">//2、通过类名</span></span><br><span class="line">	Person::func();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//Person::func2(); //私有权限访问不到</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-3-C-对象模型和this指针"><a href="#4-3-C-对象模型和this指针" class="headerlink" title="4.3 C++对象模型和this指针"></a>4.3 C++对象模型和this指针</h3><h4 id="4-3-1-成员变量和成员函数分开存储"><a href="#4-3-1-成员变量和成员函数分开存储" class="headerlink" title="4.3.1 成员变量和成员函数分开存储"></a>4.3.1 成员变量和成员函数分开存储</h4><p>在C++中，类内的成员变量和成员函数分开存储</p>
<p>只有非静态成员变量才属于类的对象上</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Person() &#123;</span><br><span class="line">		mA = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//非静态成员变量占对象空间</span></span><br><span class="line">	<span class="keyword">int</span> mA;</span><br><span class="line">	<span class="comment">//静态成员变量不占对象空间</span></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> mB; </span><br><span class="line">	<span class="comment">//函数也不占对象空间，所有函数共享一个函数实例</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;mA:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;mA &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//静态成员函数也不占对象空间</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sfunc</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(Person) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-3-2-this指针概念"><a href="#4-3-2-this指针概念" class="headerlink" title="4.3.2 this指针概念"></a>4.3.2 this指针概念</h4><p>通过4.3.1我们知道在C++中成员变量和成员函数是分开存储的</p>
<p>每一个非静态成员函数只会诞生一份函数实例，也就是说多个同类型的对象会共用一块代码</p>
<p>那么问题是：这一块代码是如何区分那个对象调用自己的呢？</p>
<p>c++通过提供特殊的对象指针，this指针，解决上述问题。<strong>this指针指向被调用的成员函数所属的对象</strong></p>
<p>this指针是隐含每一个非静态成员函数内的一种指针</p>
<p>this指针不需要定义，直接使用即可</p>
<p>this指针的用途：</p>
<ul>
<li>当形参和成员变量同名时，可用this指针来区分</li>
<li>在类的非静态成员函数中返回对象本身，可使用return *this</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	Person(<span class="keyword">int</span> age)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//1、当形参和成员变量同名时，可用this指针来区分</span></span><br><span class="line">		<span class="keyword">this</span>-&gt;age = age;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function">Person&amp; <span class="title">PersonAddPerson</span><span class="params">(Person p)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;age += p.age;</span><br><span class="line">		<span class="comment">//返回对象本身</span></span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p1.age = &quot;</span> &lt;&lt; p1.age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">	p2.PersonAddPerson(p1).PersonAddPerson(p1).PersonAddPerson(p1);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p2.age = &quot;</span> &lt;&lt; p2.age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-3-3-空指针访问成员函数"><a href="#4-3-3-空指针访问成员函数" class="headerlink" title="4.3.3 空指针访问成员函数"></a>4.3.3 空指针访问成员函数</h4><p>C++中空指针也是可以调用成员函数的，但是也要注意有没有用到this指针</p>
<p>如果用到this指针，需要加以判断保证代码的健壮性</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//空指针访问成员函数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ShowClassName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我是Person类!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ShowPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span> == <span class="literal">NULL</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; mAge &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> mAge;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Person * p = <span class="literal">NULL</span>;</span><br><span class="line">	p-&gt;ShowClassName(); <span class="comment">//空指针，可以调用成员函数</span></span><br><span class="line">	p-&gt;ShowPerson();  <span class="comment">//但是如果成员函数中用到了this指针，就不可以了</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-3-4-const修饰成员函数"><a href="#4-3-4-const修饰成员函数" class="headerlink" title="4.3.4 const修饰成员函数"></a>4.3.4 const修饰成员函数</h4><p><strong>常函数：</strong></p>
<ul>
<li>成员函数后加const后我们称为这个函数为<strong>常函数</strong></li>
<li>常函数内不可以修改成员属性</li>
<li>成员属性声明时加关键字mutable后，在常函数中依然可以修改</li>
</ul>
<p><strong>常对象：</strong></p>
<ul>
<li>声明对象前加const称该对象为常对象</li>
<li>常对象只能调用常函数</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Person() &#123;</span><br><span class="line">		m_A = <span class="number">0</span>;</span><br><span class="line">		m_B = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//this指针的本质是一个指针常量，指针的指向不可修改</span></span><br><span class="line">	<span class="comment">//如果想让指针指向的值也不可以修改，需要声明常函数</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ShowPerson</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;</span><br><span class="line">		<span class="comment">//const Type* const pointer;</span></span><br><span class="line">		<span class="comment">//this = NULL; //不能修改指针的指向 Person* const this;</span></span><br><span class="line">		<span class="comment">//this-&gt;mA = 100; //但是this指针指向的对象的数据是可以修改的</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">//const修饰成员函数，表示指针指向的内存空间的数据不能修改，除了mutable修饰的变量</span></span><br><span class="line">		<span class="keyword">this</span>-&gt;m_B = <span class="number">100</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">MyFunc</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;</span><br><span class="line">		<span class="comment">//mA = 10000;</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line">	<span class="keyword">mutable</span> <span class="keyword">int</span> m_B; <span class="comment">//可修改 可变的</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰对象  常对象</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">const</span> Person person; <span class="comment">//常量对象  </span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; person.m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="comment">//person.mA = 100; //常对象不能修改成员变量的值,但是可以访问</span></span><br><span class="line">	person.m_B = <span class="number">100</span>; <span class="comment">//但是常对象可以修改mutable修饰成员变量</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//常对象访问成员函数</span></span><br><span class="line">	person.MyFunc(); <span class="comment">//常对象不能调用const的函数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-4-友元"><a href="#4-4-友元" class="headerlink" title="4.4 友元"></a>4.4 友元</h3><p>生活中你的家有客厅(Public)，有你的卧室(Private)</p>
<p>客厅所有来的客人都可以进去，但是你的卧室是私有的，也就是说只有你能进去</p>
<p>但是呢，你也可以允许你的好闺蜜好基友进去。</p>
<p>在程序里，有些私有属性 也想让类外特殊的一些函数或者类进行访问，就需要用到友元的技术</p>
<p>友元的目的就是让一个函数或者类 访问另一个类中私有成员</p>
<p>友元的关键字为  ==friend==</p>
<p>友元的三种实现</p>
<ul>
<li>全局函数做友元</li>
<li>类做友元</li>
<li>成员函数做友元</li>
</ul>
<h4 id="4-4-1-全局函数做友元"><a href="#4-4-1-全局函数做友元" class="headerlink" title="4.4.1 全局函数做友元"></a>4.4.1 全局函数做友元</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">//告诉编译器 goodGay全局函数 是 Building类的好朋友，可以访问类中的私有内容</span></span><br><span class="line">	<span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">goodGay</span><span class="params">(Building * building)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	Building()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">		<span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">string</span> m_SittingRoom; <span class="comment">//客厅</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="built_in">string</span> m_BedRoom; <span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">goodGay</span><span class="params">(Building * building)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问： &quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问： &quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Building b;</span><br><span class="line">	goodGay(&amp;b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-4-2-类做友元"><a href="#4-4-2-类做友元" class="headerlink" title="4.4.2 类做友元"></a>4.4.2 类做友元</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">goodGay</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	goodGay();</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	Building *building;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">//告诉编译器 goodGay类是Building类的好朋友，可以访问到Building类中私有内容</span></span><br><span class="line">	<span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">goodGay</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Building();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">string</span> m_SittingRoom; <span class="comment">//客厅</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="built_in">string</span> m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Building::Building()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">	<span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">goodGay::goodGay()</span><br><span class="line">&#123;</span><br><span class="line">	building = <span class="keyword">new</span> Building;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">goodGay::visit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	goodGay gg;</span><br><span class="line">	gg.visit();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-4-3-成员函数做友元"><a href="#4-4-3-成员函数做友元" class="headerlink" title="4.4.3 成员函数做友元"></a>4.4.3 成员函数做友元</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">goodGay</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	goodGay();</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">()</span></span>; <span class="comment">//只让visit函数作为Building的好朋友，可以发访问Building中私有内容</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">visit2</span><span class="params">()</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	Building *building;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">//告诉编译器  goodGay类中的visit成员函数 是Building好朋友，可以访问私有内容</span></span><br><span class="line">	<span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">goodGay::visit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Building();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">string</span> m_SittingRoom; <span class="comment">//客厅</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="built_in">string</span> m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Building::Building()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">	<span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">goodGay::goodGay()</span><br><span class="line">&#123;</span><br><span class="line">	building = <span class="keyword">new</span> Building;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">goodGay::visit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">goodGay::visit2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="comment">//cout &lt;&lt; &quot;好基友正在访问&quot; &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	goodGay  gg;</span><br><span class="line">	gg.visit();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-5-运算符重载"><a href="#4-5-运算符重载" class="headerlink" title="4.5 运算符重载"></a>4.5 运算符重载</h3><p>运算符重载概念：对已有的运算符重新进行定义，赋予其另一种功能，以适应不同的数据类型</p>
<h4 id="4-5-1-加号运算符重载"><a href="#4-5-1-加号运算符重载" class="headerlink" title="4.5.1 加号运算符重载"></a>4.5.1 加号运算符重载</h4><p>作用：实现两个自定义数据类型相加的运算</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Person() &#123;&#125;;</span><br><span class="line">	Person(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;m_A = a;</span><br><span class="line">		<span class="keyword">this</span>-&gt;m_B = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//成员函数实现 + 号运算符重载</span></span><br><span class="line">	Person <span class="keyword">operator</span>+(<span class="keyword">const</span> Person&amp; p) &#123;</span><br><span class="line">		Person temp;</span><br><span class="line">		temp.m_A = <span class="keyword">this</span>-&gt;m_A + p.m_A;</span><br><span class="line">		temp.m_B = <span class="keyword">this</span>-&gt;m_B + p.m_B;</span><br><span class="line">		<span class="keyword">return</span> temp;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line">	<span class="keyword">int</span> m_B;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局函数实现 + 号运算符重载</span></span><br><span class="line"><span class="comment">//Person operator+(const Person&amp; p1, const Person&amp; p2) &#123;</span></span><br><span class="line"><span class="comment">//	Person temp(0, 0);</span></span><br><span class="line"><span class="comment">//	temp.m_A = p1.m_A + p2.m_A;</span></span><br><span class="line"><span class="comment">//	temp.m_B = p1.m_B + p2.m_B;</span></span><br><span class="line"><span class="comment">//	return temp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//运算符重载 可以发生函数重载 </span></span><br><span class="line">Person <span class="keyword">operator</span>+(<span class="keyword">const</span> Person&amp; p2, <span class="keyword">int</span> val)  </span><br><span class="line">&#123;</span><br><span class="line">	Person temp;</span><br><span class="line">	temp.m_A = p2.m_A + val;</span><br><span class="line">	temp.m_B = p2.m_B + val;</span><br><span class="line">	<span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line">	<span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">20</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//成员函数方式</span></span><br><span class="line">	Person p3 = p2 + p1;  <span class="comment">//相当于 p2.operaor+(p1)</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;mA:&quot;</span> &lt;&lt; p3.m_A &lt;&lt; <span class="string">&quot; mB:&quot;</span> &lt;&lt; p3.m_B &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	Person p4 = p3 + <span class="number">10</span>; <span class="comment">//相当于 operator+(p3,10)</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;mA:&quot;</span> &lt;&lt; p4.m_A &lt;&lt; <span class="string">&quot; mB:&quot;</span> &lt;&lt; p4.m_B &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结1：对于内置的数据类型的表达式的的运算符是不可能改变的</p>
<p>总结2：不要滥用运算符重载</p>
</blockquote>
<h4 id="4-5-2-左移运算符重载"><a href="#4-5-2-左移运算符重载" class="headerlink" title="4.5.2 左移运算符重载"></a>4.5.2 左移运算符重载</h4><p>作用：可以输出自定义数据类型</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line">	<span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, Person&amp; p);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	Person(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;m_A = a;</span><br><span class="line">		<span class="keyword">this</span>-&gt;m_B = b;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//成员函数 实现不了  p &lt;&lt; cout 不是我们想要的效果</span></span><br><span class="line">	<span class="comment">//void operator&lt;&lt;(Person&amp; p)&#123;</span></span><br><span class="line">	<span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line">	<span class="keyword">int</span> m_B;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局函数实现左移重载</span></span><br><span class="line"><span class="comment">//ostream对象只能有一个</span></span><br><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, Person&amp; p) &#123;</span><br><span class="line">	out &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; p.m_A &lt;&lt; <span class="string">&quot; b:&quot;</span> &lt;&lt; p.m_B;</span><br><span class="line">	<span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; p1 &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//链式编程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：重载左移运算符配合友元可以实现输出自定义数据类型</p>
</blockquote>
<h4 id="4-5-3-递增运算符重载"><a href="#4-5-3-递增运算符重载" class="headerlink" title="4.5.3 递增运算符重载"></a>4.5.3 递增运算符重载</h4><p>作用： 通过重载递增运算符，实现自己的整型数据</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyInteger</span> &#123;</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, MyInteger myint);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	MyInteger() &#123;</span><br><span class="line">		m_Num = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//前置++</span></span><br><span class="line">	MyInteger&amp; <span class="keyword">operator</span>++() &#123;</span><br><span class="line">		<span class="comment">//先++</span></span><br><span class="line">		m_Num++;</span><br><span class="line">		<span class="comment">//再返回</span></span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//后置++</span></span><br><span class="line">	MyInteger <span class="keyword">operator</span>++(<span class="keyword">int</span>) &#123;</span><br><span class="line">		<span class="comment">//先返回</span></span><br><span class="line">		MyInteger temp = *<span class="keyword">this</span>; <span class="comment">//记录当前本身的值，然后让本身的值加1，但是返回的是以前的值，达到先返回后++；</span></span><br><span class="line">		m_Num++;</span><br><span class="line">		<span class="keyword">return</span> temp;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_Num;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, MyInteger myint) &#123;</span><br><span class="line">	out &lt;&lt; myint.m_Num;</span><br><span class="line">	<span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//前置++ 先++ 再返回</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	MyInteger myInt;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; ++myInt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; myInt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置++ 先返回 再++</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	MyInteger myInt;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; myInt++ &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; myInt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line">	<span class="comment">//test02();</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结： 前置递增返回引用，后置递增返回值</p>
</blockquote>
<h4 id="4-5-4-赋值运算符重载"><a href="#4-5-4-赋值运算符重载" class="headerlink" title="4.5.4 赋值运算符重载"></a>4.5.4 赋值运算符重载</h4><p>c++编译器至少给一个类添加4个函数</p>
<ol>
<li>默认构造函数(无参，函数体为空)</li>
<li>默认析构函数(无参，函数体为空)</li>
<li>默认拷贝构造函数，对属性进行值拷贝</li>
<li>赋值运算符 operator=, 对属性进行值拷贝</li>
</ol>
<p>如果类中有属性指向堆区，做赋值操作时也会出现深浅拷贝问题</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	Person(<span class="keyword">int</span> age)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//将年龄数据开辟到堆区</span></span><br><span class="line">		m_Age = <span class="keyword">new</span> <span class="keyword">int</span>(age);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//重载赋值运算符 </span></span><br><span class="line">	Person&amp; <span class="keyword">operator</span>=(Person &amp;p)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (m_Age != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">delete</span> m_Age;</span><br><span class="line">			m_Age = <span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//编译器提供的代码是浅拷贝</span></span><br><span class="line">		<span class="comment">//m_Age = p.m_Age;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">//提供深拷贝 解决浅拷贝的问题</span></span><br><span class="line">		m_Age = <span class="keyword">new</span> <span class="keyword">int</span>(*p.m_Age);</span><br><span class="line"></span><br><span class="line">		<span class="comment">//返回自身</span></span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	~Person()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (m_Age != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">delete</span> m_Age;</span><br><span class="line">			m_Age = <span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//年龄的指针</span></span><br><span class="line">	<span class="keyword">int</span> *m_Age;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">Person <span class="title">p3</span><span class="params">(<span class="number">30</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	p3 = p2 = p1; <span class="comment">//赋值操作</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p1的年龄为：&quot;</span> &lt;&lt; *p1.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p2的年龄为：&quot;</span> &lt;&lt; *p2.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p3的年龄为：&quot;</span> &lt;&lt; *p3.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	<span class="comment">//int a = 10;</span></span><br><span class="line">	<span class="comment">//int b = 20;</span></span><br><span class="line">	<span class="comment">//int c = 30;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//c = b = a;</span></span><br><span class="line">	<span class="comment">//cout &lt;&lt; &quot;a = &quot; &lt;&lt; a &lt;&lt; endl;</span></span><br><span class="line">	<span class="comment">//cout &lt;&lt; &quot;b = &quot; &lt;&lt; b &lt;&lt; endl;</span></span><br><span class="line">	<span class="comment">//cout &lt;&lt; &quot;c = &quot; &lt;&lt; c &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-5-5-关系运算符重载"><a href="#4-5-5-关系运算符重载" class="headerlink" title="4.5.5 关系运算符重载"></a>4.5.5 关系运算符重载</h4><p><strong>作用：</strong>重载关系运算符，可以让两个自定义类型对象进行对比操作</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Person(<span class="built_in">string</span> name, <span class="keyword">int</span> age)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">		<span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span>==(Person &amp; p)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Name == p.m_Name &amp;&amp; <span class="keyword">this</span>-&gt;m_Age == p.m_Age)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span>!=(Person &amp; p)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Name == p.m_Name &amp;&amp; <span class="keyword">this</span>-&gt;m_Age == p.m_Age)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">string</span> m_Name;</span><br><span class="line">	<span class="keyword">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//int a = 0;</span></span><br><span class="line">	<span class="comment">//int b = 0;</span></span><br><span class="line"></span><br><span class="line">	<span class="function">Person <span class="title">a</span><span class="params">(<span class="string">&quot;孙悟空&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line">	<span class="function">Person <span class="title">b</span><span class="params">(<span class="string">&quot;孙悟空&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (a == b)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a和b相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a和b不相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (a != b)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a和b不相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a和b相等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-5-6-函数调用运算符重载"><a href="#4-5-6-函数调用运算符重载" class="headerlink" title="4.5.6 函数调用运算符重载"></a>4.5.6 函数调用运算符重载</h4><ul>
<li>函数调用运算符 ()  也可以重载</li>
<li>由于重载后使用的方式非常像函数的调用，因此称为仿函数</li>
<li>仿函数没有固定写法，非常灵活</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyPrint</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">string</span> text)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; text &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//重载的（）操作符 也称为仿函数</span></span><br><span class="line">	MyPrint myFunc;</span><br><span class="line">	myFunc(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyAdd</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span> v1, <span class="keyword">int</span> v2)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> v1 + v2;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	MyAdd add;</span><br><span class="line">	<span class="keyword">int</span> ret = add(<span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ret = &quot;</span> &lt;&lt; ret &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//匿名对象调用  </span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;MyAdd()(100,100) = &quot;</span> &lt;&lt; MyAdd()(<span class="number">100</span>, <span class="number">100</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line">	test02();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-6-继承"><a href="#4-6-继承" class="headerlink" title="4.6  继承"></a>4.6  继承</h3><p><strong>继承是面向对象三大特性之一</strong></p>
<p>有些类与类之间存在特殊的关系，例如下图中：</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201009204150.png" alt=""></p>
<p>我们发现，定义这些类时，下级别的成员除了拥有上一级的共性，还有自己的特性。</p>
<p>这个时候我们就可以考虑利用继承的技术，减少重复代码</p>
<h4 id="4-6-1-继承的基本语法"><a href="#4-6-1-继承的基本语法" class="headerlink" title="4.6.1 继承的基本语法"></a>4.6.1 继承的基本语法</h4><p>例如我们看到很多网站中，都有公共的头部，公共的底部，甚至公共的左侧列表，只有中心内容不同</p>
<p>接下来我们分别利用普通写法和继承的写法来实现网页中的内容，看一下继承存在的意义以及好处</p>
<p><strong>普通实现：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Java页面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Java</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...(公共底部)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Java,Python,C++...(公共分类列表)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;JAVA学科视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//Python页面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Python</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...(公共底部)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Java,Python,C++...(公共分类列表)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Python学科视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//C++页面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CPP</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...(公共底部)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Java,Python,C++...(公共分类列表)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;C++学科视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//Java页面</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Java下载视频页面如下： &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	Java ja;</span><br><span class="line">	ja.header();</span><br><span class="line">	ja.footer();</span><br><span class="line">	ja.left();</span><br><span class="line">	ja.content();</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;--------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//Python页面</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Python下载视频页面如下： &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	Python py;</span><br><span class="line">	py.header();</span><br><span class="line">	py.footer();</span><br><span class="line">	py.left();</span><br><span class="line">	py.content();</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;--------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//C++页面</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;C++下载视频页面如下： &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	CPP cp;</span><br><span class="line">	cp.header();</span><br><span class="line">	cp.footer();</span><br><span class="line">	cp.left();</span><br><span class="line">	cp.content();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>继承实现：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//公共页面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BasePage</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...(公共底部)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Java,Python,C++...(公共分类列表)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Java页面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Java</span> :</span> <span class="keyword">public</span> BasePage</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;JAVA学科视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//Python页面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Python</span> :</span> <span class="keyword">public</span> BasePage</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Python学科视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//C++页面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CPP</span> :</span> <span class="keyword">public</span> BasePage</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;C++学科视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//Java页面</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Java下载视频页面如下： &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	Java ja;</span><br><span class="line">	ja.header();</span><br><span class="line">	ja.footer();</span><br><span class="line">	ja.left();</span><br><span class="line">	ja.content();</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;--------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//Python页面</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Python下载视频页面如下： &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	Python py;</span><br><span class="line">	py.header();</span><br><span class="line">	py.footer();</span><br><span class="line">	py.left();</span><br><span class="line">	py.content();</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;--------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//C++页面</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;C++下载视频页面如下： &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	CPP cp;</span><br><span class="line">	cp.header();</span><br><span class="line">	cp.footer();</span><br><span class="line">	cp.left();</span><br><span class="line">	cp.content();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>总结：</strong></p>
<p>继承的好处：==可以减少重复的代码==</p>
<p>class A : public B; </p>
<p>A 类称为子类 或 派生类</p>
<p>B 类称为父类 或 基类</p>
<p><strong>派生类中的成员，包含两大部分</strong>：</p>
<p>一类是从基类继承过来的，一类是自己增加的成员。</p>
<p>从基类继承过过来的表现其共性，而新增的成员体现了其个性。</p>
<h4 id="4-6-2-继承方式"><a href="#4-6-2-继承方式" class="headerlink" title="4.6.2 继承方式"></a>4.6.2 继承方式</h4><p>继承的语法：<code>class 子类 : 继承方式  父类</code></p>
<p><strong>继承方式一共有三种：</strong></p>
<ul>
<li>公共继承</li>
<li>保护继承</li>
<li>私有继承</li>
</ul>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201009204211.png" alt=""></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="keyword">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son1</span> :</span><span class="keyword">public</span> Base1</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		m_A; <span class="comment">//可访问 public权限</span></span><br><span class="line">		m_B; <span class="comment">//可访问 protected权限</span></span><br><span class="line">		<span class="comment">//m_C; //不可访问</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myClass</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Son1 s1;</span><br><span class="line">	s1.m_A; <span class="comment">//其他类只能访问到公共权限</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保护继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base2</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="keyword">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son2</span>:</span><span class="keyword">protected</span> Base2</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		m_A; <span class="comment">//可访问 protected权限</span></span><br><span class="line">		m_B; <span class="comment">//可访问 protected权限</span></span><br><span class="line">		<span class="comment">//m_C; //不可访问</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myClass2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Son2 s;</span><br><span class="line">	<span class="comment">//s.m_A; //不可访问</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base3</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="keyword">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son3</span>:</span><span class="keyword">private</span> Base3</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		m_A; <span class="comment">//可访问 private权限</span></span><br><span class="line">		m_B; <span class="comment">//可访问 private权限</span></span><br><span class="line">		<span class="comment">//m_C; //不可访问</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GrandSon3</span> :</span><span class="keyword">public</span> Son3</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">//Son3是私有继承，所以继承Son3的属性在GrandSon3中都无法访问到</span></span><br><span class="line">		<span class="comment">//m_A;</span></span><br><span class="line">		<span class="comment">//m_B;</span></span><br><span class="line">		<span class="comment">//m_C;</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="4-6-3-继承中的对象模型"><a href="#4-6-3-继承中的对象模型" class="headerlink" title="4.6.3 继承中的对象模型"></a>4.6.3 继承中的对象模型</h4><p><strong>问题：</strong>从父类继承过来的成员，哪些属于子类对象中？</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="keyword">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> m_C; <span class="comment">//私有成员只是被隐藏了，但是还是会继承下去</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> :</span><span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_D;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;sizeof Son = &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(Son) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>利用工具查看：</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201009204222.png" alt=""></p>
<p>打开工具窗口后，定位到当前CPP文件的盘符</p>
<p>然后输入： cl /d1 reportSingleClassLayout查看的类名   所属文件名</p>
<p>效果如下图：</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201009204234.png" alt=""></p>
<blockquote>
<p>结论： 父类中私有成员也是被子类继承下去了，只是由编译器给隐藏后访问不到</p>
</blockquote>
<h4 id="4-6-4-继承中构造和析构顺序"><a href="#4-6-4-继承中构造和析构顺序" class="headerlink" title="4.6.4 继承中构造和析构顺序"></a>4.6.4 继承中构造和析构顺序</h4><p>子类继承父类后，当创建子类对象，也会调用父类的构造函数</p>
<p>问题：父类和子类的构造和析构顺序是谁先谁后？</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Base()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	~Base()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base析构函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> :</span> <span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Son()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Son构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	~Son()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Son析构函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//继承中 先调用父类构造函数，再调用子类构造函数，析构顺序与构造相反</span></span><br><span class="line">	Son s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：继承中 先调用父类构造函数，再调用子类构造函数，析构顺序与构造相反</p>
</blockquote>
<h4 id="4-6-5-继承同名成员处理方式"><a href="#4-6-5-继承同名成员处理方式" class="headerlink" title="4.6.5 继承同名成员处理方式"></a>4.6.5 继承同名成员处理方式</h4><p>问题：当子类与父类出现同名的成员，如何通过子类对象，访问到子类或父类中同名的数据呢？</p>
<ul>
<li>访问子类同名成员   直接访问即可</li>
<li>访问父类同名成员   需要加作用域</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Base()</span><br><span class="line">	&#123;</span><br><span class="line">		m_A = <span class="number">100</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base - func()调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base - func(int a)调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> :</span> <span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Son()</span><br><span class="line">	&#123;</span><br><span class="line">		m_A = <span class="number">200</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//当子类与父类拥有同名的成员函数，子类会隐藏父类中所有版本的同名成员函数</span></span><br><span class="line">	<span class="comment">//如果想访问父类中被隐藏的同名成员函数，需要加父类的作用域</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Son - func()调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Son s;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Son下的m_A = &quot;</span> &lt;&lt; s.m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base下的m_A = &quot;</span> &lt;&lt; s.Base::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	s.func();</span><br><span class="line">	s.Base::func();</span><br><span class="line">	s.Base::func(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>总结：</p>
<ol>
<li>子类对象可以直接访问到子类中同名成员</li>
<li>子类对象加作用域可以访问到父类同名成员</li>
<li>当子类与父类拥有同名的成员函数，子类会隐藏父类中同名成员函数，加作用域可以访问到父类中同名函数</li>
</ol>
<h4 id="4-6-6-继承同名静态成员处理方式"><a href="#4-6-6-继承同名静态成员处理方式" class="headerlink" title="4.6.6 继承同名静态成员处理方式"></a>4.6.6 继承同名静态成员处理方式</h4><p>问题：继承中同名的静态成员在子类对象上如何进行访问？</p>
<p>静态成员和非静态成员出现同名，处理方式一致</p>
<ul>
<li>访问子类同名成员   直接访问即可</li>
<li>访问父类同名成员   需要加作用域</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base - static void func()&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base - static void func(int a)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Base::m_A = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> :</span> <span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Son - static void func()&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Son::m_A = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//同名成员属性</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//通过对象访问</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通过对象访问： &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	Son s;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Son  下 m_A = &quot;</span> &lt;&lt; s.m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base 下 m_A = &quot;</span> &lt;&lt; s.Base::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//通过类名访问</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通过类名访问： &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Son  下 m_A = &quot;</span> &lt;&lt; Son::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base 下 m_A = &quot;</span> &lt;&lt; Son::Base::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//同名成员函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//通过对象访问</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通过对象访问： &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	Son s;</span><br><span class="line">	s.func();</span><br><span class="line">	s.Base::func();</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通过类名访问： &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	Son::func();</span><br><span class="line">	Son::Base::func();</span><br><span class="line">	<span class="comment">//出现同名，子类会隐藏掉父类中所有同名成员函数，需要加作作用域访问</span></span><br><span class="line">	Son::Base::func(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//test01();</span></span><br><span class="line">	test02();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：同名静态成员处理方式和非静态处理方式一样，只不过有两种访问的方式（通过对象 和 通过类名）</p>
</blockquote>
<h4 id="4-6-7-多继承语法"><a href="#4-6-7-多继承语法" class="headerlink" title="4.6.7 多继承语法"></a>4.6.7 多继承语法</h4><p>C++允许<strong>一个类继承多个类</strong></p>
<p>语法：<code>class 子类 ：继承方式 父类1 ， 继承方式 父类2...</code></p>
<p>多继承可能会引发父类中有同名成员出现，需要加作用域区分</p>
<p><strong>C++实际开发中不建议用多继承</strong></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base1</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Base1()</span><br><span class="line">	&#123;</span><br><span class="line">		m_A = <span class="number">100</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base2</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Base2()</span><br><span class="line">	&#123;</span><br><span class="line">		m_A = <span class="number">200</span>;  <span class="comment">//开始是m_B 不会出问题，但是改为mA就会出现不明确</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//语法：class 子类：继承方式 父类1 ，继承方式 父类2 </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> :</span> <span class="keyword">public</span> Base2, <span class="keyword">public</span> Base1 </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Son()</span><br><span class="line">	&#123;</span><br><span class="line">		m_C = <span class="number">300</span>;</span><br><span class="line">		m_D = <span class="number">400</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_C;</span><br><span class="line">	<span class="keyword">int</span> m_D;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//多继承容易产生成员同名的情况</span></span><br><span class="line"><span class="comment">//通过使用类名作用域可以区分调用哪一个基类的成员</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Son s;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;sizeof Son = &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(s) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; s.Base1::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; s.Base2::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结： 多继承中如果父类中出现了同名情况，子类使用时候要加作用域</p>
</blockquote>
<h4 id="4-6-8-菱形继承"><a href="#4-6-8-菱形继承" class="headerlink" title="4.6.8 菱形继承"></a>4.6.8 菱形继承</h4><p><strong>菱形继承概念：</strong></p>
<p>​    两个派生类继承同一个基类</p>
<p>​    又有某个类同时继承者两个派生类</p>
<p>​    这种继承被称为菱形继承，或者钻石继承</p>
<p><strong>典型的菱形继承案例：</strong></p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201009204252.jpg" alt=""></p>
<p><strong>菱形继承问题：</strong></p>
<ol>
<li><p>羊继承了动物的数据，驼同样继承了动物的数据，当草泥马使用数据时，就会产生二义性。</p>
</li>
<li><p>草泥马继承自动物的数据继承了两份，其实我们应该清楚，这份数据我们只需要一份就可以。</p>
</li>
</ol>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承前加virtual关键字后，变为虚继承</span></span><br><span class="line"><span class="comment">//此时公共的父类Animal称为虚基类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sheep</span> :</span> <span class="keyword">virtual</span> <span class="keyword">public</span> Animal &#123;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tuo</span>   :</span> <span class="keyword">virtual</span> <span class="keyword">public</span> Animal &#123;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SheepTuo</span> :</span> <span class="keyword">public</span> Sheep, <span class="keyword">public</span> Tuo &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SheepTuo st;</span><br><span class="line">	st.Sheep::m_Age = <span class="number">100</span>;</span><br><span class="line">	st.Tuo::m_Age = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;st.Sheep::m_Age = &quot;</span> &lt;&lt; st.Sheep::m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;st.Tuo::m_Age = &quot;</span> &lt;&lt;  st.Tuo::m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;st.m_Age = &quot;</span> &lt;&lt; st.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>总结：</p>
<ul>
<li>菱形继承带来的主要问题是子类继承两份相同的数据，导致资源浪费以及毫无意义</li>
<li>利用虚继承可以解决菱形继承问题</li>
</ul>
<h3 id="4-7-多态"><a href="#4-7-多态" class="headerlink" title="4.7  多态"></a>4.7  多态</h3><h4 id="4-7-1-多态的基本概念"><a href="#4-7-1-多态的基本概念" class="headerlink" title="4.7.1 多态的基本概念"></a>4.7.1 多态的基本概念</h4><p><strong>多态是C++面向对象三大特性之一</strong></p>
<p>多态分为两类</p>
<ul>
<li>静态多态: 函数重载 和 运算符重载属于静态多态，复用函数名</li>
<li>动态多态: 派生类和虚函数实现运行时多态</li>
</ul>
<p>静态多态和动态多态区别：</p>
<ul>
<li>静态多态的函数地址早绑定  -  编译阶段确定函数地址</li>
<li>动态多态的函数地址晚绑定  -  运行阶段确定函数地址</li>
</ul>
<p>下面通过案例进行讲解多态</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//Speak函数就是虚函数</span></span><br><span class="line">	<span class="comment">//函数前面加上virtual关键字，变成虚函数，那么编译器在编译的时候就不能确定函数调用了。</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;动物在说话&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> :</span><span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;小猫在说话&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> :</span><span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;小狗在说话&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//我们希望传入什么对象，那么就调用什么对象的函数</span></span><br><span class="line"><span class="comment">//如果函数地址在编译阶段就能确定，那么静态联编</span></span><br><span class="line"><span class="comment">//如果函数地址在运行阶段才能确定，就是动态联编</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoSpeak</span><span class="params">(Animal &amp; animal)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	animal.speak();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//多态满足条件： </span></span><br><span class="line"><span class="comment">//1、有继承关系</span></span><br><span class="line"><span class="comment">//2、子类重写父类中的虚函数</span></span><br><span class="line"><span class="comment">//多态使用：</span></span><br><span class="line"><span class="comment">//父类指针或引用指向子类对象</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Cat cat;</span><br><span class="line">	DoSpeak(cat);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	Dog dog;</span><br><span class="line">	DoSpeak(dog);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>总结：</p>
<p>多态满足条件</p>
<ul>
<li>有继承关系</li>
<li>子类重写父类中的虚函数</li>
</ul>
<p>多态使用条件</p>
<ul>
<li>父类指针或引用指向子类对象</li>
</ul>
<p>重写：函数返回值类型  函数名 参数列表 完全一致称为重写</p>
<h4 id="4-7-2-多态案例一-计算器类"><a href="#4-7-2-多态案例一-计算器类" class="headerlink" title="4.7.2 多态案例一-计算器类"></a>4.7.2 多态案例一-计算器类</h4><p>案例描述：</p>
<p>分别利用普通写法和多态技术，设计实现两个操作数进行运算的计算器类</p>
<p>多态的优点：</p>
<ul>
<li>代码组织结构清晰</li>
<li>可读性强</li>
<li>利于前期和后期的扩展以及维护</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//普通实现</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getResult</span><span class="params">(<span class="built_in">string</span> oper)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (oper == <span class="string">&quot;+&quot;</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> m_Num1 + m_Num2;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (oper == <span class="string">&quot;-&quot;</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> m_Num1 - m_Num2;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (oper == <span class="string">&quot;*&quot;</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> m_Num1 * m_Num2;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//如果要提供新的运算，需要修改源码</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> m_Num1;</span><br><span class="line">	<span class="keyword">int</span> m_Num2;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//普通实现测试</span></span><br><span class="line">	Calculator c;</span><br><span class="line">	c.m_Num1 = <span class="number">10</span>;</span><br><span class="line">	c.m_Num2 = <span class="number">10</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; c.m_Num1 &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; c.m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.getResult(<span class="string">&quot;+&quot;</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; c.m_Num1 &lt;&lt; <span class="string">&quot; - &quot;</span> &lt;&lt; c.m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.getResult(<span class="string">&quot;-&quot;</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; c.m_Num1 &lt;&lt; <span class="string">&quot; * &quot;</span> &lt;&lt; c.m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.getResult(<span class="string">&quot;*&quot;</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//多态实现</span></span><br><span class="line"><span class="comment">//抽象计算器类</span></span><br><span class="line"><span class="comment">//多态优点：代码组织结构清晰，可读性强，利于前期和后期的扩展以及维护</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractCalculator</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span> :</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> m_Num1;</span><br><span class="line">	<span class="keyword">int</span> m_Num2;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加法计算器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddCalculator</span> :</span><span class="keyword">public</span> AbstractCalculator</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> m_Num1 + m_Num2;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//减法计算器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubCalculator</span> :</span><span class="keyword">public</span> AbstractCalculator</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> m_Num1 - m_Num2;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//乘法计算器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MulCalculator</span> :</span><span class="keyword">public</span> AbstractCalculator</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> m_Num1 * m_Num2;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//创建加法计算器</span></span><br><span class="line">	AbstractCalculator *abc = <span class="keyword">new</span> AddCalculator;</span><br><span class="line">	abc-&gt;m_Num1 = <span class="number">10</span>;</span><br><span class="line">	abc-&gt;m_Num2 = <span class="number">10</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; abc-&gt;m_Num1 &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; abc-&gt;m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; abc-&gt;getResult() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">delete</span> abc;  <span class="comment">//用完了记得销毁</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//创建减法计算器</span></span><br><span class="line">	abc = <span class="keyword">new</span> SubCalculator;</span><br><span class="line">	abc-&gt;m_Num1 = <span class="number">10</span>;</span><br><span class="line">	abc-&gt;m_Num2 = <span class="number">10</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; abc-&gt;m_Num1 &lt;&lt; <span class="string">&quot; - &quot;</span> &lt;&lt; abc-&gt;m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; abc-&gt;getResult() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">delete</span> abc;  </span><br><span class="line"></span><br><span class="line">	<span class="comment">//创建乘法计算器</span></span><br><span class="line">	abc = <span class="keyword">new</span> MulCalculator;</span><br><span class="line">	abc-&gt;m_Num1 = <span class="number">10</span>;</span><br><span class="line">	abc-&gt;m_Num2 = <span class="number">10</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; abc-&gt;m_Num1 &lt;&lt; <span class="string">&quot; * &quot;</span> &lt;&lt; abc-&gt;m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; abc-&gt;getResult() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">delete</span> abc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//test01();</span></span><br><span class="line"></span><br><span class="line">	test02();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：C++开发提倡利用多态设计程序架构，因为多态优点很多</p>
</blockquote>
<h4 id="4-7-3-纯虚函数和抽象类"><a href="#4-7-3-纯虚函数和抽象类" class="headerlink" title="4.7.3 纯虚函数和抽象类"></a>4.7.3 纯虚函数和抽象类</h4><p>在多态中，通常父类中虚函数的实现是毫无意义的，主要都是调用子类重写的内容</p>
<p>因此可以将虚函数改为<strong>纯虚函数</strong></p>
<p>纯虚函数语法：<code>virtual 返回值类型 函数名 （参数列表）= 0 ;</code></p>
<p>当类中有了纯虚函数，这个类也称为==抽象类==</p>
<p><strong>抽象类特点</strong>：</p>
<ul>
<li>无法实例化对象</li>
<li>子类必须重写抽象类中的纯虚函数，否则也属于抽象类</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//纯虚函数</span></span><br><span class="line">	<span class="comment">//类中只要有一个纯虚函数就称为抽象类</span></span><br><span class="line">	<span class="comment">//抽象类无法实例化对象</span></span><br><span class="line">	<span class="comment">//子类必须重写父类中的纯虚函数，否则也属于抽象类</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> :</span><span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Base * base = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">//base = new Base; // 错误，抽象类无法实例化对象</span></span><br><span class="line">	base = <span class="keyword">new</span> Son;</span><br><span class="line">	base-&gt;func();</span><br><span class="line">	<span class="keyword">delete</span> base;<span class="comment">//记得销毁</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-7-4-多态案例二-制作饮品"><a href="#4-7-4-多态案例二-制作饮品" class="headerlink" title="4.7.4 多态案例二-制作饮品"></a>4.7.4 多态案例二-制作饮品</h4><p><strong>案例描述：</strong></p>
<p>制作饮品的大致流程为：煮水 -  冲泡 - 倒入杯中 - 加入辅料</p>
<p>利用多态技术实现本案例，提供抽象制作饮品基类，提供子类制作咖啡和茶叶</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201009204307.png" alt=""></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//抽象制作饮品</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractDrinking</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//烧水</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//冲泡</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//倒入杯中</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//加入辅料</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//规定流程</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">MakeDrink</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		Boil();</span><br><span class="line">		Brew();</span><br><span class="line">		PourInCup();</span><br><span class="line">		PutSomething();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//制作咖啡</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coffee</span> :</span> <span class="keyword">public</span> AbstractDrinking &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//烧水</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;煮农夫山泉!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//冲泡</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;冲泡咖啡!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//倒入杯中</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;将咖啡倒入杯中!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//加入辅料</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;加入牛奶!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//制作茶水</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tea</span> :</span> <span class="keyword">public</span> AbstractDrinking &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//烧水</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;煮自来水!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//冲泡</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;冲泡茶叶!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//倒入杯中</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;将茶水倒入杯中!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//加入辅料</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;加入枸杞!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//业务函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoWork</span><span class="params">(AbstractDrinking* drink)</span> </span>&#123;</span><br><span class="line">	drink-&gt;MakeDrink();</span><br><span class="line">	<span class="keyword">delete</span> drink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	DoWork(<span class="keyword">new</span> Coffee);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;--------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	DoWork(<span class="keyword">new</span> Tea);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-7-5-虚析构和纯虚析构"><a href="#4-7-5-虚析构和纯虚析构" class="headerlink" title="4.7.5 虚析构和纯虚析构"></a>4.7.5 虚析构和纯虚析构</h4><p>多态使用时，如果子类中有属性开辟到堆区，那么父类指针在释放时无法调用到子类的析构代码</p>
<p>解决方式：将父类中的析构函数改为<strong>虚析构</strong>或者<strong>纯虚析构</strong></p>
<p>虚析构和纯虚析构共性：</p>
<ul>
<li>可以解决父类指针释放子类对象</li>
<li>都需要有具体的函数实现</li>
</ul>
<p>虚析构和纯虚析构区别：</p>
<ul>
<li>如果是纯虚析构，该类属于抽象类，无法实例化对象</li>
</ul>
<p>虚析构语法：</p>
<p><code>virtual ~类名()&#123;&#125;</code></p>
<p>纯虚析构语法：</p>
<p><code>virtual ~类名() = 0;</code></p>
<p><code>类名::~类名()&#123;&#125;</code></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">	Animal()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Animal 构造函数调用！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Speak</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//析构函数加上virtual关键字，变成虚析构函数</span></span><br><span class="line">	<span class="comment">//virtual ~Animal()</span></span><br><span class="line">	<span class="comment">//&#123;</span></span><br><span class="line">	<span class="comment">//	cout &lt;&lt; &quot;Animal虚析构函数调用！&quot; &lt;&lt; endl;</span></span><br><span class="line">	<span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">virtual</span> ~Animal() = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Animal::~Animal()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Animal 纯虚析构函数调用！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//和包含普通纯虚函数的类一样，包含了纯虚析构函数的类也是一个抽象类。不能够被实例化。</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> :</span> <span class="keyword">public</span> Animal &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Cat(<span class="built_in">string</span> name)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Cat构造函数调用！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		m_Name = <span class="keyword">new</span> <span class="built_in">string</span>(name);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; *m_Name &lt;&lt;  <span class="string">&quot;小猫在说话!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	~Cat()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Cat析构函数调用!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Name != <span class="literal">NULL</span>) &#123;</span><br><span class="line">			<span class="keyword">delete</span> m_Name;</span><br><span class="line">			m_Name = <span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">string</span> *m_Name;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Animal *animal = <span class="keyword">new</span> Cat(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">	animal-&gt;Speak();</span><br><span class="line"></span><br><span class="line">	<span class="comment">//通过父类指针去释放，会导致子类对象可能清理不干净，造成内存泄漏</span></span><br><span class="line">	<span class="comment">//怎么解决？给基类增加一个虚析构函数</span></span><br><span class="line">	<span class="comment">//虚析构函数就是用来解决通过父类指针释放子类对象</span></span><br><span class="line">	<span class="keyword">delete</span> animal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>总结：</p>
<p>​    1. 虚析构或纯虚析构就是用来解决通过父类指针释放子类对象</p>
<p>​    2. 如果子类中没有堆区数据，可以不写为虚析构或纯虚析构</p>
<p>​    3. 拥有纯虚析构函数的类也属于抽象类</p>
<h4 id="4-7-6-多态案例三-电脑组装"><a href="#4-7-6-多态案例三-电脑组装" class="headerlink" title="4.7.6 多态案例三-电脑组装"></a>4.7.6 多态案例三-电脑组装</h4><p><strong>案例描述：</strong></p>
<p>电脑主要组成部件为 CPU（用于计算），显卡（用于显示），内存条（用于存储）</p>
<p>将每个零件封装出抽象基类，并且提供不同的厂商生产不同的零件，例如Intel厂商和Lenovo厂商</p>
<p>创建电脑类提供让电脑工作的函数，并且调用每个零件工作的接口</p>
<p>测试时组装三台不同的电脑进行工作</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象CPU类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CPU</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//抽象的计算函数</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">calculate</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象显卡类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VideoCard</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//抽象的显示函数</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象内存条类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Memory</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">//抽象的存储函数</span></span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">storage</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//电脑类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Computer</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Computer(CPU * cpu, VideoCard * vc, Memory * mem)</span><br><span class="line">	&#123;</span><br><span class="line">		m_cpu = cpu;</span><br><span class="line">		m_vc = vc;</span><br><span class="line">		m_mem = mem;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//提供工作的函数</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">//让零件工作起来，调用接口</span></span><br><span class="line">		m_cpu-&gt;calculate();</span><br><span class="line"></span><br><span class="line">		m_vc-&gt;display();</span><br><span class="line"></span><br><span class="line">		m_mem-&gt;storage();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//提供析构函数 释放3个电脑零件</span></span><br><span class="line">	~Computer()</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//释放CPU零件</span></span><br><span class="line">		<span class="keyword">if</span> (m_cpu != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">delete</span> m_cpu;</span><br><span class="line">			m_cpu = <span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//释放显卡零件</span></span><br><span class="line">		<span class="keyword">if</span> (m_vc != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">delete</span> m_vc;</span><br><span class="line">			m_vc = <span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//释放内存条零件</span></span><br><span class="line">		<span class="keyword">if</span> (m_mem != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">delete</span> m_mem;</span><br><span class="line">			m_mem = <span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">	CPU * m_cpu; <span class="comment">//CPU的零件指针</span></span><br><span class="line">	VideoCard * m_vc; <span class="comment">//显卡零件指针</span></span><br><span class="line">	Memory * m_mem; <span class="comment">//内存条零件指针</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体厂商</span></span><br><span class="line"><span class="comment">//Intel厂商</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelCPU</span> :</span><span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Intel的CPU开始计算了！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelVideoCard</span> :</span><span class="keyword">public</span> VideoCard</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Intel的显卡开始显示了！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelMemory</span> :</span><span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">storage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Intel的内存条开始存储了！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Lenovo厂商</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoCPU</span> :</span><span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Lenovo的CPU开始计算了！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoVideoCard</span> :</span><span class="keyword">public</span> VideoCard</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Lenovo的显卡开始显示了！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoMemory</span> :</span><span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">storage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Lenovo的内存条开始存储了！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//第一台电脑零件</span></span><br><span class="line">	CPU * intelCpu = <span class="keyword">new</span> IntelCPU;</span><br><span class="line">	VideoCard * intelCard = <span class="keyword">new</span> IntelVideoCard;</span><br><span class="line">	Memory * intelMem = <span class="keyword">new</span> IntelMemory;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;第一台电脑开始工作：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="comment">//创建第一台电脑</span></span><br><span class="line">	Computer * computer1 = <span class="keyword">new</span> Computer(intelCpu, intelCard, intelMem);</span><br><span class="line">	computer1-&gt;work();</span><br><span class="line">	<span class="keyword">delete</span> computer1;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-----------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;第二台电脑开始工作：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="comment">//第二台电脑组装</span></span><br><span class="line">	Computer * computer2 = <span class="keyword">new</span> Computer(<span class="keyword">new</span> LenovoCPU, <span class="keyword">new</span> LenovoVideoCard, <span class="keyword">new</span> LenovoMemory);;</span><br><span class="line">	computer2-&gt;work();</span><br><span class="line">	<span class="keyword">delete</span> computer2;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-----------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;第三台电脑开始工作：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="comment">//第三台电脑组装</span></span><br><span class="line">	Computer * computer3 = <span class="keyword">new</span> Computer(<span class="keyword">new</span> LenovoCPU, <span class="keyword">new</span> IntelVideoCard, <span class="keyword">new</span> LenovoMemory);;</span><br><span class="line">	computer3-&gt;work();</span><br><span class="line">	<span class="keyword">delete</span> computer3;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5-文件操作"><a href="#5-文件操作" class="headerlink" title="5 文件操作"></a>5 文件操作</h2><p>程序运行时产生的数据都属于临时数据，程序一旦运行结束都会被释放</p>
<p>通过<strong>文件可以将数据持久化</strong></p>
<p>C++中对文件操作需要包含头文件 ==&lt; fstream &gt;==</p>
<p>文件类型分为两种：</p>
<ol>
<li><strong>文本文件</strong>     -  文件以文本的<strong>ASCII码</strong>形式存储在计算机中</li>
<li><strong>二进制文件</strong> -  文件以文本的<strong>二进制</strong>形式存储在计算机中，用户一般不能直接读懂它们</li>
</ol>
<p>操作文件的三大类:</p>
<ol>
<li>ofstream：写操作</li>
<li>ifstream： 读操作</li>
<li>fstream ： 读写操作</li>
</ol>
<h3 id="5-1文本文件"><a href="#5-1文本文件" class="headerlink" title="5.1文本文件"></a>5.1文本文件</h3><h4 id="5-1-1写文件"><a href="#5-1-1写文件" class="headerlink" title="5.1.1写文件"></a>5.1.1写文件</h4><p>   写文件步骤如下：</p>
<ol>
<li><p>包含头文件   </p>
<p> #include <fstream\></p>
</li>
<li><p>创建流对象  </p>
<p> ofstream ofs;</p>
</li>
<li><p>打开文件</p>
<p> ofs.open(“文件路径”,打开方式);</p>
</li>
<li><p>写数据</p>
<p> ofs &lt;&lt; “写入的数据”;</p>
</li>
<li><p>关闭文件</p>
<p> ofs.close();</p>
</li>
</ol>
<p>文件打开方式：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>打开方式</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>ios::in</td>
<td>为读文件而打开文件</td>
</tr>
<tr>
<td>ios::out</td>
<td>为写文件而打开文件</td>
</tr>
<tr>
<td>ios::ate</td>
<td>初始位置：文件尾</td>
</tr>
<tr>
<td>ios::app</td>
<td>追加方式写文件</td>
</tr>
<tr>
<td>ios::trunc</td>
<td>如果文件存在先删除，再创建</td>
</tr>
<tr>
<td>ios::binary</td>
<td>二进制方式</td>
</tr>
</tbody>
</table>
</div>
<p><strong>注意：</strong> 文件打开方式可以配合使用，利用|操作符</p>
<p><strong>例如：</strong>用二进制方式写文件 <code>ios::binary |  ios:: out</code></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ofstream ofs;</span><br><span class="line">	ofs.open(<span class="string">&quot;test.txt&quot;</span>, ios::out);</span><br><span class="line"></span><br><span class="line">	ofs &lt;&lt; <span class="string">&quot;姓名：张三&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	ofs &lt;&lt; <span class="string">&quot;性别：男&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	ofs &lt;&lt; <span class="string">&quot;年龄：18&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	ofs.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>总结：</p>
<ul>
<li>文件操作必须包含头文件 fstream</li>
<li>读文件可以利用 ofstream  ，或者fstream类</li>
<li>打开文件时候需要指定操作文件的路径，以及打开方式</li>
<li>利用&lt;&lt;可以向文件中写数据</li>
<li>操作完毕，要关闭文件</li>
</ul>
<h4 id="5-1-2读文件"><a href="#5-1-2读文件" class="headerlink" title="5.1.2读文件"></a>5.1.2读文件</h4><p>读文件与写文件步骤相似，但是读取方式相对于比较多</p>
<p>读文件步骤如下：</p>
<ol>
<li><p>包含头文件   </p>
<p> #include <fstream\></p>
</li>
<li><p>创建流对象  </p>
<p> ifstream ifs;</p>
</li>
<li><p>打开文件并判断文件是否打开成功</p>
<p> ifs.open(“文件路径”,打开方式);</p>
</li>
<li><p>读数据</p>
<p> 四种方式读取</p>
</li>
<li><p>关闭文件</p>
<p> ifs.close();</p>
</li>
</ol>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ifstream ifs;</span><br><span class="line">	ifs.open(<span class="string">&quot;test.txt&quot;</span>, ios::in);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;文件打开失败&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//第一种方式</span></span><br><span class="line">	<span class="comment">//char buf[1024] = &#123; 0 &#125;;</span></span><br><span class="line">	<span class="comment">//while (ifs &gt;&gt; buf)</span></span><br><span class="line">	<span class="comment">//&#123;</span></span><br><span class="line">	<span class="comment">//	cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line">	<span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//第二种</span></span><br><span class="line">	<span class="comment">//char buf[1024] = &#123; 0 &#125;;</span></span><br><span class="line">	<span class="comment">//while (ifs.getline(buf,sizeof(buf)))</span></span><br><span class="line">	<span class="comment">//&#123;</span></span><br><span class="line">	<span class="comment">//	cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line">	<span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//第三种</span></span><br><span class="line">	<span class="comment">//string buf;</span></span><br><span class="line">	<span class="comment">//while (getline(ifs, buf))</span></span><br><span class="line">	<span class="comment">//&#123;</span></span><br><span class="line">	<span class="comment">//	cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line">	<span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> c;</span><br><span class="line">	<span class="keyword">while</span> ((c = ifs.get()) != EOF)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	ifs.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>总结：</p>
<ul>
<li>读文件可以利用 ifstream  ，或者fstream类</li>
<li>利用is_open函数可以判断文件是否打开成功</li>
<li>close 关闭文件 </li>
</ul>
<h3 id="5-2-二进制文件"><a href="#5-2-二进制文件" class="headerlink" title="5.2 二进制文件"></a>5.2 二进制文件</h3><p>以二进制的方式对文件进行读写操作</p>
<p>打开方式要指定为 ==ios::binary==</p>
<h4 id="5-2-1-写文件"><a href="#5-2-1-写文件" class="headerlink" title="5.2.1 写文件"></a>5.2.1 写文件</h4><p>二进制方式写文件主要利用流对象调用成员函数write</p>
<p>函数原型 ：<code>ostream&amp; write(const char * buffer,int len);</code></p>
<p>参数解释：字符指针buffer指向内存中一段存储空间。len是读写的字节数</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">char</span> m_Name[<span class="number">64</span>];</span><br><span class="line">	<span class="keyword">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二进制文件  写文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//1、包含头文件</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//2、创建输出流对象</span></span><br><span class="line">	<span class="function">ofstream <span class="title">ofs</span><span class="params">(<span class="string">&quot;person.txt&quot;</span>, ios::out | ios::binary)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//3、打开文件</span></span><br><span class="line">	<span class="comment">//ofs.open(&quot;person.txt&quot;, ios::out | ios::binary);</span></span><br><span class="line"></span><br><span class="line">	Person p = &#123;<span class="string">&quot;张三&quot;</span>  , <span class="number">18</span>&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//4、写文件</span></span><br><span class="line">	ofs.write((<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;p, <span class="keyword">sizeof</span>(p));</span><br><span class="line"></span><br><span class="line">	<span class="comment">//5、关闭文件</span></span><br><span class="line">	ofs.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>总结：</p>
<ul>
<li>文件输出流对象 可以通过write函数，以二进制方式写数据</li>
</ul>
<h4 id="5-2-2-读文件"><a href="#5-2-2-读文件" class="headerlink" title="5.2.2 读文件"></a>5.2.2 读文件</h4><p>二进制方式读文件主要利用流对象调用成员函数read</p>
<p>函数原型：<code>istream&amp; read(char *buffer,int len);</code></p>
<p>参数解释：字符指针buffer指向内存中一段存储空间。len是读写的字节数</p>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">char</span> m_Name[<span class="number">64</span>];</span><br><span class="line">	<span class="keyword">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">ifstream <span class="title">ifs</span><span class="params">(<span class="string">&quot;person.txt&quot;</span>, ios::in | ios::binary)</span></span>;</span><br><span class="line">	<span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;文件打开失败&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	Person p;</span><br><span class="line">	ifs.read((<span class="keyword">char</span> *)&amp;p, <span class="keyword">sizeof</span>(p));</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名： &quot;</span> &lt;&lt; p.m_Name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; p.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	test01();</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>文件输入流对象 可以通过read函数，以二进制方式读数据</li>
</ul>
]]></content>
      <categories>
        <category>充电</category>
      </categories>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>PCL-简单点云可视化</title>
    <url>/2020/10/09/PCL-%E7%AE%80%E5%8D%95%E7%82%B9%E4%BA%91%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="PCL-简单点云可视化"><a href="#PCL-简单点云可视化" class="headerlink" title="PCL-简单点云可视化"></a>PCL-简单点云可视化</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/visualization/cloud_viewer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/io/io.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/io/pcd_io.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------------------</span></span><br><span class="line"><span class="comment">//简单点云可视化</span></span><br><span class="line"><span class="comment">//--------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> user_data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// &lt;summary&gt;</span></span><br><span class="line"><span class="comment">/// 回调函数，只能调用一次的回调函数</span></span><br><span class="line"><span class="comment">/// 对可视化对象背景的颜色设置，添加一个圆球几何体</span></span><br><span class="line"><span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;viewer&quot;&gt;&lt;/param&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">viewerOneOff</span><span class="params">(pcl::visualization::PCLVisualizer&amp; viewer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//背景</span></span><br><span class="line">    viewer.setBackgroundColor(<span class="number">1.0</span>, <span class="number">0.5</span>, <span class="number">1.0</span>);</span><br><span class="line">    <span class="comment">//存储球心位置</span></span><br><span class="line">    pcl::PointXYZ o;</span><br><span class="line">    o.x = <span class="number">1.0</span>;</span><br><span class="line">    o.y = <span class="number">0</span>;</span><br><span class="line">    o.z = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//添加圆球几何对象</span></span><br><span class="line">    viewer.addSphere(o, <span class="number">0.25</span>, <span class="string">&quot;sphere&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;i only run once&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// &lt;summary&gt;</span></span><br><span class="line"><span class="comment">/// 渲染输出时每次都调用的回调函数</span></span><br><span class="line"><span class="comment">/// 每帧都执行一次</span></span><br><span class="line"><span class="comment">/// 在可视化对象中添加一个刷新显示字符串</span></span><br><span class="line"><span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;viewer&quot;&gt;&lt;/param&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">viewerPsycho</span><span class="params">(pcl::visualization::PCLVisualizer&amp; viewer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">unsigned</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">stringstream</span> ss;</span><br><span class="line">    ss &lt;&lt; <span class="string">&quot;Once per viewer loop: &quot;</span> &lt;&lt; count++;</span><br><span class="line">    viewer.removeShape(<span class="string">&quot;text&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    viewer.addText(ss.str(), <span class="number">200</span>, <span class="number">300</span>, <span class="string">&quot;text&quot;</span>, <span class="number">0</span>); </span><br><span class="line">    <span class="comment">//<span class="doctag">FIXME:</span> possible race condition here:</span></span><br><span class="line">    user_data++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pcl::PointCloud&lt;pcl::PointXYZRGBA&gt;::<span class="function">Ptr <span class="title">cloud</span><span class="params">(<span class="keyword">new</span> pcl::PointCloud&lt;pcl::PointXYZRGBA&gt;)</span></span>;</span><br><span class="line">    pcl::io::loadPCDFile(<span class="string">&quot;my_point_cloud.pcd&quot;</span>, *cloud);</span><br><span class="line"></span><br><span class="line">    pcl::<span class="function">visualization::CloudViewer <span class="title">viewer</span><span class="params">(<span class="string">&quot;Cloud Viewer&quot;</span>)</span></span>;</span><br><span class="line">    <span class="comment">//showCloud函数是同步的，在此处等待直到渲染显示为止</span></span><br><span class="line">    viewer.showCloud(cloud);</span><br><span class="line">    <span class="comment">//该注册函数在可视化时只调用一次</span></span><br><span class="line">    viewer.runOnVisualizationThreadOnce(viewerOneOff);</span><br><span class="line">    <span class="comment">//该注册函数在渲染输出时每次都调用</span></span><br><span class="line">    viewer.runOnVisualizationThread(viewerPsycho);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!viewer.wasStopped())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//在此处可以添加其他处理</span></span><br><span class="line">        user_data++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>pcl</tag>
      </tags>
  </entry>
  <entry>
    <title>PCL-kdtree实现快速邻域搜索</title>
    <url>/2020/10/09/PCL-kdtree%E5%AE%9E%E7%8E%B0%E5%BF%AB%E9%80%9F%E9%82%BB%E5%9F%9F%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="PCL-kdtree实现快速邻域搜索"><a href="#PCL-kdtree实现快速邻域搜索" class="headerlink" title="PCL-kdtree实现快速邻域搜索"></a>PCL-kdtree实现快速邻域搜索</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/point_cloud.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/kdtree/kdtree_flann.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------------------</span></span><br><span class="line"><span class="comment">//PCL中实现快速邻域搜索</span></span><br><span class="line"><span class="comment">//------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//用系统时间初始化随机种子</span></span><br><span class="line">	srand(time(<span class="literal">NULL</span>));</span><br><span class="line">	pcl::PointCloud&lt;pcl::PointXYZ&gt;::<span class="function">Ptr <span class="title">cloud</span><span class="params">(<span class="keyword">new</span> pcl::PointCloud&lt;pcl::PointXYZ&gt;)</span></span>;</span><br><span class="line">	<span class="comment">//随机点云生成</span></span><br><span class="line">	cloud-&gt;width = <span class="number">1000</span>;</span><br><span class="line">	cloud-&gt;height = <span class="number">1</span>;</span><br><span class="line">	cloud-&gt;points.resize(cloud-&gt;width * cloud-&gt;height);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; cloud-&gt;points.size(); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		cloud-&gt;points[i].x = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">		cloud-&gt;points[i].y = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">		cloud-&gt;points[i].z = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//创建KdTreeFLANN类型对象，kdtree</span></span><br><span class="line">	pcl::KdTreeFLANN&lt;pcl::PointXYZ&gt;kdtree;</span><br><span class="line">	<span class="comment">//设置搜索空间</span></span><br><span class="line">	kdtree.setInputCloud(cloud);</span><br><span class="line">	<span class="comment">//定义查询点并赋随机值</span></span><br><span class="line">	pcl::PointXYZ searchPoint;</span><br><span class="line">	searchPoint.x = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">	searchPoint.y = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">	searchPoint.z = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">	<span class="comment">// k近邻搜索</span></span><br><span class="line">	<span class="keyword">int</span> K = <span class="number">10</span>;</span><br><span class="line">	<span class="comment">//定义向量pointIdxNKNSearch，存储查询点邻近索引</span></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;pointIdxNKNSearch(K);</span><br><span class="line">	<span class="comment">//定义向量pointNKNSquaredDistance，存储近邻点对应平方距离</span></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt;pointNKNSquaredDistance(K);</span><br><span class="line">	<span class="comment">//打印相关信息</span></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;K nearest neighbor search at (&quot;</span> &lt;&lt; searchPoint.x</span><br><span class="line">		&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; searchPoint.y</span><br><span class="line">		&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; searchPoint.z</span><br><span class="line">		&lt;&lt; <span class="string">&quot;) with K=&quot;</span> &lt;&lt; K &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">if</span> (kdtree.nearestKSearch(searchPoint, K, pointIdxNKNSearch, pointNKNSquaredDistance) &gt; <span class="number">0</span>)</span><br><span class="line">		<span class="comment">//执行K邻近搜索，返回值是近邻的个数</span></span><br><span class="line">		<span class="comment">//searchPoint，查询点</span></span><br><span class="line">		<span class="comment">//K，10</span></span><br><span class="line">		<span class="comment">//pointIdxNKNSearch，存储查询点近邻索引的向量</span></span><br><span class="line">		<span class="comment">//pointNKNSquaredDistance，存储近邻点对应的平方距离</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//打印输出</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; pointIdxNKNSearch.size(); ++i)</span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;    &quot;</span> &lt;&lt; cloud-&gt;points[pointIdxNKNSearch[i]].x</span><br><span class="line">			&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cloud-&gt;points[pointIdxNKNSearch[i]].y</span><br><span class="line">			&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cloud-&gt;points[pointIdxNKNSearch[i]].z</span><br><span class="line">			&lt;&lt; <span class="string">&quot; (squared distance: &quot;</span> &lt;&lt; pointNKNSquaredDistance[i] &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 在半径r内搜索近邻</span></span><br><span class="line">	<span class="comment">//重新定义两个向量，存储近邻索引与对应平方距离</span></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pointIdxRadiusSearch;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt; pointRadiusSquaredDistance;</span><br><span class="line">	<span class="comment">//定义随机数r</span></span><br><span class="line">	<span class="keyword">float</span> radius = <span class="number">256.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">	<span class="comment">//打印相关信息</span></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Neighbors within radius search at (&quot;</span> &lt;&lt; searchPoint.x</span><br><span class="line">		&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; searchPoint.y</span><br><span class="line">		&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; searchPoint.z</span><br><span class="line">		&lt;&lt; <span class="string">&quot;) with radius=&quot;</span> &lt;&lt; radius &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (kdtree.radiusSearch(searchPoint, radius, pointIdxRadiusSearch, pointRadiusSquaredDistance) &gt; <span class="number">0</span>)</span><br><span class="line">		<span class="comment">//执行r内邻近搜索，返回值是近邻的个数</span></span><br><span class="line">		<span class="comment">//searchPoint，查询点</span></span><br><span class="line">		<span class="comment">//radius，半径</span></span><br><span class="line">		<span class="comment">//pointIdxRadiusSearch，存储查询点近邻索引的向量</span></span><br><span class="line">		<span class="comment">//pointRadiusSquaredDistance，存储近邻点对应的平方距离</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//打印输出</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; pointIdxRadiusSearch.size(); ++i)</span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;    &quot;</span> &lt;&lt; cloud-&gt;points[pointIdxRadiusSearch[i]].x</span><br><span class="line">			&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cloud-&gt;points[pointIdxRadiusSearch[i]].y</span><br><span class="line">			&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cloud-&gt;points[pointIdxRadiusSearch[i]].z</span><br><span class="line">			&lt;&lt; <span class="string">&quot; (squared distance: &quot;</span> &lt;&lt; pointRadiusSquaredDistance[i] &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>充电</category>
      </categories>
      <tags>
        <tag>pcl</tag>
      </tags>
  </entry>
  <entry>
    <title>C++基础入门</title>
    <url>/2020/10/08/C-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-基础入门"><a href="#C-基础入门" class="headerlink" title="C++基础入门"></a>C++基础入门</h1><h2 id="1-C-初识"><a href="#1-C-初识" class="headerlink" title="1 C++初识"></a>1 C++初识</h2><h3 id="1-1-第一个C-程序"><a href="#1-1-第一个C-程序" class="headerlink" title="1.1  第一个C++程序"></a>1.1  第一个C++程序</h3><p>编写一个C++程序总共分为4个步骤</p>
<ul>
<li>创建项目</li>
<li>创建文件</li>
<li>编写代码</li>
<li>运行程序</li>
</ul>
<h4 id="1-1-1-创建项目"><a href="#1-1-1-创建项目" class="headerlink" title="1.1.1 创建项目"></a>1.1.1 创建项目</h4><p>​    Visual Studio是我们用来编写C++程序的主要工具，我们先将它打开</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155005.png" alt=""></p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155020.png" alt=""></p>
<h4 id="1-1-2-创建文件"><a href="#1-1-2-创建文件" class="headerlink" title="1.1.2 创建文件"></a>1.1.2 创建文件</h4><p>右键源文件，选择添加-&gt;新建项</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155041.png" alt=""></p>
<p>给C++文件起个名称，然后点击添加即可。</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155125.png" alt=""></p>
<h4 id="1-1-3-编写代码"><a href="#1-1-3-编写代码" class="headerlink" title="1.1.3 编写代码"></a>1.1.3 编写代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Hello world&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="1-1-4-运行程序"><a href="#1-1-4-运行程序" class="headerlink" title="1.1.4 运行程序"></a>1.1.4 运行程序</h4><p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155146.png" alt=""></p>
<h3 id="1-2-注释"><a href="#1-2-注释" class="headerlink" title="1.2 注释"></a>1.2 注释</h3><p><strong>作用</strong>：在代码中加一些说明和解释，方便自己或其他程序员程序员阅读代码</p>
<p><strong>两种格式</strong></p>
<ol>
<li><strong>单行注释</strong>：<code>// 描述信息</code> <ul>
<li>通常放在一行代码的上方，或者一条语句的末尾，==对该行代码说明==</li>
</ul>
</li>
<li><strong>多行注释</strong>： <code>/* 描述信息 */</code><ul>
<li>通常放在一段代码的上方，==对该段代码做整体说明==</li>
</ul>
</li>
</ol>
<blockquote>
<p>提示：编译器在编译代码时，会忽略注释的内容</p>
</blockquote>
<h3 id="1-3-变量"><a href="#1-3-变量" class="headerlink" title="1.3 变量"></a>1.3 变量</h3><p><strong>作用</strong>：给一段指定的内存空间起名，方便操作这段内存</p>
<p><strong>语法</strong>：<code>数据类型 变量名 = 初始值;</code></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//变量的定义</span></span><br><span class="line">	<span class="comment">//语法：数据类型  变量名 = 初始值</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：C++在创建变量时，必须给变量一个初始值，否则会报错</p>
</blockquote>
<h3 id="1-4-常量"><a href="#1-4-常量" class="headerlink" title="1.4  常量"></a>1.4  常量</h3><p><strong>作用</strong>：用于记录程序中不可更改的数据</p>
<p>C++定义常量两种方式</p>
<ol>
<li><strong>#define</strong> 宏常量： <code>#define 常量名 常量值</code><ul>
<li>==通常在文件上方定义==，表示一个常量</li>
</ul>
</li>
</ol>
<ol>
<li><strong>const</strong>修饰的变量 <code>const 数据类型 常量名 = 常量值</code><ul>
<li>==通常在变量定义前加关键字const==，修饰该变量为常量，不可修改</li>
</ul>
</li>
</ol>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、宏常量</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> day 7</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;一周里总共有 &quot;</span> &lt;&lt; day &lt;&lt; <span class="string">&quot; 天&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="comment">//day = 8;  //报错，宏常量不可以修改</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//2、const修饰变量</span></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span> month = <span class="number">12</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;一年里总共有 &quot;</span> &lt;&lt; month &lt;&lt; <span class="string">&quot; 个月份&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="comment">//month = 24; //报错，常量是不可以修改的</span></span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="1-5-关键字"><a href="#1-5-关键字" class="headerlink" title="1.5 关键字"></a>1.5 关键字</h3><p><strong>作用：</strong>关键字是C++中预先保留的单词（标识符）</p>
<ul>
<li><strong>在定义变量或者常量时候，不要用关键字</strong></li>
</ul>
<p>C++关键字如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>asm</th>
<th>do</th>
<th>if</th>
<th>return</th>
<th>typedef</th>
</tr>
</thead>
<tbody>
<tr>
<td>auto</td>
<td>double</td>
<td>inline</td>
<td>short</td>
<td>typeid</td>
</tr>
<tr>
<td>bool</td>
<td>dynamic_cast</td>
<td>int</td>
<td>signed</td>
<td>typename</td>
</tr>
<tr>
<td>break</td>
<td>else</td>
<td>long</td>
<td>sizeof</td>
<td>union</td>
</tr>
<tr>
<td>case</td>
<td>enum</td>
<td>mutable</td>
<td>static</td>
<td>unsigned</td>
</tr>
<tr>
<td>catch</td>
<td>explicit</td>
<td>namespace</td>
<td>static_cast</td>
<td>using</td>
</tr>
<tr>
<td>char</td>
<td>export</td>
<td>new</td>
<td>struct</td>
<td>virtual</td>
</tr>
<tr>
<td>class</td>
<td>extern</td>
<td>operator</td>
<td>switch</td>
<td>void</td>
</tr>
<tr>
<td>const</td>
<td>false</td>
<td>private</td>
<td>template</td>
<td>volatile</td>
</tr>
<tr>
<td>const_cast</td>
<td>float</td>
<td>protected</td>
<td>this</td>
<td>wchar_t</td>
</tr>
<tr>
<td>continue</td>
<td>for</td>
<td>public</td>
<td>throw</td>
<td>while</td>
</tr>
<tr>
<td>default</td>
<td>friend</td>
<td>register</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>delete</td>
<td>goto</td>
<td>reinterpret_cast</td>
<td>try</td>
</tr>
</tbody>
</table>
</div>
<p><code>提示：在给变量或者常量起名称时候，不要用C++得关键字，否则会产生歧义。</code></p>
<h3 id="1-6-标识符命名规则"><a href="#1-6-标识符命名规则" class="headerlink" title="1.6 标识符命名规则"></a>1.6 标识符命名规则</h3><p><strong>作用</strong>：C++规定给标识符（变量、常量）命名时，有一套自己的规则</p>
<ul>
<li>标识符不能是关键字</li>
<li>标识符只能由字母、数字、下划线组成</li>
<li>第一个字符必须为字母或下划线</li>
<li>标识符中字母区分大小写</li>
</ul>
<blockquote>
<p>建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读</p>
</blockquote>
<h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2 数据类型"></a>2 数据类型</h2><p>C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存</p>
<h3 id="2-1-整型"><a href="#2-1-整型" class="headerlink" title="2.1 整型"></a>2.1 整型</h3><p><strong>作用</strong>：整型变量表示的是==整数类型==的数据</p>
<p>C++中能够表示整型的类型有以下几种方式，<strong>区别在于所占内存空间不同</strong>：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>数据类型</strong></th>
<th><strong>占用空间</strong></th>
<th>取值范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>short(短整型)</td>
<td>2字节</td>
<td>(-2^15 ~ 2^15-1)</td>
</tr>
<tr>
<td>int(整型)</td>
<td>4字节</td>
<td>(-2^31 ~ 2^31-1)</td>
</tr>
<tr>
<td>long(长整形)</td>
<td>Windows为4字节，Linux为4字节(32位)，8字节(64位)</td>
<td>(-2^31 ~ 2^31-1)</td>
</tr>
<tr>
<td>long long(长长整形)</td>
<td>8字节</td>
<td>(-2^63 ~ 2^63-1)</td>
</tr>
</tbody>
</table>
</div>
<h3 id="2-2-sizeof关键字"><a href="#2-2-sizeof关键字" class="headerlink" title="2.2 sizeof关键字"></a>2.2 sizeof关键字</h3><p><strong>作用：</strong>利用sizeof关键字可以==统计数据类型所占内存大小==</p>
<p><strong>语法：</strong> <code>sizeof( 数据类型 / 变量)</code></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;short 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">short</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;int 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">int</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">long</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;long long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">long</span> <span class="keyword">long</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>整型结论</strong>：==short &lt; int &lt;= long &lt;= long long==</p>
</blockquote>
<h3 id="2-3-实型（浮点型）"><a href="#2-3-实型（浮点型）" class="headerlink" title="2.3 实型（浮点型）"></a>2.3 实型（浮点型）</h3><p><strong>作用</strong>：用于==表示小数==</p>
<p>浮点型变量分为两种：</p>
<ol>
<li>单精度float </li>
<li>双精度double</li>
</ol>
<p>两者的<strong>区别</strong>在于表示的有效数字范围不同。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>数据类型</strong></th>
<th><strong>占用空间</strong></th>
<th><strong>有效数字范围</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>float</td>
<td>4字节</td>
<td>7位有效数字</td>
</tr>
<tr>
<td>double</td>
<td>8字节</td>
<td>15～16位有效数字</td>
</tr>
</tbody>
</table>
</div>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> f1 = <span class="number">3.14f</span>;</span><br><span class="line">	<span class="keyword">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; f1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; d1&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;float  sizeof = &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(f1) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;double sizeof = &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(d1) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//科学计数法</span></span><br><span class="line">	<span class="keyword">float</span> f2 = <span class="number">3e2</span>; <span class="comment">// 3 * 10 ^ 2 </span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;f2 = &quot;</span> &lt;&lt; f2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> f3 = <span class="number">3e-2</span>;  <span class="comment">// 3 * 0.1 ^ 2</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;f3 = &quot;</span> &lt;&lt; f3 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-4-字符型"><a href="#2-4-字符型" class="headerlink" title="2.4 字符型"></a>2.4 字符型</h3><p><strong>作用：</strong>字符型变量用于显示单个字符</p>
<p><strong>语法：</strong><code>char ch = &#39;a&#39;;</code></p>
<blockquote>
<p>注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引号</p>
<p>注意2：单引号内只能有一个字符，不可以是字符串</p>
</blockquote>
<ul>
<li>C和C++中字符型变量只占用==1个字节==。</li>
<li>字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCII编码放入到存储单元</li>
</ul>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; ch &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">char</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//ch = &quot;abcde&quot;; //错误，不可以用双引号</span></span><br><span class="line">	<span class="comment">//ch = &#x27;abcde&#x27;; //错误，单引号内只能引用一个字符</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (<span class="keyword">int</span>)ch &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//查看字符a对应的ASCII码</span></span><br><span class="line">	ch = <span class="number">97</span>; <span class="comment">//可以直接用ASCII给字符型变量赋值</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; ch &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ASCII码表格：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>ASCII</strong>值</th>
<th><strong>控制字符</strong></th>
<th><strong>ASCII</strong>值</th>
<th><strong>字符</strong></th>
<th><strong>ASCII</strong>值</th>
<th><strong>字符</strong></th>
<th><strong>ASCII</strong>值</th>
<th><strong>字符</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>NUT</td>
<td>32</td>
<td>(space)</td>
<td>64</td>
<td>@</td>
<td>96</td>
<td>、</td>
</tr>
<tr>
<td>1</td>
<td>SOH</td>
<td>33</td>
<td>!</td>
<td>65</td>
<td>A</td>
<td>97</td>
<td>a</td>
</tr>
<tr>
<td>2</td>
<td>STX</td>
<td>34</td>
<td>“</td>
<td>66</td>
<td>B</td>
<td>98</td>
<td>b</td>
</tr>
<tr>
<td>3</td>
<td>ETX</td>
<td>35</td>
<td>#</td>
<td>67</td>
<td>C</td>
<td>99</td>
<td>c</td>
</tr>
<tr>
<td>4</td>
<td>EOT</td>
<td>36</td>
<td>$</td>
<td>68</td>
<td>D</td>
<td>100</td>
<td>d</td>
</tr>
<tr>
<td>5</td>
<td>ENQ</td>
<td>37</td>
<td>%</td>
<td>69</td>
<td>E</td>
<td>101</td>
<td>e</td>
</tr>
<tr>
<td>6</td>
<td>ACK</td>
<td>38</td>
<td>&amp;</td>
<td>70</td>
<td>F</td>
<td>102</td>
<td>f</td>
</tr>
<tr>
<td>7</td>
<td>BEL</td>
<td>39</td>
<td>,</td>
<td>71</td>
<td>G</td>
<td>103</td>
<td>g</td>
</tr>
<tr>
<td>8</td>
<td>BS</td>
<td>40</td>
<td>(</td>
<td>72</td>
<td>H</td>
<td>104</td>
<td>h</td>
</tr>
<tr>
<td>9</td>
<td>HT</td>
<td>41</td>
<td>)</td>
<td>73</td>
<td>I</td>
<td>105</td>
<td>i</td>
</tr>
<tr>
<td>10</td>
<td>LF</td>
<td>42</td>
<td>*</td>
<td>74</td>
<td>J</td>
<td>106</td>
<td>j</td>
</tr>
<tr>
<td>11</td>
<td>VT</td>
<td>43</td>
<td>+</td>
<td>75</td>
<td>K</td>
<td>107</td>
<td>k</td>
</tr>
<tr>
<td>12</td>
<td>FF</td>
<td>44</td>
<td>,</td>
<td>76</td>
<td>L</td>
<td>108</td>
<td>l</td>
</tr>
<tr>
<td>13</td>
<td>CR</td>
<td>45</td>
<td>-</td>
<td>77</td>
<td>M</td>
<td>109</td>
<td>m</td>
</tr>
<tr>
<td>14</td>
<td>SO</td>
<td>46</td>
<td>.</td>
<td>78</td>
<td>N</td>
<td>110</td>
<td>n</td>
</tr>
<tr>
<td>15</td>
<td>SI</td>
<td>47</td>
<td>/</td>
<td>79</td>
<td>O</td>
<td>111</td>
<td>o</td>
</tr>
<tr>
<td>16</td>
<td>DLE</td>
<td>48</td>
<td>0</td>
<td>80</td>
<td>P</td>
<td>112</td>
<td>p</td>
</tr>
<tr>
<td>17</td>
<td>DCI</td>
<td>49</td>
<td>1</td>
<td>81</td>
<td>Q</td>
<td>113</td>
<td>q</td>
</tr>
<tr>
<td>18</td>
<td>DC2</td>
<td>50</td>
<td>2</td>
<td>82</td>
<td>R</td>
<td>114</td>
<td>r</td>
</tr>
<tr>
<td>19</td>
<td>DC3</td>
<td>51</td>
<td>3</td>
<td>83</td>
<td>S</td>
<td>115</td>
<td>s</td>
</tr>
<tr>
<td>20</td>
<td>DC4</td>
<td>52</td>
<td>4</td>
<td>84</td>
<td>T</td>
<td>116</td>
<td>t</td>
</tr>
<tr>
<td>21</td>
<td>NAK</td>
<td>53</td>
<td>5</td>
<td>85</td>
<td>U</td>
<td>117</td>
<td>u</td>
</tr>
<tr>
<td>22</td>
<td>SYN</td>
<td>54</td>
<td>6</td>
<td>86</td>
<td>V</td>
<td>118</td>
<td>v</td>
</tr>
<tr>
<td>23</td>
<td>TB</td>
<td>55</td>
<td>7</td>
<td>87</td>
<td>W</td>
<td>119</td>
<td>w</td>
</tr>
<tr>
<td>24</td>
<td>CAN</td>
<td>56</td>
<td>8</td>
<td>88</td>
<td>X</td>
<td>120</td>
<td>x</td>
</tr>
<tr>
<td>25</td>
<td>EM</td>
<td>57</td>
<td>9</td>
<td>89</td>
<td>Y</td>
<td>121</td>
<td>y</td>
</tr>
<tr>
<td>26</td>
<td>SUB</td>
<td>58</td>
<td>:</td>
<td>90</td>
<td>Z</td>
<td>122</td>
<td>z</td>
</tr>
<tr>
<td>27</td>
<td>ESC</td>
<td>59</td>
<td>;</td>
<td>91</td>
<td>[</td>
<td>123</td>
<td>{</td>
</tr>
<tr>
<td>28</td>
<td>FS</td>
<td>60</td>
<td>&lt;</td>
<td>92</td>
<td>/</td>
<td>124</td>
<td>\</td>
<td></td>
</tr>
<tr>
<td>29</td>
<td>GS</td>
<td>61</td>
<td>=</td>
<td>93</td>
<td>]</td>
<td>125</td>
<td>}</td>
</tr>
<tr>
<td>30</td>
<td>RS</td>
<td>62</td>
<td>&gt;</td>
<td>94</td>
<td>^</td>
<td>126</td>
<td>`</td>
</tr>
<tr>
<td>31</td>
<td>US</td>
<td>63</td>
<td>?</td>
<td>95</td>
<td>_</td>
<td>127</td>
<td>DEL</td>
</tr>
</tbody>
</table>
</div>
<p>ASCII 码大致由以下<strong>两部分组</strong>成：</p>
<ul>
<li>ASCII 非打印控制字符： ASCII 表上的数字 <strong>0-31</strong> 分配给了控制字符，用于控制像打印机等一些外围设备。</li>
<li>ASCII 打印字符：数字 <strong>32-126</strong> 分配给了能在键盘上找到的字符，当查看或打印文档时就会出现。</li>
</ul>
<h3 id="2-5-转义字符"><a href="#2-5-转义字符" class="headerlink" title="2.5 转义字符"></a>2.5 转义字符</h3><p><strong>作用：</strong>用于表示一些==不能显示出来的ASCII字符==</p>
<p>现阶段我们常用的转义字符有：<code>\n  \\  \t</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>转义字符</strong></th>
<th><strong>含义</strong></th>
<th><strong>ASCII</strong>码值（十进制）</th>
</tr>
</thead>
<tbody>
<tr>
<td>\a</td>
<td>警报</td>
<td>007</td>
</tr>
<tr>
<td>\b</td>
<td>退格(BS) ，将当前位置移到前一列</td>
<td>008</td>
</tr>
<tr>
<td>\f</td>
<td>换页(FF)，将当前位置移到下页开头</td>
<td>012</td>
</tr>
<tr>
<td><strong>\n</strong></td>
<td><strong>换行(LF) ，将当前位置移到下一行开头</strong></td>
<td><strong>010</strong></td>
</tr>
<tr>
<td>\r</td>
<td>回车(CR) ，将当前位置移到本行开头</td>
<td>013</td>
</tr>
<tr>
<td><strong>\t</strong></td>
<td><strong>水平制表(HT)  （跳到下一个TAB位置）</strong></td>
<td><strong>009</strong></td>
</tr>
<tr>
<td>\v</td>
<td>垂直制表(VT)</td>
<td>011</td>
</tr>
<tr>
<td><strong>\\</strong></td>
<td><strong>代表一个反斜线字符”\”</strong></td>
<td><strong>092</strong></td>
</tr>
<tr>
<td>\’</td>
<td>代表一个单引号（撇号）字符</td>
<td>039</td>
</tr>
<tr>
<td>\”</td>
<td>代表一个双引号字符</td>
<td>034</td>
</tr>
<tr>
<td>\?</td>
<td>代表一个问号</td>
<td>063</td>
</tr>
<tr>
<td>\0</td>
<td>数字0</td>
<td>000</td>
</tr>
<tr>
<td>\ddd</td>
<td>8进制转义字符，d范围0~7</td>
<td>3位8进制</td>
</tr>
<tr>
<td>\xhh</td>
<td>16进制转义字符，h范围0~9，a~f，A~F</td>
<td>3位16进制</td>
</tr>
</tbody>
</table>
</div>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\\&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\tHello&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-6-字符串型"><a href="#2-6-字符串型" class="headerlink" title="2.6 字符串型"></a>2.6 字符串型</h3><p><strong>作用</strong>：用于表示一串字符</p>
<p><strong>两种风格</strong></p>
<ol>
<li><p><strong>C风格字符串</strong>： <code>char 变量名[] = &quot;字符串值&quot;</code></p>
<p> 示例：</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> str1[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; str1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：C风格的字符串要用双引号括起来</p>
</blockquote>
</li>
<li><p><strong>C++风格字符串</strong>：  <code>string  变量名 = &quot;字符串值&quot;</code></p>
<p> 示例：</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">string</span> str = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>注意：C++风格字符串，需要加入头文件==#include\<string>==</p>
</blockquote>
<h3 id="2-7-布尔类型-bool"><a href="#2-7-布尔类型-bool" class="headerlink" title="2.7 布尔类型 bool"></a>2.7 布尔类型 bool</h3><p><strong>作用：</strong>布尔数据类型代表真或假的值 </p>
<p>bool类型只有两个值：</p>
<ul>
<li>true  —- 真（本质是1）</li>
<li>false —- 假（本质是0）</li>
</ul>
<p><strong>bool类型占==1个字节==大小</strong></p>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; flag &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">	flag = <span class="literal">false</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; flag &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;size of bool = &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">bool</span>) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//1</span></span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-8-数据的输入"><a href="#2-8-数据的输入" class="headerlink" title="2.8 数据的输入"></a>2.8 数据的输入</h3><p><strong>作用：用于从键盘获取数据</strong></p>
<p><strong>关键字：</strong>cin</p>
<p><strong>语法：</strong> <code>cin &gt;&gt; 变量</code></p>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//整型输入</span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入整型变量：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//浮点型输入</span></span><br><span class="line">	<span class="keyword">double</span> d = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入浮点型变量：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; d;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; d &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//字符型输入</span></span><br><span class="line">	<span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入字符型变量：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; ch;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; ch &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//字符串型输入</span></span><br><span class="line">	<span class="built_in">string</span> str;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入字符串型变量：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//布尔类型输入</span></span><br><span class="line">	<span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入布尔型变量：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; flag;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; flag &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-运算符"><a href="#3-运算符" class="headerlink" title="3 运算符"></a>3 运算符</h2><p><strong>作用：</strong>用于执行代码的运算</p>
<p>本章我们主要讲解以下几类运算符：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>运算符类型</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>算术运算符</td>
<td>用于处理四则运算</td>
</tr>
<tr>
<td>赋值运算符</td>
<td>用于将表达式的值赋给变量</td>
</tr>
<tr>
<td>比较运算符</td>
<td>用于表达式的比较，并返回一个真值或假值</td>
</tr>
<tr>
<td>逻辑运算符</td>
<td>用于根据表达式的值返回真值或假值</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-1-算术运算符"><a href="#3-1-算术运算符" class="headerlink" title="3.1 算术运算符"></a>3.1 算术运算符</h3><p><strong>作用</strong>：用于处理四则运算 </p>
<p>算术运算符包括以下符号：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>运算符</strong></th>
<th><strong>术语</strong></th>
<th><strong>示例</strong></th>
<th><strong>结果</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>+</td>
<td>正号</td>
<td>+3</td>
<td>3</td>
</tr>
<tr>
<td>-</td>
<td>负号</td>
<td>-3</td>
<td>-3</td>
</tr>
<tr>
<td>+</td>
<td>加</td>
<td>10 + 5</td>
<td>15</td>
</tr>
<tr>
<td>-</td>
<td>减</td>
<td>10 - 5</td>
<td>5</td>
</tr>
<tr>
<td>*</td>
<td>乘</td>
<td>10 * 5</td>
<td>50</td>
</tr>
<tr>
<td>/</td>
<td>除</td>
<td>10 / 5</td>
<td>2</td>
</tr>
<tr>
<td>%</td>
<td>取模(取余)</td>
<td>10 % 3</td>
<td>1</td>
</tr>
<tr>
<td>++</td>
<td>前置递增</td>
<td>a=2; b=++a;</td>
<td>a=3; b=3;</td>
</tr>
<tr>
<td>++</td>
<td>后置递增</td>
<td>a=2; b=a++;</td>
<td>a=3; b=2;</td>
</tr>
<tr>
<td>—</td>
<td>前置递减</td>
<td>a=2; b=—a;</td>
<td>a=1; b=1;</td>
</tr>
<tr>
<td>—</td>
<td>后置递减</td>
<td>a=2; b=a—;</td>
<td>a=1; b=2;</td>
</tr>
</tbody>
</table>
</div>
<p><strong>示例1：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//加减乘除</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a1 = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; a1 + b1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; a1 - b1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; a1 * b1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; a1 / b1 &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//两个整数相除结果依然是整数</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a2 = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b2 = <span class="number">20</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; a2 / b2 &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a3 = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b3 = <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//cout &lt;&lt; a3 / b3 &lt;&lt; endl; //报错，除数不可以为0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//两个小数可以相除</span></span><br><span class="line">	<span class="keyword">double</span> d1 = <span class="number">0.5</span>;</span><br><span class="line">	<span class="keyword">double</span> d2 = <span class="number">0.25</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; d1 / d2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：在除法运算中，除数不能为0</p>
</blockquote>
<p><strong>示例2：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//取模</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a1 = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="number">10</span> % <span class="number">3</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a2 = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b2 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; a2 % b2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a3 = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//cout &lt;&lt; a3 % b3 &lt;&lt; endl; //取模运算时，除数也不能为0</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//两个小数不可以取模</span></span><br><span class="line">	<span class="keyword">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line">	<span class="keyword">double</span> d2 = <span class="number">1.1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//cout &lt;&lt; d1 % d2 &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：只有整型变量可以进行取模运算</p>
</blockquote>
<p><strong>示例3：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//递增</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//后置递增</span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	a++; <span class="comment">//等价于a = a + 1</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//前置递增</span></span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line">	++b;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//区别</span></span><br><span class="line">	<span class="comment">//前置递增先对变量进行++，再计算表达式</span></span><br><span class="line">	<span class="keyword">int</span> a2 = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b2 = ++a2 * <span class="number">10</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; b2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//后置递增先计算表达式，后对变量进行++</span></span><br><span class="line">	<span class="keyword">int</span> a3 = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b3 = a3++ * <span class="number">10</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; b3 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：前置递增先对变量进行++，再计算表达式，后置递增相反</p>
</blockquote>
<h3 id="3-2-赋值运算符"><a href="#3-2-赋值运算符" class="headerlink" title="3.2 赋值运算符"></a>3.2 赋值运算符</h3><p><strong>作用：</strong>用于将表达式的值赋给变量</p>
<p>赋值运算符包括以下几个符号：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>运算符</strong></th>
<th><strong>术语</strong></th>
<th><strong>示例</strong></th>
<th><strong>结果</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>=</td>
<td>赋值</td>
<td>a=2; b=3;</td>
<td>a=2; b=3;</td>
</tr>
<tr>
<td>+=</td>
<td>加等于</td>
<td>a=0; a+=2;</td>
<td>a=2;</td>
</tr>
<tr>
<td>-=</td>
<td>减等于</td>
<td>a=5; a-=3;</td>
<td>a=2;</td>
</tr>
<tr>
<td>*=</td>
<td>乘等于</td>
<td>a=2; a*=2;</td>
<td>a=4;</td>
</tr>
<tr>
<td>/=</td>
<td>除等于</td>
<td>a=4; a/=2;</td>
<td>a=2;</td>
</tr>
<tr>
<td>%=</td>
<td>模等于</td>
<td>a=3; a%2;</td>
<td>a=1;</td>
</tr>
</tbody>
</table>
</div>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//赋值运算符</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// =</span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	a = <span class="number">100</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// +=</span></span><br><span class="line">	a = <span class="number">10</span>;</span><br><span class="line">	a += <span class="number">2</span>; <span class="comment">// a = a + 2;</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// -=</span></span><br><span class="line">	a = <span class="number">10</span>;</span><br><span class="line">	a -= <span class="number">2</span>; <span class="comment">// a = a - 2</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// *=</span></span><br><span class="line">	a = <span class="number">10</span>;</span><br><span class="line">	a *= <span class="number">2</span>; <span class="comment">// a = a * 2</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// /=</span></span><br><span class="line">	a = <span class="number">10</span>;</span><br><span class="line">	a /= <span class="number">2</span>;  <span class="comment">// a = a / 2;</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// %=</span></span><br><span class="line">	a = <span class="number">10</span>;</span><br><span class="line">	a %= <span class="number">2</span>;  <span class="comment">// a = a % 2;</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-3-比较运算符"><a href="#3-3-比较运算符" class="headerlink" title="3.3 比较运算符"></a>3.3 比较运算符</h3><p><strong>作用：</strong>用于表达式的比较，并返回一个真值或假值</p>
<p>比较运算符有以下符号：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>运算符</strong></th>
<th><strong>术语</strong></th>
<th><strong>示例</strong></th>
<th><strong>结果</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>==</td>
<td>相等于</td>
<td>4 == 3</td>
<td>0</td>
</tr>
<tr>
<td>!=</td>
<td>不等于</td>
<td>4 != 3</td>
<td>1</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于</td>
<td>4 &lt; 3</td>
<td>0</td>
</tr>
<tr>
<td>></td>
<td>大于</td>
<td>4 &gt; 3</td>
<td>1</td>
</tr>
<tr>
<td>&lt;=</td>
<td>小于等于</td>
<td>4 &lt;= 3</td>
<td>0</td>
</tr>
<tr>
<td>>=</td>
<td>大于等于</td>
<td>4 &gt;= 1</td>
<td>1</td>
</tr>
</tbody>
</table>
</div>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a == b) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a != b) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a &gt; b) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a &lt; b) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a &gt;= b) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a &lt;= b) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 1</span></span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：C和C++ 语言的比较运算中， ==“真”用数字“1”来表示， “假”用数字“0”来表示。== </p>
</blockquote>
<h3 id="3-4-逻辑运算符"><a href="#3-4-逻辑运算符" class="headerlink" title="3.4 逻辑运算符"></a>3.4 逻辑运算符</h3><p><strong>作用：</strong>用于根据表达式的值返回真值或假值</p>
<p>逻辑运算符有以下符号：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>运算符</strong></th>
<th><strong>术语</strong></th>
<th><strong>示例</strong></th>
<th><strong>结果</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>!</td>
<td>非</td>
<td>!a</td>
<td>如果a为假，则!a为真；  如果a为真，则!a为假。</td>
</tr>
<tr>
<td>&amp;&amp;</td>
<td>与</td>
<td>a &amp;&amp; b</td>
<td>如果a和b都为真，则结果为真，否则为假。</td>
</tr>
<tr>
<td>\</td>
<td>\</td>
<td></td>
<td>或</td>
<td>a \</td>
<td>\</td>
<td>b</td>
<td>如果a和b有一个为真，则结果为真，二者都为假时，结果为假。</td>
</tr>
</tbody>
</table>
</div>
<p><strong>示例1：</strong>逻辑非</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 非</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; !a &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; !!a &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结： 真变假，假变真</p>
</blockquote>
<p><strong>示例2：</strong>逻辑与</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 与</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a &amp;&amp; b) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">	a = <span class="number">10</span>;</span><br><span class="line">	b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a &amp;&amp; b) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line">	a = <span class="number">0</span>;</span><br><span class="line">	b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a &amp;&amp; b) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：逻辑==与==运算符总结： ==同真为真，其余为假==</p>
</blockquote>
<p><strong>示例3：</strong>逻辑或</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 或</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a || b) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">	a = <span class="number">10</span>;</span><br><span class="line">	b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a || b) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// 1 </span></span><br><span class="line"></span><br><span class="line">	a = <span class="number">0</span>;</span><br><span class="line">	b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; (a || b) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>逻辑==或==运算符总结： ==同假为假，其余为真==</p>
</blockquote>
<h2 id="4-程序流程结构"><a href="#4-程序流程结构" class="headerlink" title="4 程序流程结构"></a>4 程序流程结构</h2><p>C/C++支持最基本的三种程序运行结构：==顺序结构、选择结构、循环结构==</p>
<ul>
<li>顺序结构：程序按顺序执行，不发生跳转</li>
<li>选择结构：依据条件是否满足，有选择的执行相应功能</li>
<li>循环结构：依据条件是否满足，循环多次执行某段代码</li>
</ul>
<h3 id="4-1-选择结构"><a href="#4-1-选择结构" class="headerlink" title="4.1 选择结构"></a>4.1 选择结构</h3><h4 id="4-1-1-if语句"><a href="#4-1-1-if语句" class="headerlink" title="4.1.1 if语句"></a>4.1.1 if语句</h4><p><strong>作用：</strong>执行满足条件的语句</p>
<p>if语句的三种形式</p>
<ul>
<li><p>单行格式if语句</p>
</li>
<li><p>多行格式if语句</p>
</li>
<li><p>多条件的if语句</p>
</li>
</ul>
<ol>
<li><p>单行格式if语句：<code>if(条件)&#123; 条件满足执行的语句 &#125;</code></p>
<p> <img src="https://gitee.com/JunLuJun/up/raw/master/20201008155230.png" alt=""></p>
</li>
</ol>
<pre><code>示例：

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    	<span class="comment">//选择结构-单行if语句</span></span><br><span class="line">    	<span class="comment">//输入一个分数，如果分数大于600分，视为考上一本大学，并在屏幕上打印</span></span><br><span class="line">    </span><br><span class="line">    	<span class="keyword">int</span> score = <span class="number">0</span>;</span><br><span class="line">    	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入一个分数：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    	<span class="built_in">cin</span> &gt;&gt; score;</span><br><span class="line">    </span><br><span class="line">    	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;您输入的分数为： &quot;</span> &lt;&lt; score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    	<span class="comment">//if语句</span></span><br><span class="line">    	<span class="comment">//注意事项，在if判断语句后面，不要加分号</span></span><br><span class="line">    	<span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">    	&#123;</span><br><span class="line">    		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我考上了一本大学！！！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    	&#125;</span><br><span class="line">    </span><br><span class="line">    	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</code></pre><blockquote>
<p>注意：if条件表达式后不要加分号</p>
</blockquote>
<ol>
<li>多行格式if语句：<code>if(条件)&#123; 条件满足执行的语句 &#125;else&#123; 条件不满足执行的语句 &#125;;</code></li>
</ol>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155302.png" alt=""></p>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我未考上一本大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>多条件的if语句：<code>if(条件1)&#123; 条件1满足执行的语句 &#125;else if(条件2)&#123;条件2满足执行的语句&#125;... else&#123; 都不满足执行的语句&#125;</code></li>
</ol>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155326.png" alt=""></p>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我考上了二本大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我考上了三本大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我未考上本科&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>嵌套if语句</strong>：在if语句中，可以嵌套使用if语句，达到更精确的条件判断</p>
<p>案例需求：</p>
<ul>
<li>提示用户输入一个高考考试分数，根据分数做如下判断</li>
<li>分数如果大于600分视为考上一本，大于500分考上二本，大于400考上三本，其余视为未考上本科；</li>
<li>在一本分数中，如果大于700分，考入北大，大于650分，考入清华，大于600考入人大。</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">if</span> (score &gt; <span class="number">700</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我考上了北大&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">650</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我考上了清华&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我考上了人大&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我考上了二本大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我考上了三本大学&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;我未考上本科&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>练习案例：</strong> 三只小猪称体重</p>
<p>有三只小猪ABC，请分别输入三只小猪的体重，并且判断哪只小猪最重？</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155344.jpg" alt=""></p>
<h4 id="4-1-2-三目运算符"><a href="#4-1-2-三目运算符" class="headerlink" title="4.1.2 三目运算符"></a>4.1.2 三目运算符</h4><p><strong>作用：</strong> 通过三目运算符实现简单的判断</p>
<p><strong>语法：</strong><code>表达式1 ? 表达式2 ：表达式3</code></p>
<p><strong>解释：</strong></p>
<p>如果表达式1的值为真，执行表达式2，并返回表达式2的结果；</p>
<p>如果表达式1的值为假，执行表达式3，并返回表达式3的结果。</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">	<span class="keyword">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	c = a &gt; b ? a : b;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//C++中三目运算符返回的是变量,可以继续赋值</span></span><br><span class="line"></span><br><span class="line">	(a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：和if语句比较，三目运算符优点是短小整洁，缺点是如果用嵌套，结构不清晰</p>
</blockquote>
<h4 id="4-1-3-switch语句"><a href="#4-1-3-switch语句" class="headerlink" title="4.1.3 switch语句"></a>4.1.3 switch语句</h4><p><strong>作用：</strong>执行多条件分支语句</p>
<p><strong>语法：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> 结果<span class="number">1</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> 结果<span class="number">2</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">	...</span><br><span class="line"></span><br><span class="line">	<span class="keyword">default</span>:执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//请给电影评分 </span></span><br><span class="line">	<span class="comment">//10 ~ 9   经典   </span></span><br><span class="line">	<span class="comment">// 8 ~ 7   非常好</span></span><br><span class="line">	<span class="comment">// 6 ~ 5   一般</span></span><br><span class="line">	<span class="comment">// 5分以下 烂片</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> score = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请给电影打分&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">switch</span> (score)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;经典&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;非常好&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;一般&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;烂片&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意1：switch语句中表达式类型只能是整型或者字符型</p>
<p>注意2：case里如果没有break，那么程序会一直向下执行</p>
<p>总结：与if语句比，对于多条件判断时，switch的结构清晰，执行效率高，缺点是switch不可以判断区间</p>
</blockquote>
<h3 id="4-2-循环结构"><a href="#4-2-循环结构" class="headerlink" title="4.2 循环结构"></a>4.2 循环结构</h3><h4 id="4-2-1-while循环语句"><a href="#4-2-1-while循环语句" class="headerlink" title="4.2.1 while循环语句"></a>4.2.1 while循环语句</h4><p><strong>作用：</strong>满足循环条件，执行循环语句</p>
<p><strong>语法：</strong><code>while(循环条件)&#123; 循环语句 &#125;</code></p>
<p><strong>解释：</strong>==只要循环条件的结果为真，就执行循环语句==</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155407.png" alt=""></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (num &lt; <span class="number">10</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		num++;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环</p>
</blockquote>
<p><strong>while循环练习案例：</strong>==猜数字==</p>
<p><strong>案例描述：</strong>系统随机生成一个1到100之间的数字，玩家进行猜测，如果猜错，提示玩家数字过大或过小，如果猜对恭喜玩家胜利，并且退出游戏。</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155419.jpg" alt=""></p>
<h4 id="4-2-2-do…while循环语句"><a href="#4-2-2-do…while循环语句" class="headerlink" title="4.2.2 do…while循环语句"></a>4.2.2 do…while循环语句</h4><p><strong>作用：</strong> 满足循环条件，执行循环语句</p>
<p><strong>语法：</strong> <code>do&#123; 循环语句 &#125; while(循环条件);</code></p>
<p><strong>注意：</strong>与while的区别在于==do…while会先执行一次循环语句==，再判断循环条件</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155435.png" alt=""></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		num++;</span><br><span class="line"></span><br><span class="line">	&#125; <span class="keyword">while</span> (num &lt; <span class="number">10</span>);</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：与while循环区别在于，do…while先执行一次循环语句，再判断循环条件</p>
</blockquote>
<p><strong>练习案例：水仙花数</strong></p>
<p><strong>案例描述：</strong>水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身</p>
<p>例如：1^3 + 5^3+ 3^3 = 153</p>
<p>请利用do…while语句，求出所有3位数中的水仙花数</p>
<h4 id="4-2-3-for循环语句"><a href="#4-2-3-for循环语句" class="headerlink" title="4.2.3 for循环语句"></a>4.2.3 for循环语句</h4><p><strong>作用：</strong> 满足循环条件，执行循环语句</p>
<p><strong>语法：</strong><code>for(起始表达式;条件表达式;末尾循环体) &#123; 循环语句; &#125;</code></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>详解：</strong></p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155455.png" alt=""></p>
<blockquote>
<p>注意：for循环中的表达式，要用分号进行分隔</p>
<p>总结：while , do…while, for都是开发中常用的循环语句，for循环结构比较清晰，比较常用</p>
</blockquote>
<p><strong>练习案例：敲桌子</strong></p>
<p>案例描述：从1开始数到数字100， 如果数字个位含有7，或者数字十位含有7，或者该数字是7的倍数，我们打印敲桌子，其余数字直接打印输出。</p>
<p><img src="\iframe\timg.gif" alt=""></p>
<h4 id="4-2-4-嵌套循环"><a href="#4-2-4-嵌套循环" class="headerlink" title="4.2.4 嵌套循环"></a>4.2.4 嵌套循环</h4><p><strong>作用：</strong> 在循环体中再嵌套一层循环，解决一些实际问题</p>
<p>例如我们想在屏幕中打印如下图片，就需要利用嵌套循环</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155627.png" alt=""></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//外层循环执行1次，内层循环执行1轮</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>练习案例：</strong>乘法口诀表</p>
<p>案例描述：利用嵌套循环，实现九九乘法表</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155637.jpg" alt=""></p>
<h3 id="4-3-跳转语句"><a href="#4-3-跳转语句" class="headerlink" title="4.3 跳转语句"></a>4.3 跳转语句</h3><h4 id="4-3-1-break语句"><a href="#4-3-1-break语句" class="headerlink" title="4.3.1 break语句"></a>4.3.1 break语句</h4><p><strong>作用:</strong> 用于跳出==选择结构==或者==循环结构==</p>
<p>break使用的时机：</p>
<ul>
<li>出现在switch条件语句中，作用是终止case并跳出switch</li>
<li>出现在循环语句中，作用是跳出当前的循环语句</li>
<li>出现在嵌套循环中，跳出最近的内层循环语句</li>
</ul>
<p><strong>示例1：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//1、在switch 语句中使用break</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请选择您挑战副本的难度：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1、普通&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2、中等&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;3、困难&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">switch</span> (num)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;您选择的是普通难度&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;您选择的是中等难度&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;您选择的是困难难度&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>示例2：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//2、在循环语句中用break</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">break</span>; <span class="comment">//跳出循环语句</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>示例3：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//在嵌套循环语句中使用break，退出内层循环</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (j == <span class="number">5</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4-3-2-continue语句"><a href="#4-3-2-continue语句" class="headerlink" title="4.3.2 continue语句"></a>4.3.2 continue语句</h4><p><strong>作用：</strong>在==循环语句==中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：continue并没有使整个循环终止，而break会跳出循环</p>
</blockquote>
<h4 id="4-3-3-goto语句"><a href="#4-3-3-goto语句" class="headerlink" title="4.3.3 goto语句"></a>4.3.3 goto语句</h4><p><strong>作用：</strong>可以无条件跳转语句</p>
<p><strong>语法：</strong> <code>goto 标记;</code></p>
<p><strong>解释：</strong>如果标记的名称存在，执行到goto语句时，会跳转到标记的位置</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">goto</span> FLAG;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;3&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;4&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	FLAG:</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;5&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：在程序中不建议使用goto语句，以免造成程序流程混乱</p>
</blockquote>
<h2 id="5-数组"><a href="#5-数组" class="headerlink" title="5 数组"></a>5 数组</h2><h3 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h3><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素</p>
<p><strong>特点1：</strong>数组中的每个==数据元素都是相同的数据类型==</p>
<p><strong>特点2：</strong>数组是由==连续的内存==位置组成的</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155650.png" alt=""></p>
<h3 id="5-2-一维数组"><a href="#5-2-一维数组" class="headerlink" title="5.2 一维数组"></a>5.2 一维数组</h3><h4 id="5-2-1-一维数组定义方式"><a href="#5-2-1-一维数组定义方式" class="headerlink" title="5.2.1 一维数组定义方式"></a>5.2.1 一维数组定义方式</h4><p>一维数组定义的三种方式：</p>
<ol>
<li><code>数据类型  数组名[ 数组长度 ];</code></li>
<li><code>数据类型  数组名[ 数组长度 ] = &#123; 值1，值2 ...&#125;;</code></li>
<li><code>数据类型  数组名[ ] = &#123; 值1，值2 ...&#125;;</code></li>
</ol>
<p>示例</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//定义方式1</span></span><br><span class="line">	<span class="comment">//数据类型 数组名[元素个数];</span></span><br><span class="line">	<span class="keyword">int</span> score[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">	<span class="comment">//利用下标赋值</span></span><br><span class="line">	score[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">	score[<span class="number">1</span>] = <span class="number">99</span>;</span><br><span class="line">	score[<span class="number">2</span>] = <span class="number">85</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//利用下标输出</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; score[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; score[<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; score[<span class="number">2</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//第二种定义方式</span></span><br><span class="line">	<span class="comment">//数据类型 数组名[元素个数] =  &#123;值1，值2 ，值3 ...&#125;;</span></span><br><span class="line">	<span class="comment">//如果&#123;&#125;内不足10个数据，剩余数据用0补全</span></span><br><span class="line">	<span class="keyword">int</span> score2[<span class="number">10</span>] = &#123; <span class="number">100</span>, <span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span> &#125;;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//逐个输出</span></span><br><span class="line">	<span class="comment">//cout &lt;&lt; score2[0] &lt;&lt; endl;</span></span><br><span class="line">	<span class="comment">//cout &lt;&lt; score2[1] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//一个一个输出太麻烦，因此可以利用循环进行输出</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; score2[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//定义方式3</span></span><br><span class="line">	<span class="comment">//数据类型 数组名[] =  &#123;值1，值2 ，值3 ...&#125;;</span></span><br><span class="line">	<span class="keyword">int</span> score3[] = &#123; <span class="number">100</span>,<span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; score3[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结1：数组名的命名规范与变量名命名规范一致，不要和变量重名</p>
<p>总结2：数组中下标是从0开始索引</p>
</blockquote>
<h4 id="5-2-2-一维数组数组名"><a href="#5-2-2-一维数组数组名" class="headerlink" title="5.2.2 一维数组数组名"></a>5.2.2 一维数组数组名</h4><p>一维数组名称的<strong>用途</strong>：</p>
<ol>
<li>可以统计整个数组在内存中的长度</li>
<li>可以获取数组在内存中的首地址</li>
</ol>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//数组名用途</span></span><br><span class="line">	<span class="comment">//1、可以获取整个数组占用内存空间大小</span></span><br><span class="line">	<span class="keyword">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;整个数组所占内存空间为： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(arr) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;每个元素所占内存空间为： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;数组的元素个数为： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//2、可以通过数组名获取到数组首地址</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;数组首地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)arr &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;数组中第一个元素地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;arr[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;数组中第二个元素地址为： &quot;</span> &lt;&lt; (<span class="keyword">int</span>)&amp;arr[<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//arr = 100; 错误，数组名是常量，因此不可以赋值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：数组名是常量，不可以赋值</p>
<p>总结1：直接打印数组名，可以查看数组所占内存的首地址</p>
<p>总结2：对数组名进行sizeof，可以获取整个数组占内存空间的大小</p>
</blockquote>
<p><strong>练习案例1</strong>：五只小猪称体重</p>
<p><strong>案例描述：</strong></p>
<p>在一个数组中记录了五只小猪的体重，如：int arr[5] = {300,350,200,400,250};</p>
<p>找出并打印最重的小猪体重。</p>
<p><strong>练习案例2：</strong>数组元素逆置</p>
<p><strong>案例描述：</strong>请声明一个5个元素的数组，并且将元素逆置.</p>
<p>(如原数组元素为：1,3,2,5,4;逆置后输出结果为:4,5,2,3,1);</p>
<h4 id="5-2-3-冒泡排序"><a href="#5-2-3-冒泡排序" class="headerlink" title="5.2.3 冒泡排序"></a>5.2.3 冒泡排序</h4><p><strong>作用：</strong> 最常用的排序算法，对数组内元素进行排序</p>
<ol>
<li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li>
<li>对每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值。</li>
<li>重复以上的步骤，每次比较次数-1，直到不需要比较</li>
</ol>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155703.png" alt=""></p>
<p><strong>示例：</strong> 将数组 { 4,2,8,0,5,7,1,3,9 } 进行升序排序</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> arr[<span class="number">9</span>] = &#123; <span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span> - <span class="number">1</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span> - <span class="number">1</span> - i; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> temp = arr[j];</span><br><span class="line">				arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">				arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-3-二维数组"><a href="#5-3-二维数组" class="headerlink" title="5.3 二维数组"></a>5.3 二维数组</h3><p>二维数组就是在一维数组上，多加一个维度。</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008155713.png" alt=""></p>
<h4 id="5-3-1-二维数组定义方式"><a href="#5-3-1-二维数组定义方式" class="headerlink" title="5.3.1 二维数组定义方式"></a>5.3.1 二维数组定义方式</h4><p>二维数组定义的四种方式：</p>
<ol>
<li><code>数据类型  数组名[ 行数 ][ 列数 ];</code></li>
<li><code>数据类型  数组名[ 行数 ][ 列数 ] = &#123; &#123;数据1，数据2 &#125; ，&#123;数据3，数据4 &#125; &#125;;</code></li>
<li><code>数据类型  数组名[ 行数 ][ 列数 ] = &#123; 数据1，数据2，数据3，数据4&#125;;</code></li>
<li><code>数据类型  数组名[  ][ 列数 ] = &#123; 数据1，数据2，数据3，数据4&#125;;</code></li>
</ol>
<blockquote>
<p>建议：以上4种定义方式，利用==第二种更加直观，提高代码的可读性==</p>
</blockquote>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//方式1  </span></span><br><span class="line">	<span class="comment">//数组类型 数组名 [行数][列数]</span></span><br><span class="line">	<span class="keyword">int</span> arr[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">	arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">	arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">	arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">	arr[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">	arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">	arr[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; arr[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//方式2 </span></span><br><span class="line">	<span class="comment">//数据类型 数组名[行数][列数] = &#123; &#123;数据1，数据2 &#125; ，&#123;数据3，数据4 &#125; &#125;;</span></span><br><span class="line">	<span class="keyword">int</span> arr2[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">	&#123;</span><br><span class="line">		&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">		&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//方式3</span></span><br><span class="line">	<span class="comment">//数据类型 数组名[行数][列数] = &#123; 数据1，数据2 ,数据3，数据4  &#125;;</span></span><br><span class="line">	<span class="keyword">int</span> arr3[<span class="number">2</span>][<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;; </span><br><span class="line"></span><br><span class="line">	<span class="comment">//方式4 </span></span><br><span class="line">	<span class="comment">//数据类型 数组名[][列数] = &#123; 数据1，数据2 ,数据3，数据4  &#125;;</span></span><br><span class="line">	<span class="keyword">int</span> arr4[][<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：在定义二维数组时，如果初始化了数据，可以省略行数</p>
</blockquote>
<h4 id="5-3-2-二维数组数组名"><a href="#5-3-2-二维数组数组名" class="headerlink" title="5.3.2 二维数组数组名"></a>5.3.2 二维数组数组名</h4><ul>
<li>查看二维数组所占内存空间</li>
<li>获取二维数组首地址</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//二维数组数组名</span></span><br><span class="line">	<span class="keyword">int</span> arr[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">	&#123;</span><br><span class="line">		&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">		&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组大小： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(arr) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组一行大小： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组元素大小： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组行数： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组列数： &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//地址</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组首地址：&quot;</span> &lt;&lt; arr &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组第一行地址：&quot;</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组第二行地址：&quot;</span> &lt;&lt; arr[<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组第一个元素地址：&quot;</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;二维数组第二个元素地址：&quot;</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结1：二维数组名就是这个数组的首地址</p>
<p>总结2：对二维数组名进行sizeof时，可以获取整个二维数组占用的内存空间大小</p>
</blockquote>
<h4 id="5-3-3-二维数组应用案例"><a href="#5-3-3-二维数组应用案例" class="headerlink" title="5.3.3 二维数组应用案例"></a><strong>5.3.3 二维数组应用案例</strong></h4><p><strong>考试成绩统计：</strong></p>
<p>案例描述：有三名同学（张三，李四，王五），在一次考试中的成绩分别如下表，<strong>请分别输出三名同学的总成绩</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>语文</th>
<th>数学</th>
<th>英语</th>
</tr>
</thead>
<tbody>
<tr>
<td>张三</td>
<td>100</td>
<td>100</td>
<td>100</td>
</tr>
<tr>
<td>李四</td>
<td>90</td>
<td>50</td>
<td>100</td>
</tr>
<tr>
<td>王五</td>
<td>60</td>
<td>70</td>
<td>80</td>
</tr>
</tbody>
</table>
</div>
<p><strong>参考答案：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> scores[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">	&#123;</span><br><span class="line">		&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">		&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">		&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;,</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">string</span> names[<span class="number">3</span>] = &#123; <span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			sum += scores[i][j];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; names[i] &lt;&lt; <span class="string">&quot;同学总成绩为： &quot;</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="6-函数"><a href="#6-函数" class="headerlink" title="6 函数"></a>6 函数</h2><h3 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h3><p><strong>作用：</strong>将一段经常使用的代码封装起来，减少重复代码</p>
<p>一个较大的程序，一般分为若干个程序块，每个模块实现特定的功能。</p>
<h3 id="6-2-函数的定义"><a href="#6-2-函数的定义" class="headerlink" title="6.2 函数的定义"></a>6.2 函数的定义</h3><p>函数的定义一般主要有5个步骤：</p>
<p>1、返回值类型 </p>
<p>2、函数名</p>
<p>3、参数表列</p>
<p>4、函数体语句 </p>
<p>5、return 表达式</p>
<p><strong>语法：</strong> </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">返回值类型 函数名 （参数列表）</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">       函数体语句</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span>表达式</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>返回值类型 ：一个函数可以返回一个值。在函数定义中</li>
<li>函数名：给函数起个名称</li>
<li>参数列表：使用该函数时，传入的数据</li>
<li>函数体语句：花括号内的代码，函数内需要执行的语句</li>
<li>return表达式： 和返回值类型挂钩，函数执行完后，返回相应的数据</li>
</ul>
<p><strong>示例：</strong>定义一个加法函数，实现两个数相加</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> sum = num1 + num2;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-3-函数的调用"><a href="#6-3-函数的调用" class="headerlink" title="6.3 函数的调用"></a>6.3 函数的调用</h3><p><strong>功能：</strong>使用定义好的函数</p>
<p><strong>语法：</strong><code>函数名（参数）</code></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> <span class="comment">//定义中的num1,num2称为形式参数，简称形参</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> sum = num1 + num2;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line">	<span class="comment">//调用add函数</span></span><br><span class="line">	<span class="keyword">int</span> sum = add(a, b);<span class="comment">//调用时的a，b称为实际参数，简称实参</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;sum = &quot;</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	a = <span class="number">100</span>;</span><br><span class="line">	b = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">	sum = add(a, b);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;sum = &quot;</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：函数定义里小括号内称为形参，函数调用时传入的参数称为实参</p>
</blockquote>
<h3 id="6-4-值传递"><a href="#6-4-值传递" class="headerlink" title="6.4 值传递"></a>6.4 值传递</h3><ul>
<li>所谓值传递，就是函数调用时实参将数值传入给形参</li>
<li>值传递时，==如果形参发生，并不会影响实参==</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;交换前：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> temp = num1;</span><br><span class="line">	num1 = num2;</span><br><span class="line">	num2 = temp;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;交换后：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//return ; 当函数声明时候，不需要返回值，可以不写return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">	swap(a, b);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;mian中的 a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;mian中的 b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结： 值传递时，形参是修饰不了实参的</p>
</blockquote>
<h3 id="6-5-函数的常见样式"><a href="#6-5-函数的常见样式" class="headerlink" title="6.5 函数的常见样式"></a><strong>6.5 函数的常见样式</strong></h3><p>常见的函数样式有4种</p>
<ol>
<li>无参无返</li>
<li>有参无返</li>
<li>无参有返</li>
<li>有参有返</li>
</ol>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数常见样式</span></span><br><span class="line"><span class="comment">//1、 无参无返</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//void a = 10; //无类型不可以创建变量,原因无法分配内存</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;this is test01&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="comment">//test01(); 函数调用</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、 有参无返</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;this is test02&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、无参有返</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;this is test03 &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、有参有返</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">test04</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;this is test04 &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">int</span> sum = a + b;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-6-函数的声明"><a href="#6-6-函数的声明" class="headerlink" title="6.6 函数的声明"></a>6.6 函数的声明</h3><p><strong>作用：</strong> 告诉编译器函数名称及如何调用函数。函数的实际主体可以单独定义。</p>
<ul>
<li>函数的<strong>声明可以多次</strong>，但是函数的<strong>定义只能有一次</strong></li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明可以多次，定义只能一次</span></span><br><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; max(a, b) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-7-函数的分文件编写"><a href="#6-7-函数的分文件编写" class="headerlink" title="6.7 函数的分文件编写"></a>6.7 函数的分文件编写</h3><p><strong>作用：</strong>让代码结构更加清晰</p>
<p>函数分文件编写一般有4个步骤</p>
<ol>
<li>创建后缀名为.h的头文件  </li>
<li>创建后缀名为.cpp的源文件</li>
<li>在头文件中写函数的声明</li>
<li>在源文件中写函数的定义</li>
</ol>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//swap.h文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现两个数字交换的函数声明</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//swap.cpp文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> temp = a;</span><br><span class="line">	a = b;</span><br><span class="line">	b = temp;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//main函数文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;swap.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">200</span>;</span><br><span class="line">	swap(a, b);</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="7-指针"><a href="#7-指针" class="headerlink" title="7 指针"></a>7 指针</h2><h3 id="7-1-指针的基本概念"><a href="#7-1-指针的基本概念" class="headerlink" title="7.1 指针的基本概念"></a>7.1 指针的基本概念</h3><p><strong>指针的作用：</strong> 可以通过指针间接访问内存</p>
<ul>
<li><p>内存编号是从0开始记录的，一般用十六进制数字表示</p>
</li>
<li><p>可以利用指针变量保存地址</p>
</li>
</ul>
<h3 id="7-2-指针变量的定义和使用"><a href="#7-2-指针变量的定义和使用" class="headerlink" title="7.2 指针变量的定义和使用"></a>7.2 指针变量的定义和使用</h3><p>指针变量定义语法： <code>数据类型 * 变量名；</code></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//1、指针的定义</span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>; <span class="comment">//定义整型变量a</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//指针定义语法： 数据类型 * 变量名 ;</span></span><br><span class="line">	<span class="keyword">int</span> * p;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//指针变量赋值</span></span><br><span class="line">	p = &amp;a; <span class="comment">//指针指向变量a的地址</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; &amp;a &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//打印数据a的地址</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; p &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//打印指针变量p</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//2、指针的使用</span></span><br><span class="line">	<span class="comment">//通过*操作指针变量指向的内存</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*p = &quot;</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>指针变量和普通变量的区别</p>
<ul>
<li>普通变量存放的是数据,指针变量存放的是地址</li>
<li>指针变量可以通过” * “操作符，操作指针变量指向的内存空间，这个过程称为解引用</li>
</ul>
<blockquote>
<p>总结1： 我们可以通过 &amp; 符号 获取变量的地址</p>
<p>总结2：利用指针可以记录地址</p>
<p>总结3：对指针变量解引用，可以操作指针指向的内存</p>
</blockquote>
<h3 id="7-3-指针所占内存空间"><a href="#7-3-指针所占内存空间" class="headerlink" title="7.3 指针所占内存空间"></a>7.3 指针所占内存空间</h3><p>提问：指针也是种数据类型，那么这种数据类型占用多少内存空间？</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> * p;</span><br><span class="line">	p = &amp;a; <span class="comment">//指针指向数据a的地址</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//* 解引用</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(p) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">char</span> *) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">float</span> *) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">double</span> *) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：所有指针类型在32位操作系统下是4个字节</p>
</blockquote>
<h3 id="7-4-空指针和野指针"><a href="#7-4-空指针和野指针" class="headerlink" title="7.4 空指针和野指针"></a>7.4 空指针和野指针</h3><p><strong>空指针</strong>：指针变量指向内存中编号为0的空间</p>
<p><strong>用途：</strong>初始化指针变量</p>
<p><strong>注意：</strong>空指针指向的内存是不可以访问的</p>
<p><strong>示例1：空指针</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//指针变量p指向内存地址编号为0的空间</span></span><br><span class="line">	<span class="keyword">int</span> * p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//访问空指针报错 </span></span><br><span class="line">	<span class="comment">//内存编号0 ~255为系统占用内存，不允许用户访问</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>野指针</strong>：指针变量指向非法的内存空间</p>
<p><strong>示例2：野指针</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//指针变量p指向内存地址编号为0x1100的空间</span></span><br><span class="line">	<span class="keyword">int</span> * p = (<span class="keyword">int</span> *)<span class="number">0x1100</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//访问野指针报错 </span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：空指针和野指针都不是我们申请的空间，因此不要访问。</p>
</blockquote>
<h3 id="7-5-const修饰指针"><a href="#7-5-const修饰指针" class="headerlink" title="7.5 const修饰指针"></a>7.5 const修饰指针</h3><p>const修饰指针有三种情况</p>
<ol>
<li>const修饰指针   —- 常量指针</li>
<li>const修饰常量   —- 指针常量</li>
<li>const即修饰指针，又修饰常量</li>
</ol>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//const修饰的是指针，指针指向可以改，指针指向的值不可以更改</span></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span> * p1 = &amp;a; </span><br><span class="line">	p1 = &amp;b; <span class="comment">//正确</span></span><br><span class="line">	<span class="comment">//*p1 = 100;  报错</span></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="comment">//const修饰的是常量，指针指向不可以改，指针指向的值可以更改</span></span><br><span class="line">	<span class="keyword">int</span> * <span class="keyword">const</span> p2 = &amp;a;</span><br><span class="line">	<span class="comment">//p2 = &amp;b; //错误</span></span><br><span class="line">	*p2 = <span class="number">100</span>; <span class="comment">//正确</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//const既修饰指针又修饰常量</span></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span> * <span class="keyword">const</span> p3 = &amp;a;</span><br><span class="line">	<span class="comment">//p3 = &amp;b; //错误</span></span><br><span class="line">	<span class="comment">//*p3 = 100; //错误</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>技巧：看const右侧紧跟着的是指针还是常量, 是指针就是常量指针，是常量就是指针常量</p>
</blockquote>
<h3 id="7-6-指针和数组"><a href="#7-6-指针和数组" class="headerlink" title="7.6 指针和数组"></a>7.6 指针和数组</h3><p><strong>作用：</strong>利用指针访问数组中元素</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> arr[] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> * p = arr;  <span class="comment">//指向数组的指针</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;第一个元素： &quot;</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;指针访问第一个元素： &quot;</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//利用指针遍历数组</span></span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		p++;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="7-7-指针和函数"><a href="#7-7-指针和函数" class="headerlink" title="7.7 指针和函数"></a>7.7 指针和函数</h3><p><strong>作用：</strong>利用指针作函数参数，可以修改实参的值</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap1</span><span class="params">(<span class="keyword">int</span> a ,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> temp = a;</span><br><span class="line">	a = b; </span><br><span class="line">	b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap2</span><span class="params">(<span class="keyword">int</span> * p1, <span class="keyword">int</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> temp = *p1;</span><br><span class="line">	*p1 = *p2;</span><br><span class="line">	*p2 = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">	swap1(a, b); <span class="comment">// 值传递不会改变实参</span></span><br><span class="line"></span><br><span class="line">	swap2(&amp;a, &amp;b); <span class="comment">//地址传递会改变实参</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：如果不想修改实参，就用值传递，如果想修改实参，就用地址传递</p>
</blockquote>
<h3 id="7-8-指针、数组、函数"><a href="#7-8-指针、数组、函数" class="headerlink" title="7.8 指针、数组、函数"></a>7.8 指针、数组、函数</h3><p><strong>案例描述：</strong>封装一个函数，利用冒泡排序，实现对整型数组的升序排序</p>
<p>例如数组：int arr[10] = { 4,3,6,9,1,2,10,8,7,5 };</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//冒泡排序函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span> * arr, <span class="keyword">int</span> len)</span>  <span class="comment">//int * arr 也可以写为int arr[]</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> temp = arr[j];</span><br><span class="line">				arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">				arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印数组函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">5</span> &#125;;</span><br><span class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line"></span><br><span class="line">	bubbleSort(arr, len);</span><br><span class="line"></span><br><span class="line">	printArray(arr, len);</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：当数组名传入到函数作为参数时，被退化为指向首元素的指针</p>
</blockquote>
<h2 id="8-结构体"><a href="#8-结构体" class="headerlink" title="8 结构体"></a>8 结构体</h2><h3 id="8-1-结构体基本概念"><a href="#8-1-结构体基本概念" class="headerlink" title="8.1 结构体基本概念"></a>8.1 结构体基本概念</h3><p>结构体属于用户==自定义的数据类型==，允许用户存储不同的数据类型</p>
<h3 id="8-2-结构体定义和使用"><a href="#8-2-结构体定义和使用" class="headerlink" title="8.2 结构体定义和使用"></a>8.2 结构体定义和使用</h3><p><strong>语法：</strong><code>struct 结构体名 &#123; 结构体成员列表 &#125;；</code></p>
<p>通过结构体创建变量的方式有三种：</p>
<ul>
<li>struct 结构体名 变量名</li>
<li>struct 结构体名 变量名 = { 成员1值 ， 成员2值…}</li>
<li>定义结构体时顺便创建变量</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">//成员列表</span></span><br><span class="line">	<span class="built_in">string</span> name;  <span class="comment">//姓名</span></span><br><span class="line">	<span class="keyword">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line">	<span class="keyword">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;stu3; <span class="comment">//结构体变量创建方式3 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//结构体变量创建方式1</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu1</span>;</span> <span class="comment">//struct 关键字可以省略</span></span><br><span class="line"></span><br><span class="line">	stu1.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">	stu1.age = <span class="number">18</span>;</span><br><span class="line">	stu1.score = <span class="number">100</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu1.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu1.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu1.score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//结构体变量创建方式2</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu2</span> =</span> &#123; <span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">60</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu2.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu2.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu2.score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	stu3.name = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line">	stu3.age = <span class="number">18</span>;</span><br><span class="line">	stu3.score = <span class="number">80</span>;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu3.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu3.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu3.score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结1：定义结构体时的关键字是struct，不可省略</p>
<p>总结2：创建结构体变量时，关键字struct可以省略</p>
<p>总结3：结构体变量利用操作符 ‘’.’’  访问成员</p>
</blockquote>
<h3 id="8-3-结构体数组"><a href="#8-3-结构体数组" class="headerlink" title="8.3 结构体数组"></a>8.3 结构体数组</h3><p><strong>作用：</strong>将自定义的结构体放入到数组中方便维护</p>
<p><strong>语法：</strong><code>struct  结构体名 数组名[元素个数] = &#123;  &#123;&#125; , &#123;&#125; , ... &#123;&#125; &#125;</code></p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">//成员列表</span></span><br><span class="line">	<span class="built_in">string</span> name;  <span class="comment">//姓名</span></span><br><span class="line">	<span class="keyword">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line">	<span class="keyword">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//结构体数组</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">arr</span>[3]=</span></span><br><span class="line">	&#123;</span><br><span class="line">		&#123;<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">80</span> &#125;,</span><br><span class="line">		&#123;<span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">60</span> &#125;,</span><br><span class="line">		&#123;<span class="string">&quot;王五&quot;</span>,<span class="number">20</span>,<span class="number">70</span> &#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; arr[i].name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; arr[i].age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; arr[i].score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="8-4-结构体指针"><a href="#8-4-结构体指针" class="headerlink" title="8.4 结构体指针"></a>8.4 结构体指针</h3><p><strong>作用：</strong>通过指针访问结构体中的成员</p>
<ul>
<li>利用操作符 <code>-&gt;</code>可以通过结构体指针访问结构体属性</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">//成员列表</span></span><br><span class="line">	<span class="built_in">string</span> name;  <span class="comment">//姓名</span></span><br><span class="line">	<span class="keyword">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line">	<span class="keyword">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu</span> =</span> &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span>, &#125;;</span><br><span class="line">	</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">student</span> * <span class="title">p</span> =</span> &amp;stu;</span><br><span class="line">	</span><br><span class="line">	p-&gt;score = <span class="number">80</span>; <span class="comment">//指针通过 -&gt; 操作符可以访问成员</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：结构体指针可以通过 -&gt; 操作符 来访问结构体中的成员</p>
</blockquote>
<h3 id="8-5-结构体嵌套结构体"><a href="#8-5-结构体嵌套结构体" class="headerlink" title="8.5 结构体嵌套结构体"></a>8.5 结构体嵌套结构体</h3><p><strong>作用：</strong> 结构体中的成员可以是另一个结构体</p>
<p><strong>例如：</strong>每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">//成员列表</span></span><br><span class="line">	<span class="built_in">string</span> name;  <span class="comment">//姓名</span></span><br><span class="line">	<span class="keyword">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line">	<span class="keyword">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//教师结构体定义</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">teacher</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//成员列表</span></span><br><span class="line">	<span class="keyword">int</span> id; <span class="comment">//职工编号</span></span><br><span class="line">	<span class="built_in">string</span> name;  <span class="comment">//教师姓名</span></span><br><span class="line">	<span class="keyword">int</span> age;   <span class="comment">//教师年龄</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu</span>;</span> <span class="comment">//子结构体 学生</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">teacher</span> <span class="title">t1</span>;</span></span><br><span class="line">	t1.id = <span class="number">10000</span>;</span><br><span class="line">	t1.name = <span class="string">&quot;老王&quot;</span>;</span><br><span class="line">	t1.age = <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line">	t1.stu.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">	t1.stu.age = <span class="number">18</span>;</span><br><span class="line">	t1.stu.score = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;教师 职工编号： &quot;</span> &lt;&lt; t1.id &lt;&lt; <span class="string">&quot; 姓名： &quot;</span> &lt;&lt; t1.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; t1.age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;辅导学员 姓名： &quot;</span> &lt;&lt; t1.stu.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; t1.stu.age &lt;&lt; <span class="string">&quot; 考试分数： &quot;</span> &lt;&lt; t1.stu.score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>总结：</strong>在结构体中可以定义另一个结构体作为成员，用来解决实际问题</p>
<h3 id="8-6-结构体做函数参数"><a href="#8-6-结构体做函数参数" class="headerlink" title="8.6 结构体做函数参数"></a>8.6 结构体做函数参数</h3><p><strong>作用：</strong>将结构体作为参数向函数中传递</p>
<p>传递方式有两种：</p>
<ul>
<li>值传递</li>
<li>地址传递</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">//成员列表</span></span><br><span class="line">	<span class="built_in">string</span> name;  <span class="comment">//姓名</span></span><br><span class="line">	<span class="keyword">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line">	<span class="keyword">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printStudent</span><span class="params">(student stu )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	stu.age = <span class="number">28</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;子函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printStudent2</span><span class="params">(student *stu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	stu-&gt;age = <span class="number">28</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;子函数中 姓名：&quot;</span> &lt;&lt; stu-&gt;name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu-&gt;age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu-&gt;score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	student stu = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span>&#125;;</span><br><span class="line">	<span class="comment">//值传递</span></span><br><span class="line">	printStudent(stu);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;主函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//地址传递</span></span><br><span class="line">	printStudent2(&amp;stu);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;主函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总结：如果不想修改主函数中的数据，用值传递，反之用地址传递</p>
</blockquote>
<h3 id="8-7-结构体中-const使用场景"><a href="#8-7-结构体中-const使用场景" class="headerlink" title="8.7 结构体中 const使用场景"></a>8.7 结构体中 const使用场景</h3><p><strong>作用：</strong>用const来防止误操作</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">//成员列表</span></span><br><span class="line">	<span class="built_in">string</span> name;  <span class="comment">//姓名</span></span><br><span class="line">	<span class="keyword">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line">	<span class="keyword">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const使用场景</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printStudent</span><span class="params">(<span class="keyword">const</span> student *stu)</span> <span class="comment">//加const防止函数体中的误操作</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//stu-&gt;age = 100; //操作失败，因为加了const修饰</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu-&gt;name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu-&gt;age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu-&gt;score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	student stu = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span> &#125;;</span><br><span class="line"></span><br><span class="line">	printStudent(&amp;stu);</span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="8-8-结构体案例"><a href="#8-8-结构体案例" class="headerlink" title="8.8 结构体案例"></a>8.8 结构体案例</h3><h4 id="8-8-1-案例1"><a href="#8-8-1-案例1" class="headerlink" title="8.8.1 案例1"></a>8.8.1 案例1</h4><p><strong>案例描述：</strong></p>
<p>学校正在做毕设项目，每名老师带领5个学生，总共有3名老师，需求如下</p>
<p>设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员</p>
<p>学生的成员有姓名、考试分数，创建数组存放3名老师，通过函数给每个老师及所带的学生赋值</p>
<p>最终打印出老师数据以及老师所带的学生数据。</p>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="built_in">string</span> name;</span><br><span class="line">	<span class="keyword">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Teacher</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="built_in">string</span> name;</span><br><span class="line">	Student sArray[<span class="number">5</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">allocateSpace</span><span class="params">(Teacher tArray[] , <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">string</span> tName = <span class="string">&quot;教师&quot;</span>;</span><br><span class="line">	<span class="built_in">string</span> sName = <span class="string">&quot;学生&quot;</span>;</span><br><span class="line">	<span class="built_in">string</span> nameSeed = <span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		tArray[i].name = tName + nameSeed[i];</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			tArray[i].sArray[j].name = sName + nameSeed[j];</span><br><span class="line">			tArray[i].sArray[j].score = rand() % <span class="number">61</span> + <span class="number">40</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printTeachers</span><span class="params">(Teacher tArray[], <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; tArray[i].name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; tArray[i].sArray[j].name &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; tArray[i].sArray[j].score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>)); <span class="comment">//随机数种子 头文件 #include &lt;ctime&gt;</span></span><br><span class="line"></span><br><span class="line">	Teacher tArray[<span class="number">3</span>]; <span class="comment">//老师数组</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(tArray) / <span class="keyword">sizeof</span>(Teacher);</span><br><span class="line"></span><br><span class="line">	allocateSpace(tArray, len); <span class="comment">//创建数据</span></span><br><span class="line"></span><br><span class="line">	printTeachers(tArray, len); <span class="comment">//打印数据</span></span><br><span class="line">	</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="8-8-2-案例2"><a href="#8-8-2-案例2" class="headerlink" title="8.8.2 案例2"></a>8.8.2 案例2</h4><p><strong>案例描述：</strong></p>
<p>设计一个英雄的结构体，包括成员姓名，年龄，性别;创建结构体数组，数组中存放5名英雄。</p>
<p>通过冒泡排序的算法，将数组中的英雄按照年龄进行升序排序，最终打印排序后的结果。</p>
<p>五名英雄信息如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;,</span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//英雄结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hero</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="built_in">string</span> name;</span><br><span class="line">	<span class="keyword">int</span> age;</span><br><span class="line">	<span class="built_in">string</span> sex;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(hero arr[] , <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (arr[j].age &gt; arr[j + <span class="number">1</span>].age)</span><br><span class="line">			&#123;</span><br><span class="line">				hero temp = arr[j];</span><br><span class="line">				arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">				arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printHeros</span><span class="params">(hero arr[], <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名： &quot;</span> &lt;&lt; arr[i].name &lt;&lt; <span class="string">&quot; 性别： &quot;</span> &lt;&lt; arr[i].sex &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; arr[i].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">hero</span> <span class="title">arr</span>[5] =</span></span><br><span class="line">	&#123;</span><br><span class="line">		&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">		&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">		&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">		&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">		&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;,</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(hero); <span class="comment">//获取数组元素个数</span></span><br><span class="line"></span><br><span class="line">	bubbleSort(arr, len); <span class="comment">//排序</span></span><br><span class="line"></span><br><span class="line">	printHeros(arr, len); <span class="comment">//打印</span></span><br><span class="line"></span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id=""><a href="#" class="headerlink" title=" "></a> </h1>]]></content>
      <categories>
        <category>充电</category>
      </categories>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>AzureKinectDK与PCL点云生成</title>
    <url>/2020/10/08/AzureKinectDC%E4%B8%8EPCL%E7%82%B9%E4%BA%91%E7%94%9F%E6%88%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="AzureKinectDK与PCL点云生成"><a href="#AzureKinectDK与PCL点云生成" class="headerlink" title="AzureKinectDK与PCL点云生成"></a>AzureKinectDK与PCL点云生成</h1><blockquote>
<p>参考博文：</p>
<p><a href="https://blog.csdn.net/weixin_39746114/article/details/107835727">https://blog.csdn.net/weixin_39746114/article/details/107835727</a></p>
</blockquote>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008095211.jpg" alt=""></p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008095233.jpg" alt=""></p>
<h2 id="AzureKinectDK"><a href="#AzureKinectDK" class="headerlink" title="AzureKinectDK"></a>AzureKinectDK</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008094515.png" style="zoom:50%;" /></p>
<p>Azure Kinect DK 是一款开发人员套件和 PC 外部设备，它搭载 100 万像素高级深度摄像头、360˚ 麦克风阵列，1200万像素全高清摄像头和方向传感器，适用于先进的计算机视觉和语音模型开发。它的长度不到13厘米，厚度仅为4厘米。</p>
<p>系统要求：采用第7代 Intel® CoreTM i3 处理器（双核 2.4GHz 包含 HD620 GPU 或更快）的 Windows 10® 计算机、USB 3.0 端口、4GB 内存。不支持 Windows 10 S 模式。人体跟踪等其他功能可能需要更高级的 PC 硬件。</p>
<h2 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h2><p><img src="https://gitee.com/JunLuJun/up/raw/master/20201008094609.jpg" alt=""></p>
<ol>
<li>100 万像素深度传感器，具有宽、窄视场角 (FOV) 选项，可针对应用程序进行优化</li>
<li>7 麦克风阵列，可用于远场语音和声音捕获</li>
<li>1200 万像素 RGB 摄像头，提供和深度数据匹配的彩色图像数据流</li>
<li>加速计和陀螺仪 (IMU)，可用于传感器方向和空间跟踪</li>
<li>外部同步引脚，可轻松同步多个 Kinect 设备的传感器数据流</li>
</ol>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ol>
<li><p>main.cpp</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;k4a/k4a.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;array&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Dense&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/point_cloud.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/point_types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;pcl/visualization/cloud_viewer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/visualization/pcl_visualizer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/make_shared.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;boost/thread.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;k4a_grabber.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/filters/passthrough.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> boost;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> pcl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pcl::PointXYZRGBA PointType;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">viewerOneOff</span><span class="params">(visualization::PCLVisualizer&amp; viewer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	viewer.setBackgroundColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);   <span class="comment">//设置背景颜色为黑色</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">uint32_t</span> deviceCount = k4a::device::get_installed_count();</span><br><span class="line">	<span class="keyword">if</span> (deviceCount == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;no azure kinect devices detected!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// PCL Visualizer</span></span><br><span class="line">	<span class="function">boost::<span class="built_in">shared_ptr</span>&lt;pcl::visualization::PCLVisualizer&gt; <span class="title">viewer</span><span class="params">(<span class="keyword">new</span> pcl::visualization::PCLVisualizer(<span class="string">&quot;Point Cloud Viewer&quot;</span>))</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//定义初始点云</span></span><br><span class="line">	pcl::PointCloud&lt;pcl::PointXYZRGBA&gt;::<span class="function">Ptr <span class="title">cloud</span><span class="params">(<span class="keyword">new</span> pcl::PointCloud&lt;pcl::PointXYZRGBA&gt;)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 回调函数</span></span><br><span class="line">	boost::mutex mutex;</span><br><span class="line">	boost::function&lt;<span class="keyword">void</span>(<span class="keyword">const</span> pcl::PointCloud&lt;PointType&gt;::ConstPtr&amp;)&gt; function =</span><br><span class="line">		[&amp;cloud, &amp;mutex](<span class="keyword">const</span> pcl::PointCloud&lt;PointType&gt;::ConstPtr&amp; ptr)</span><br><span class="line">	&#123;</span><br><span class="line">		boost::mutex::scoped_lock lock(mutex);</span><br><span class="line">		<span class="comment">//-----------------------------------------</span></span><br><span class="line">		<span class="comment">/* Point Cloud Processing */</span></span><br><span class="line">		<span class="comment">//-----------------------------------------</span></span><br><span class="line">		cloud = ptr-&gt;makeShared();</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 定义grabber</span></span><br><span class="line">	boost::<span class="built_in">shared_ptr</span>&lt;pcl::Grabber&gt; grabber =</span><br><span class="line">		boost::make_shared&lt;pcl::KinectAzureDKGrabber&gt;(<span class="number">0</span>, K4A_DEPTH_MODE_WFOV_2X2BINNED, K4A_IMAGE_FORMAT_COLOR_BGRA32, K4A_COLOR_RESOLUTION_720P);</span><br><span class="line">	<span class="comment">//强制类型转换</span></span><br><span class="line">	boost::<span class="built_in">shared_ptr</span>&lt;pcl::KinectAzureDKGrabber&gt; grabber_ = boost::dynamic_pointer_cast&lt;pcl::KinectAzureDKGrabber&gt;(grabber);</span><br><span class="line">	<span class="comment">//注册回调函数</span></span><br><span class="line">	boost::signals2::connection connection = grabber-&gt;registerCallback(function);</span><br><span class="line">	<span class="comment">//开始</span></span><br><span class="line">	grabber-&gt;start();</span><br><span class="line"></span><br><span class="line">	k4a::calibration calibration = grabber_-&gt;getCalibration();</span><br><span class="line">	<span class="keyword">k4a_calibration_intrinsic_parameters_t</span>* intrinsics = &amp;calibration.color_camera_calibration.intrinsics.parameters;</span><br><span class="line">	Eigen::Matrix3f intrinsics_eigen;</span><br><span class="line">	intrinsics_eigen &lt;&lt;</span><br><span class="line">		intrinsics-&gt;param.fx, <span class="number">0.0f</span>, intrinsics-&gt;param.cx,</span><br><span class="line">		<span class="number">0.0f</span>, intrinsics-&gt;param.fy, intrinsics-&gt;param.cy,</span><br><span class="line">		<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>;</span><br><span class="line">	<span class="comment">/*Eigen::Matrix4f extrinsics_eigen = Eigen::Matrix4f::Identity();*/</span></span><br><span class="line">	Eigen::Matrix4f extrinsics_eigen;</span><br><span class="line">	extrinsics_eigen &lt;&lt; <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">		<span class="number">0.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">		<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">		<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>; <span class="comment">//看起来方向是正确的 </span></span><br><span class="line">	viewer-&gt;setCameraParameters(intrinsics_eigen, extrinsics_eigen);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//显示采集到的点云数据</span></span><br><span class="line">	<span class="keyword">while</span> (!viewer-&gt;wasStopped())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// Update Viewer</span></span><br><span class="line">		viewer-&gt;spinOnce();</span><br><span class="line">		boost::<span class="function">mutex::scoped_try_lock <span class="title">lock</span><span class="params">(mutex)</span></span>;</span><br><span class="line">		<span class="keyword">if</span> (lock.owns_lock() &amp;&amp; cloud)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//pcl::PassThrough&lt;pcl::PointXYZRGBA&gt; pass;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">//pass.setInputCloud(cloud);            //设置输入点云</span></span><br><span class="line">			<span class="comment">//pass.setFilterFieldName(&quot;z&quot;);         //设置过滤时所需要点云类型的Z字段</span></span><br><span class="line">			<span class="comment">//pass.setFilterLimits(0.5, 1.08);        //设置在过滤字段的范围</span></span><br><span class="line">			<span class="comment">//pass.setFilterLimitsNegative(true);   //设置保留范围内还是过滤掉范围内</span></span><br><span class="line">			<span class="comment">//pass.filter(*cloud);            //执行滤波，保存过滤结果在cloud_filtered</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">// Update Point Cloud</span></span><br><span class="line">			<span class="keyword">if</span> (!viewer-&gt;updatePointCloud(cloud, <span class="string">&quot;cloud&quot;</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				viewer-&gt;addPointCloud(cloud, <span class="string">&quot;cloud&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (_kbhit())</span><br><span class="line">		&#123;</span><br><span class="line">			grabber-&gt;stop();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">// Stop Grabber</span></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	pcl::<span class="function">visualization::CloudViewer <span class="title">pviewer</span><span class="params">(<span class="string">&quot;Cloud Viewer&quot;</span>)</span></span>;     <span class="comment">//创建viewer对象</span></span><br><span class="line">	pviewer.showCloud(cloud);</span><br><span class="line">	pviewer.runOnVisualizationThreadOnce(viewerOneOff);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">// Disconnect Callback Function</span></span><br><span class="line">	<span class="keyword">if</span> (connection.connected())</span><br><span class="line">	&#123;</span><br><span class="line">		connection.disconnect();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">std</span>::system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>k4a_grabber.h</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;k4a/k4a.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/io/boost.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/io/grabber.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/point_cloud.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/point_types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/thread/thread.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> pcl</span><br><span class="line">&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">pcl</span>:</span>:PointXYZ;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">pcl</span>:</span>:PointXYZI;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">pcl</span>:</span>:PointXYZRGB;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">pcl</span>:</span>:PointXYZRGBA;</span><br><span class="line">	<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="class"><span class="keyword">class</span> <span class="title">pcl</span>:</span>:PointCloud;</span><br><span class="line"></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">KinectAzureDKGrabber</span> :</span> <span class="keyword">public</span> pcl::Grabber</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		KinectAzureDKGrabber(<span class="keyword">const</span> <span class="keyword">int</span>&amp; device_id_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; depth_mode_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; color_format_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; color_resolution_);</span><br><span class="line">		<span class="keyword">virtual</span> ~KinectAzureDKGrabber() <span class="keyword">throw</span> ();</span><br><span class="line">		<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>;</span><br><span class="line">		<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span>;</span><br><span class="line">		<span class="function"><span class="keyword">virtual</span> <span class="keyword">bool</span> <span class="title">isRunning</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line">		<span class="function"><span class="keyword">virtual</span> <span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">getName</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line">		<span class="function"><span class="keyword">virtual</span> <span class="keyword">float</span> <span class="title">getFramesPerSecond</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(signal_KinectAzureDK_PointXYZ)</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;<span class="keyword">const</span> pcl::PointCloud&lt;pcl::PointXYZ&gt;&gt;&amp;)</span></span>;</span><br><span class="line">		<span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(signal_KinectAzureDK_PointXYZI)</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;<span class="keyword">const</span> pcl::PointCloud&lt;pcl::PointXYZI&gt;&gt;&amp;)</span></span>;</span><br><span class="line">		<span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(signal_KinectAzureDK_PointXYZRGB)</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;<span class="keyword">const</span> pcl::PointCloud&lt;pcl::PointXYZRGB&gt;&gt;&amp;)</span></span>;</span><br><span class="line">		<span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(signal_KinectAzureDK_PointXYZRGBA)</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;<span class="keyword">const</span> pcl::PointCloud&lt;pcl::PointXYZRGBA&gt;&gt;&amp;)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span>:</span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">setupDevice</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span>&amp; device_id_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; depth_mode_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; color_format_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; color_resolution_)</span></span>;</span><br><span class="line"></span><br><span class="line">		boost::signals2::signal&lt;signal_KinectAzureDK_PointXYZ&gt;* signal_PointXYZ;</span><br><span class="line">		boost::signals2::signal&lt;signal_KinectAzureDK_PointXYZI&gt;* signal_PointXYZI;</span><br><span class="line">		boost::signals2::signal&lt;signal_KinectAzureDK_PointXYZRGB&gt;* signal_PointXYZRGB;</span><br><span class="line">		boost::signals2::signal&lt;signal_KinectAzureDK_PointXYZRGBA&gt;* signal_PointXYZRGBA;</span><br><span class="line"></span><br><span class="line">		pcl::PointCloud&lt;pcl::PointXYZ&gt;::<span class="function">Ptr <span class="title">convertDepthToPointXYZ</span><span class="params">()</span></span>;</span><br><span class="line">		pcl::PointCloud&lt;pcl::PointXYZI&gt;::<span class="function">Ptr <span class="title">convertInfraredDepthToPointXYZI</span><span class="params">()</span></span>;</span><br><span class="line">		pcl::PointCloud&lt;pcl::PointXYZRGB&gt;::<span class="function">Ptr <span class="title">convertRGBDepthToPointXYZRGB</span><span class="params">()</span></span>;</span><br><span class="line">		pcl::PointCloud&lt;pcl::PointXYZRGBA&gt;::<span class="function">Ptr <span class="title">convertRGBADepthToPointXYZRGBA</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">std</span>::thread thread;</span><br><span class="line">		<span class="keyword">mutable</span> <span class="built_in">std</span>::mutex mutex;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">threadFunction</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">bool</span> quit;</span><br><span class="line">		<span class="keyword">bool</span> running;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">k4a_device_configuration_t</span> config;</span><br><span class="line">		k4a::device dev;</span><br><span class="line">		<span class="keyword">int</span> device_id;</span><br><span class="line"></span><br><span class="line">		k4a::calibration calibration;</span><br><span class="line">		k4a::transformation transformation;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> colorWidth;</span><br><span class="line">		<span class="keyword">int</span> colorHeight;</span><br><span class="line">		k4a::image colorImage;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> depthWidth;</span><br><span class="line">		<span class="keyword">int</span> depthHeight;</span><br><span class="line">		k4a::image depthImage;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> infraredWidth;</span><br><span class="line">		<span class="keyword">int</span> infraredHeight;</span><br><span class="line">		k4a::image infraredImage;</span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">		<span class="function">k4a::calibration <span class="title">getCalibration</span><span class="params">()</span></span>;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>k4a_grabber.cpp</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Dense&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;k4a_grabber.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">pcl::KinectAzureDKGrabber::KinectAzureDKGrabber(<span class="keyword">const</span> <span class="keyword">int</span>&amp; device_id_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; depth_mode_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; color_format_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; color_resolution_) :</span><br><span class="line">	config(K4A_DEVICE_CONFIG_INIT_DISABLE_ALL),</span><br><span class="line">	dev(<span class="literal">nullptr</span>),</span><br><span class="line">	colorImage(<span class="literal">nullptr</span>),</span><br><span class="line">	depthImage(<span class="literal">nullptr</span>),</span><br><span class="line">	infraredImage(<span class="literal">nullptr</span>),</span><br><span class="line">	running(<span class="literal">false</span>),</span><br><span class="line">	quit(<span class="literal">false</span>),</span><br><span class="line">	signal_PointXYZ(<span class="literal">nullptr</span>),</span><br><span class="line">	signal_PointXYZI(<span class="literal">nullptr</span>),</span><br><span class="line">	signal_PointXYZRGB(<span class="literal">nullptr</span>),</span><br><span class="line">	signal_PointXYZRGBA(<span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line">	setupDevice(device_id_, depth_mode_, color_format_, color_resolution_);</span><br><span class="line"></span><br><span class="line">	signal_PointXYZ = createSignal&lt;signal_KinectAzureDK_PointXYZ&gt;();</span><br><span class="line">	signal_PointXYZI = createSignal&lt;signal_KinectAzureDK_PointXYZI&gt;();</span><br><span class="line">	signal_PointXYZRGB = createSignal&lt;signal_KinectAzureDK_PointXYZRGB&gt;();</span><br><span class="line">	signal_PointXYZRGBA = createSignal&lt;signal_KinectAzureDK_PointXYZRGBA&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pcl::KinectAzureDKGrabber::~KinectAzureDKGrabber() <span class="keyword">throw</span>()</span><br><span class="line">&#123;</span><br><span class="line">	stop();</span><br><span class="line"></span><br><span class="line">	disconnect_all_slots&lt;signal_KinectAzureDK_PointXYZ&gt;();</span><br><span class="line">	disconnect_all_slots&lt;signal_KinectAzureDK_PointXYZI&gt;();</span><br><span class="line">	disconnect_all_slots&lt;signal_KinectAzureDK_PointXYZRGB&gt;();</span><br><span class="line">	disconnect_all_slots&lt;signal_KinectAzureDK_PointXYZRGBA&gt;();</span><br><span class="line"></span><br><span class="line">	thread.join();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (dev)</span><br><span class="line">	&#123;</span><br><span class="line">		transformation.destroy();</span><br><span class="line">		dev.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> pcl::KinectAzureDKGrabber::start()</span><br><span class="line">&#123;</span><br><span class="line">	dev = k4a::device::open(device_id);</span><br><span class="line">	dev.start_cameras(&amp;config);</span><br><span class="line">	calibration = dev.get_calibration(config.depth_mode, config.color_resolution);</span><br><span class="line">	transformation = k4a::transformation(calibration);</span><br><span class="line"></span><br><span class="line">	running = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	thread = <span class="built_in">std</span>::thread(&amp;KinectAzureDKGrabber::threadFunction, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">k4a::calibration pcl::KinectAzureDKGrabber::getCalibration()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> calibration;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> pcl::KinectAzureDKGrabber::stop()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="function"><span class="built_in">std</span>::unique_lock&lt;<span class="built_in">std</span>::mutex&gt; <span class="title">lock</span><span class="params">(mutex)</span></span>;</span><br><span class="line"></span><br><span class="line">	quit = <span class="literal">true</span>;</span><br><span class="line">	running = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">	lock.unlock();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> pcl::KinectAzureDKGrabber::isRunning() <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="function"><span class="built_in">std</span>::unique_lock&lt;<span class="built_in">std</span>::mutex&gt; <span class="title">lock</span><span class="params">(mutex)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> running;</span><br><span class="line"></span><br><span class="line">	lock.unlock();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> pcl::KinectAzureDKGrabber::getName() <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">std</span>::<span class="built_in">string</span>(<span class="string">&quot;KinectAzureDKGrabber: &quot;</span> + <span class="built_in">std</span>::to_string(device_id));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> pcl::KinectAzureDKGrabber::getFramesPerSecond() <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> config.camera_fps;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> pcl::KinectAzureDKGrabber::setupDevice(<span class="keyword">const</span> <span class="keyword">int</span>&amp; device_id_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; depth_mode_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; color_format_, <span class="keyword">const</span> <span class="keyword">int</span>&amp; color_resolution_)</span><br><span class="line">&#123;</span><br><span class="line">	device_id = device_id_;</span><br><span class="line"></span><br><span class="line">	config.camera_fps = K4A_FRAMES_PER_SECOND_30;</span><br><span class="line">	config.depth_mode = <span class="keyword">k4a_depth_mode_t</span>(depth_mode_);</span><br><span class="line">	config.color_format = <span class="keyword">k4a_image_format_t</span>(color_format_);</span><br><span class="line">	config.color_resolution = <span class="keyword">k4a_color_resolution_t</span>(color_resolution_);</span><br><span class="line">	config.synchronized_images_only = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> pcl::KinectAzureDKGrabber::threadFunction()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">while</span> (!quit)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="function"><span class="built_in">std</span>::unique_lock&lt;<span class="built_in">std</span>::mutex&gt; <span class="title">lock</span><span class="params">(mutex)</span></span>;</span><br><span class="line">		k4a::capture capture;</span><br><span class="line">		<span class="keyword">if</span> (!dev.get_capture(&amp;capture, <span class="built_in">std</span>::chrono::milliseconds(<span class="number">0</span>)))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		depthImage = capture.get_depth_image();</span><br><span class="line">		<span class="keyword">if</span> (depthImage == <span class="literal">nullptr</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="built_in">std</span>::exception(<span class="string">&quot;Failed to get depth image from capture\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		colorImage = capture.get_color_image();</span><br><span class="line">		<span class="keyword">if</span> (colorImage == <span class="literal">nullptr</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="built_in">std</span>::exception(<span class="string">&quot;Failed to get color image from capture\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		infraredImage = capture.get_ir_image();</span><br><span class="line">		<span class="keyword">if</span> (infraredImage == <span class="literal">nullptr</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="built_in">std</span>::exception(<span class="string">&quot;Failed to get IR image from capture\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		lock.unlock();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (signal_PointXYZ-&gt;num_slots() &gt; <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			signal_PointXYZ-&gt;<span class="keyword">operator</span>()(convertDepthToPointXYZ());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (signal_PointXYZI-&gt;num_slots() &gt; <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			signal_PointXYZI-&gt;<span class="keyword">operator</span>()(convertInfraredDepthToPointXYZI());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (signal_PointXYZRGB-&gt;num_slots() &gt; <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			signal_PointXYZRGB-&gt;<span class="keyword">operator</span>()(convertRGBDepthToPointXYZRGB());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (signal_PointXYZRGBA-&gt;num_slots() &gt; <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			signal_PointXYZRGBA-&gt;<span class="keyword">operator</span>()(convertRGBADepthToPointXYZRGBA());</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pcl::PointCloud&lt;pcl::PointXYZ&gt;::Ptr pcl::KinectAzureDKGrabber::convertDepthToPointXYZ()</span><br><span class="line">&#123;</span><br><span class="line">	PointCloud&lt;PointXYZ&gt;::<span class="function">Ptr <span class="title">cloud</span><span class="params">(<span class="keyword">new</span> PointCloud&lt;PointXYZ&gt;())</span></span>;</span><br><span class="line">	<span class="keyword">int</span> color_image_width_pixels = colorImage.get_width_pixels();</span><br><span class="line">	<span class="keyword">int</span> color_image_height_pixels = colorImage.get_height_pixels();</span><br><span class="line"></span><br><span class="line">	k4a::image transformed_depth_image = <span class="literal">NULL</span>;</span><br><span class="line">	transformed_depth_image = k4a::image::create(K4A_IMAGE_FORMAT_DEPTH16,</span><br><span class="line">		color_image_width_pixels,</span><br><span class="line">		color_image_height_pixels,</span><br><span class="line">		color_image_width_pixels * (<span class="keyword">int</span>)<span class="keyword">sizeof</span>(<span class="keyword">uint16_t</span>));</span><br><span class="line"></span><br><span class="line">	k4a::image point_cloud_image = <span class="literal">NULL</span>;</span><br><span class="line">	point_cloud_image = k4a::image::create(K4A_IMAGE_FORMAT_CUSTOM,</span><br><span class="line">		color_image_width_pixels,</span><br><span class="line">		color_image_height_pixels,</span><br><span class="line">		color_image_width_pixels * <span class="number">3</span> * (<span class="keyword">int</span>)<span class="keyword">sizeof</span>(<span class="keyword">int16_t</span>));</span><br><span class="line"></span><br><span class="line">	transformation.depth_image_to_color_camera(depthImage, &amp;transformed_depth_image);</span><br><span class="line">	transformation.depth_image_to_point_cloud(transformed_depth_image, K4A_CALIBRATION_TYPE_COLOR, &amp;point_cloud_image);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> width = colorImage.get_width_pixels();</span><br><span class="line">	<span class="keyword">int</span> height = colorImage.get_height_pixels();</span><br><span class="line"></span><br><span class="line">	cloud-&gt;width = width;</span><br><span class="line">	cloud-&gt;height = height;</span><br><span class="line">	cloud-&gt;is_dense = <span class="literal">false</span>;</span><br><span class="line">	cloud-&gt;points.resize(cloud-&gt;height * cloud-&gt;width);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int16_t</span>* point_cloud_image_data = (<span class="keyword">int16_t</span>*)(<span class="keyword">void</span>*)point_cloud_image.get_buffer();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> VTK_VISUALIZATION</span></span><br><span class="line">	Eigen::Matrix3f m;</span><br><span class="line">	m = Eigen::AngleAxisf(-M_PI, Eigen::Vector3f::UnitZ());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; width * height; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		PointXYZ point;</span><br><span class="line"></span><br><span class="line">		point.x = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">0</span>] / <span class="number">1000.0f</span>;</span><br><span class="line">		point.y = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">1</span>] / <span class="number">1000.0f</span>;</span><br><span class="line">		point.z = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">2</span>] / <span class="number">1000.0f</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (point.z == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> VTK_VISUALIZATION</span></span><br><span class="line">		point.getVector3fMap() = m * point.getVector3fMap();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">		cloud-&gt;points[i] = point;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> cloud;</span><br><span class="line">&#125;</span><br><span class="line">pcl::PointCloud&lt;pcl::PointXYZI&gt;::Ptr pcl::KinectAzureDKGrabber::convertInfraredDepthToPointXYZI()</span><br><span class="line">&#123;</span><br><span class="line">	PointCloud&lt;PointXYZI&gt;::<span class="function">Ptr <span class="title">cloud</span><span class="params">(<span class="keyword">new</span> PointCloud&lt;PointXYZI&gt;())</span></span>;</span><br><span class="line">	<span class="keyword">int</span> color_image_width_pixels = colorImage.get_width_pixels();</span><br><span class="line">	<span class="keyword">int</span> color_image_height_pixels = colorImage.get_height_pixels();</span><br><span class="line"></span><br><span class="line">	k4a::image transformed_depth_image = <span class="literal">NULL</span>;</span><br><span class="line">	transformed_depth_image = k4a::image::create(K4A_IMAGE_FORMAT_DEPTH16,</span><br><span class="line">		color_image_width_pixels,</span><br><span class="line">		color_image_height_pixels,</span><br><span class="line">		color_image_width_pixels * (<span class="keyword">int</span>)<span class="keyword">sizeof</span>(<span class="keyword">uint16_t</span>));</span><br><span class="line"></span><br><span class="line">	k4a::image transformed_infrared_image = <span class="literal">NULL</span>;</span><br><span class="line">	transformed_infrared_image = k4a::image::create(K4A_IMAGE_FORMAT_IR16,</span><br><span class="line">		color_image_width_pixels,</span><br><span class="line">		color_image_height_pixels,</span><br><span class="line">		color_image_width_pixels * (<span class="keyword">int</span>)<span class="keyword">sizeof</span>(<span class="keyword">uint16_t</span>));</span><br><span class="line"></span><br><span class="line">	k4a::image point_cloud_image = <span class="literal">NULL</span>;</span><br><span class="line">	point_cloud_image = k4a::image::create(K4A_IMAGE_FORMAT_CUSTOM,</span><br><span class="line">		color_image_width_pixels,</span><br><span class="line">		color_image_height_pixels,</span><br><span class="line">		color_image_width_pixels * <span class="number">3</span> * (<span class="keyword">int</span>)<span class="keyword">sizeof</span>(<span class="keyword">int16_t</span>));</span><br><span class="line"></span><br><span class="line">	transformation.depth_image_to_color_camera(depthImage, &amp;transformed_depth_image);</span><br><span class="line">	transformation.depth_image_to_color_camera(infraredImage, &amp;transformed_infrared_image);</span><br><span class="line">	transformation.depth_image_to_point_cloud(transformed_depth_image, K4A_CALIBRATION_TYPE_COLOR, &amp;point_cloud_image);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> width = colorImage.get_width_pixels();</span><br><span class="line">	<span class="keyword">int</span> height = colorImage.get_height_pixels();</span><br><span class="line"></span><br><span class="line">	cloud-&gt;width = width;</span><br><span class="line">	cloud-&gt;height = height;</span><br><span class="line">	cloud-&gt;is_dense = <span class="literal">false</span>;</span><br><span class="line">	cloud-&gt;points.resize(cloud-&gt;height * cloud-&gt;width);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int16_t</span>* point_cloud_image_data = (<span class="keyword">int16_t</span>*)(<span class="keyword">void</span>*)point_cloud_image.get_buffer();</span><br><span class="line">	<span class="keyword">int16_t</span>* transformed_infrared_image_data = (<span class="keyword">int16_t</span>*)(<span class="keyword">void</span>*)transformed_infrared_image.get_buffer();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> VTK_VISUALIZATION</span></span><br><span class="line">	Eigen::Matrix3f m;</span><br><span class="line">	m = Eigen::AngleAxisf(-M_PI, Eigen::Vector3f::UnitZ());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; width * height; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		PointXYZI point;</span><br><span class="line"></span><br><span class="line">		point.x = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">0</span>] / <span class="number">1000.0f</span>;</span><br><span class="line">		point.y = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">1</span>] / <span class="number">1000.0f</span>;</span><br><span class="line">		point.z = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">2</span>] / <span class="number">1000.0f</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (point.z == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		point.intensity = transformed_infrared_image_data[i];</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> VTK_VISUALIZATION</span></span><br><span class="line">		point.getVector3fMap() = m * point.getVector3fMap();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">		cloud-&gt;points[i] = point;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> cloud;</span><br><span class="line">&#125;</span><br><span class="line">pcl::PointCloud&lt;pcl::PointXYZRGB&gt;::Ptr pcl::KinectAzureDKGrabber::convertRGBDepthToPointXYZRGB()</span><br><span class="line">&#123;</span><br><span class="line">	PointCloud&lt;PointXYZRGB&gt;::<span class="function">Ptr <span class="title">cloud</span><span class="params">(<span class="keyword">new</span> PointCloud&lt;PointXYZRGB&gt;())</span></span>;</span><br><span class="line">	<span class="keyword">int</span> color_image_width_pixels = colorImage.get_width_pixels();</span><br><span class="line">	<span class="keyword">int</span> color_image_height_pixels = colorImage.get_height_pixels();</span><br><span class="line"></span><br><span class="line">	k4a::image transformed_depth_image = <span class="literal">NULL</span>;</span><br><span class="line">	transformed_depth_image = k4a::image::create(K4A_IMAGE_FORMAT_DEPTH16,</span><br><span class="line">		color_image_width_pixels,</span><br><span class="line">		color_image_height_pixels,</span><br><span class="line">		color_image_width_pixels * (<span class="keyword">int</span>)<span class="keyword">sizeof</span>(<span class="keyword">uint16_t</span>));</span><br><span class="line"></span><br><span class="line">	k4a::image point_cloud_image = <span class="literal">NULL</span>;</span><br><span class="line">	point_cloud_image = k4a::image::create(K4A_IMAGE_FORMAT_CUSTOM,</span><br><span class="line">		color_image_width_pixels,</span><br><span class="line">		color_image_height_pixels,</span><br><span class="line">		color_image_width_pixels * <span class="number">3</span> * (<span class="keyword">int</span>)<span class="keyword">sizeof</span>(<span class="keyword">int16_t</span>));</span><br><span class="line"></span><br><span class="line">	transformation.depth_image_to_color_camera(depthImage, &amp;transformed_depth_image);</span><br><span class="line">	transformation.depth_image_to_point_cloud(transformed_depth_image, K4A_CALIBRATION_TYPE_COLOR, &amp;point_cloud_image);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> width = colorImage.get_width_pixels();</span><br><span class="line">	<span class="keyword">int</span> height = colorImage.get_height_pixels();</span><br><span class="line"></span><br><span class="line">	cloud-&gt;width = width;</span><br><span class="line">	cloud-&gt;height = height;</span><br><span class="line">	cloud-&gt;is_dense = <span class="literal">false</span>;</span><br><span class="line">	cloud-&gt;points.resize(cloud-&gt;height * cloud-&gt;width);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int16_t</span>* point_cloud_image_data = (<span class="keyword">int16_t</span>*)(<span class="keyword">void</span>*)point_cloud_image.get_buffer();</span><br><span class="line">	<span class="keyword">uint8_t</span>* color_image_data = colorImage.get_buffer();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> VTK_VISUALIZATION</span></span><br><span class="line">	Eigen::Matrix3f m;</span><br><span class="line">	m = Eigen::AngleAxisf(-M_PI, Eigen::Vector3f::UnitZ());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; width * height; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		PointXYZRGB point;</span><br><span class="line"></span><br><span class="line">		point.x = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">0</span>] / <span class="number">1000.0f</span>;</span><br><span class="line">		point.y = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">1</span>] / <span class="number">1000.0f</span>;</span><br><span class="line">		point.z = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">2</span>] / <span class="number">1000.0f</span>;</span><br><span class="line">		<span class="keyword">if</span> (point.z == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> VTK_VISUALIZATION</span></span><br><span class="line">		point.getVector3fMap() = m * point.getVector3fMap();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">		point.b = color_image_data[<span class="number">4</span> * i + <span class="number">0</span>];</span><br><span class="line">		point.g = color_image_data[<span class="number">4</span> * i + <span class="number">1</span>];</span><br><span class="line">		point.r = color_image_data[<span class="number">4</span> * i + <span class="number">2</span>];</span><br><span class="line">		<span class="keyword">uint8_t</span> alpha = color_image_data[<span class="number">4</span> * i + <span class="number">3</span>];</span><br><span class="line">		<span class="keyword">if</span> (point.b == <span class="number">0</span> &amp;&amp; point.g == <span class="number">0</span> &amp;&amp; point.r == <span class="number">0</span> &amp;&amp; alpha == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		cloud-&gt;points[i] = point;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> cloud;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pcl::PointCloud&lt;pcl::PointXYZRGBA&gt;::Ptr pcl::KinectAzureDKGrabber::convertRGBADepthToPointXYZRGBA(<span class="comment">/*RGBQUAD* colorBuffer, UINT16* depthBuffer*/</span>)</span><br><span class="line">&#123;</span><br><span class="line">	PointCloud&lt;PointXYZRGBA&gt;::<span class="function">Ptr <span class="title">cloud</span><span class="params">(<span class="keyword">new</span> PointCloud&lt;PointXYZRGBA&gt;())</span></span>;</span><br><span class="line">	<span class="keyword">int</span> color_image_width_pixels = colorImage.get_width_pixels();</span><br><span class="line">	<span class="keyword">int</span> color_image_height_pixels = colorImage.get_height_pixels();</span><br><span class="line"></span><br><span class="line">	k4a::image transformed_depth_image = <span class="literal">NULL</span>;</span><br><span class="line">	transformed_depth_image = k4a::image::create(K4A_IMAGE_FORMAT_DEPTH16,</span><br><span class="line">		color_image_width_pixels,</span><br><span class="line">		color_image_height_pixels,</span><br><span class="line">		color_image_width_pixels * (<span class="keyword">int</span>)<span class="keyword">sizeof</span>(<span class="keyword">uint16_t</span>));</span><br><span class="line"></span><br><span class="line">	k4a::image point_cloud_image = <span class="literal">NULL</span>;</span><br><span class="line">	point_cloud_image = k4a::image::create(K4A_IMAGE_FORMAT_CUSTOM,</span><br><span class="line">		color_image_width_pixels,</span><br><span class="line">		color_image_height_pixels,</span><br><span class="line">		color_image_width_pixels * <span class="number">3</span> * (<span class="keyword">int</span>)<span class="keyword">sizeof</span>(<span class="keyword">int16_t</span>));</span><br><span class="line"></span><br><span class="line">	transformation.depth_image_to_color_camera(depthImage, &amp;transformed_depth_image);</span><br><span class="line">	transformation.depth_image_to_point_cloud(transformed_depth_image, K4A_CALIBRATION_TYPE_COLOR, &amp;point_cloud_image);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> width = colorImage.get_width_pixels();</span><br><span class="line">	<span class="keyword">int</span> height = colorImage.get_height_pixels();</span><br><span class="line"></span><br><span class="line">	cloud-&gt;width = width;</span><br><span class="line">	cloud-&gt;height = height;</span><br><span class="line">	cloud-&gt;is_dense = <span class="literal">false</span>;</span><br><span class="line">	cloud-&gt;points.resize(cloud-&gt;height * cloud-&gt;width);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int16_t</span>* point_cloud_image_data = (<span class="keyword">int16_t</span>*)(<span class="keyword">void</span>*)point_cloud_image.get_buffer();</span><br><span class="line">	<span class="keyword">uint8_t</span>* color_image_data = colorImage.get_buffer();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> VTK_VISUALIZATION</span></span><br><span class="line">	Eigen::Matrix3f m;</span><br><span class="line">	m = Eigen::AngleAxisf(-M_PI, Eigen::Vector3f::UnitZ());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; width * height; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		PointXYZRGBA point;</span><br><span class="line"></span><br><span class="line">		point.x = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">0</span>] / <span class="number">1000.0f</span>;</span><br><span class="line">		point.y = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">1</span>] / <span class="number">1000.0f</span>;</span><br><span class="line">		point.z = point_cloud_image_data[<span class="number">3</span> * i + <span class="number">2</span>] / <span class="number">1000.0f</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (point.z == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> VTK_VISUALIZATION</span></span><br><span class="line">		point.getVector3fMap() = m * point.getVector3fMap();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">		point.b = color_image_data[<span class="number">4</span> * i + <span class="number">0</span>];</span><br><span class="line">		point.g = color_image_data[<span class="number">4</span> * i + <span class="number">1</span>];</span><br><span class="line">		point.r = color_image_data[<span class="number">4</span> * i + <span class="number">2</span>];</span><br><span class="line">		point.a = color_image_data[<span class="number">4</span> * i + <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (point.b == <span class="number">0</span> &amp;&amp; point.g == <span class="number">0</span> &amp;&amp; point.r == <span class="number">0</span> &amp;&amp; point.a == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		cloud-&gt;points[i] = point;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> cloud;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>pcl</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkerLess AR Cube Demo 总结</title>
    <url>/2020/10/07/MarkerLess-AR-Cube-Demo-%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MarkerLess-AR-Cube-Demo-总结"><a href="#MarkerLess-AR-Cube-Demo-总结" class="headerlink" title="MarkerLess AR Cube Demo 总结"></a>MarkerLess AR Cube Demo 总结</h1><blockquote>
<p>参考文章：</p>
<p><a href="https://blog.csdn.net/qq_33446100/article/details/98848510">https://blog.csdn.net/qq_33446100/article/details/98848510</a></p>
</blockquote>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/iframe/aruco06.gif" alt=""></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>根据<a href="https://junlu.club/2020/09/21/Aruco%E5%AE%9E%E7%8E%B0AR%E6%A2%B3%E7%90%86-2/">ARUCO实现AR梳理-2</a>中的叙述，可以知道，以OpenGL为最后显示平台的AR实现方案，最终要考虑的问题是，<strong>如何获得相机的外部参数？</strong></p>
<p>如果知道了相机的外部参数，即可将其带入<strong>View Matrix</strong>；加上<strong>Model Matrix</strong>可以人为指定，<strong>Projection Matrix</strong>是由相机内参定义的，一切将水到渠成。</p>
<h2 id="Markerless"><a href="#Markerless" class="headerlink" title="Markerless"></a>Markerless</h2><p>AR可以分为基于标志物的AR，与基于无标志物的AR，基于无标志物的AR又可以分为很多种，本文实现的是利用RGB单目摄像头，利用自然特征实现AR。</p>
<h2 id="实现流程"><a href="#实现流程" class="headerlink" title="实现流程"></a>实现流程</h2><ol>
<li>使用<strong>SURF</strong>（SpeedUp Robust Features 加速版的具有鲁棒性的特征）特征点检测算法检测事先准备的图像的特征点</li>
<li>使用<strong>SURF</strong>特征点检测算法，检测相机拍到的实时图像</li>
<li>使用<strong>FLANN</strong>（Fast Library for Approximate Nearest Neighbors 快速最近邻逼近搜索函数库）特征点匹配算法，将事先准备好的图像的特征点，与相机实时捕获的图像特征点作匹配</li>
<li>根据<strong>FLANN</strong>，使用<strong>findHomography</strong>函数，得出单应性矩阵，将事先准备好的图像的四个角点，映射到相机捕获的图像上</li>
<li>使用<strong>SolvePnP</strong>函数估计相机位姿，即相机外参</li>
<li>代入<strong>View Matrix</strong></li>
</ol>
]]></content>
      <categories>
        <category>Project</category>
      </categories>
  </entry>
  <entry>
    <title>Windows+pcl1.11.1+vs2019环境配置</title>
    <url>/2020/10/05/Windows-pcl1-11-1-vs2019%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Windows-pcl1-11-1-vs2019环境配置"><a href="#Windows-pcl1-11-1-vs2019环境配置" class="headerlink" title="Windows+pcl1.11.1+vs2019环境配置"></a>Windows+pcl1.11.1+vs2019环境配置</h1><blockquote>
<p>参考博文【若有侵权，立即删除】</p>
<p><a href="https://blog.csdn.net/qq_36686437/article/details/106347482">https://blog.csdn.net/qq_36686437/article/details/106347482</a></p>
<p><a href="https://blog.csdn.net/qq_36686437/article/details/108803098">https://blog.csdn.net/qq_36686437/article/details/108803098</a></p>
<p><a href="https://blog.csdn.net/zhangxz259/article/details/85683201">https://blog.csdn.net/zhangxz259/article/details/85683201</a></p>
</blockquote>
<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>想学点云处理方面的知识了，就配一个pcl</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="下载PCL1-11-0"><a href="#下载PCL1-11-0" class="headerlink" title="下载PCL1.11.0"></a>下载PCL1.11.0</h3><p>Github下载地址：<a href="https://github.com/PointCloudLibrary/pcl/releases">https://github.com/PointCloudLibrary/pcl/releases</a><br>下载红框内的两个文件<br><img src="https://img-blog.csdnimg.cn/20200526085007336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="安装PCL1-11-0"><a href="#安装PCL1-11-0" class="headerlink" title="安装PCL1.11.0"></a>安装PCL1.11.0</h3><p><strong>安装“PCL-1.11.0-AllInOne-msvc2019-win64.exe”。</strong></p>
<ul>
<li>选择第二个，自动添加系统变量<br>  <img src="https://img-blog.csdnimg.cn/20200526085600527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="PCL安装界面00"></li>
<li>安装路径选择D盘，系统会自动新建PCL 1.11.0文件夹。<br>  <img src="https://img-blog.csdnimg.cn/20200526085833607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="PCL安装界面01"></li>
<li><strong>安装完成之后打开文件夹 D:\PCL 1.11.0\3rdParty\OpenNI2<br>  双击OpenNI-Windows-x64-2.2 选择路径（D:\PCL 1.11.0\3rdParty\OpenNI2）安装即可。</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526090128836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="PCL安装界面02"></li>
<li><strong>全部安装完成后，将pcl-1.11.0-pdb-msvc2019-win64.zip解压后的.pdb文件拷贝到（D:\PCL 1.11.0\bin）中。</strong></li>
<li><strong>设置环境变量：右击计算机—属性—高级系统设置—高级—环境变量—用户变量—Path—编辑!</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526090605288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="PCL安装界面03"></li>
<li>如下图所示。<br>  <img src="https://img-blog.csdnimg.cn/20200526090646241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="PCL安装界面04"><br>  在这里直接给出，防止出现错误（依次添加）：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%PCL_ROOT%\<span class="number">3</span>rdParty\FLANN\bin</span><br><span class="line">%PCL_ROOT%\<span class="number">3</span>rdParty\VTK\bin</span><br><span class="line">%OPENNI2_REDIST64%</span><br><span class="line">%OPENNI2_LIB64%</span><br><span class="line">%OPENNI2_INCLUDE64%</span><br></pre></td></tr></table></figure>
<p>到此，环境变量的配置完成。</p>
<h3 id="VS2019相关设置"><a href="#VS2019相关设置" class="headerlink" title="VS2019相关设置"></a>VS2019相关设置</h3><ul>
<li><strong>新建空项目</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526090823909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="VS配置界面00"></li>
<li>解决方案配置选择Debug，解决方案平台选择x64。<br>  <img src="https://img-blog.csdnimg.cn/20200526103129751.png" alt="VS配置界面01"></li>
<li><strong>新建一个C++源文件</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526103415256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="VS配置界面02"></li>
<li><strong>右击新建的项目—属性：打开属性表</strong></li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200526103657409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="VS配置界面03"></p>
<ul>
<li><strong>配置属性—调试—环境—添加：</strong></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">PATH=D:\PCL <span class="number">1.11</span><span class="number">.0</span>\\bin;D:\PCL <span class="number">1.11</span><span class="number">.0</span>\\<span class="number">3</span>rdParty\FLANN\bin;D:\PCL <span class="number">1.11</span><span class="number">.0</span>\\<span class="number">3</span>rdParty\VTK\bin;D:\PCL <span class="number">1.11</span><span class="number">.0</span>\\<span class="number">3</span>rdParty\OpenNI2\Tools</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200526104101644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="VS配置界面04"></p>
<ul>
<li><strong>C/C++—语言—符合模式：否</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526104535843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="VS配置界面05"></li>
<li><strong>C/C++—常规—SDL检查：否</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526104722251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="VS配置界面06"></li>
</ul>
<h3 id="配置PCL1-11-0"><a href="#配置PCL1-11-0" class="headerlink" title="配置PCL1.11.0"></a>配置PCL1.11.0</h3><p><strong>为了使用方便，这里使用添加属性表的形式。注意：添加属性表的方式，需要再次将属性表内的SDL检测设置为：否。否则将报如下错误：</strong><br><img src="https://img-blog.csdnimg.cn/20200925194241929.png#pic_center" alt="在这里插入图片描述"></p>
<ul>
<li><p><strong>视图—其他窗口—属性管理器</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526091549978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p><strong>打开属性管理器之后，选择Debug|X64—单击Debug|X64左侧倒三角—右击选择 添加型项目属性表</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526092104635.png" alt="在这里插入图片描述"></p>
</li>
<li><strong>项目属性表命名</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526092333946.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li><strong>双击新添加的属性表—VC++目录—包含目录，添加7个include路径</strong><br>  <img src="https://img-blog.csdnimg.cn/2020052609260194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<p>具体添加的include路径如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\include\pcl<span class="number">-1.11</span></span><br><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\Boost\include\boost<span class="number">-1</span>_73</span><br><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\Eigen\eigen3</span><br><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\FLANN\include</span><br><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\Qhull\include</span><br><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\VTK\include\vtk<span class="number">-8.2</span></span><br><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\OpenNI2\Include</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>VC++目录—库目录，添加6个lib路径</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526093426340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  具体添加的lib路径如下：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\lib</span><br><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\Boost\lib</span><br><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\FLANN\lib</span><br><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\Qhull\lib</span><br><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\OpenNI2\Lib</span><br><span class="line">D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\VTK\lib</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200526093806871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li><strong>C/C++—预处理器—预处理器定义—添加：</strong></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">BOOST_USE_WINDOWS_H</span><br><span class="line">NOMINMAX</span><br><span class="line">_CRT_SECURE_NO_DEPRECATE</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200526094047662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li><strong>链接器—输入—附加依赖项——添加PCL和VTK的相关lib文件。我用的Debug版本。</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526094504741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  附加依赖项具体添加内容如下：（文章末尾 <strong>附录</strong>中 给出批量获取附加依赖项的方法）<br>  输入到属性表里边的时候必须一行对应一个lib才能成功。<br>  Debug版本</li>
<li><strong>保存属性表</strong><br>  <img src="https://img-blog.csdnimg.cn/20200526102730254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  下一次需要创建新项目的时候，只需进行第三步 <strong>VS2019相关设置</strong> 的操作，然后打开属性管理器，添加现有属性表，找到之前保存的属性表添加进去即可。<br>  <img src="https://img-blog.csdnimg.cn/20200526105924435.png" alt="在这里插入图片描述"><br>  ![在这里插入图片描述](<a href="https://img-blog.csdnimg.cn/20200526110148988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70">https://img-blog.csdnimg.cn/20200526110148988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70</a></li>
</ul>
<h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/point_cloud.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/octree/octree.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/thread/thread.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcl/visualization/pcl_visualizer.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span></span><br><span class="line">main(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span><br><span class="line">&#123;</span><br><span class="line">	srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">	pcl::PointCloud&lt;pcl::PointXYZ&gt;::<span class="function">Ptr <span class="title">cloud</span><span class="params">(<span class="keyword">new</span> pcl::PointCloud&lt;pcl::PointXYZ&gt;)</span></span>;</span><br><span class="line">	<span class="comment">// 创建点云数据</span></span><br><span class="line">	cloud-&gt;width = <span class="number">1000</span>;</span><br><span class="line">	cloud-&gt;height = <span class="number">1</span>;</span><br><span class="line">	cloud-&gt;points.resize(cloud-&gt;width * cloud-&gt;height);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; cloud-&gt;points.size(); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		cloud-&gt;points[i].x = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">		cloud-&gt;points[i].y = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">		cloud-&gt;points[i].z = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	pcl::<span class="function">octree::OctreePointCloudSearch&lt;pcl::PointXYZ&gt; <span class="title">octree</span><span class="params">(<span class="number">0.1</span>)</span></span>;</span><br><span class="line">	octree.setInputCloud(cloud);</span><br><span class="line">	octree.addPointsFromInputCloud();</span><br><span class="line">	pcl::PointXYZ searchPoint;</span><br><span class="line">	searchPoint.x = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">	searchPoint.y = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">	searchPoint.z = <span class="number">1024.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//半径内近邻搜索</span></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;pointIdxRadiusSearch;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt;pointRadiusSquaredDistance;</span><br><span class="line">	<span class="keyword">float</span> radius = <span class="number">256.0f</span> * rand() / (RAND_MAX + <span class="number">1.0f</span>);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Neighbors within radius search at (&quot;</span> &lt;&lt; searchPoint.x</span><br><span class="line">		&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; searchPoint.y</span><br><span class="line">		&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; searchPoint.z</span><br><span class="line">		&lt;&lt; <span class="string">&quot;) with radius=&quot;</span> &lt;&lt; radius &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">if</span> (octree.radiusSearch(searchPoint, radius, pointIdxRadiusSearch, pointRadiusSquaredDistance) &gt; <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; pointIdxRadiusSearch.size(); ++i)</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;    &quot;</span> &lt;&lt; cloud-&gt;points[pointIdxRadiusSearch[i]].x</span><br><span class="line">			&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cloud-&gt;points[pointIdxRadiusSearch[i]].y</span><br><span class="line">			&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cloud-&gt;points[pointIdxRadiusSearch[i]].z</span><br><span class="line">			&lt;&lt; <span class="string">&quot; (squared distance: &quot;</span> &lt;&lt; pointRadiusSquaredDistance[i] &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 初始化点云可视化对象</span></span><br><span class="line">	boost::<span class="built_in">shared_ptr</span>&lt;pcl::visualization::PCLVisualizer&gt;viewer(<span class="keyword">new</span> pcl::visualization::PCLVisualizer(<span class="string">&quot;显示点云&quot;</span>));</span><br><span class="line">	viewer-&gt;setBackgroundColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);  <span class="comment">//设置背景颜色为黑色</span></span><br><span class="line">	<span class="comment">// 对点云着色可视化 (red).</span></span><br><span class="line">	pcl::visualization::PointCloudColorHandlerCustom&lt;pcl::PointXYZ&gt;target_color(cloud, <span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	viewer-&gt;addPointCloud&lt;pcl::PointXYZ&gt;(cloud, target_color, <span class="string">&quot;target cloud&quot;</span>);</span><br><span class="line">	viewer-&gt;setPointCloudRenderingProperties(pcl::visualization::PCL_VISUALIZER_POINT_SIZE, <span class="number">1</span>, <span class="string">&quot;target cloud&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 等待直到可视化窗口关闭</span></span><br><span class="line">	<span class="keyword">while</span> (!viewer-&gt;wasStopped())</span><br><span class="line">	&#123;</span><br><span class="line">		viewer-&gt;spinOnce(<span class="number">100</span>);</span><br><span class="line">		boost::this_thread::sleep(boost::posix_time::microseconds(<span class="number">1000</span>));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> (<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>输出下图（数字可能不同），则表示安装成功！</strong><br><img src="https://img-blog.csdnimg.cn/20200526110936338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">win+r调出“运行”窗口并输出cmd</span><br><span class="line">输入：cd /d D:\PCL <span class="number">1.11</span><span class="number">.0</span>\<span class="number">3</span>rdParty\VTK\lib 回车 （填自己的路径）</span><br><span class="line">输入：dir /b *.lib *&gt;<span class="number">0.</span>txt 回车 </span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200526112537554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这时打开你对应路劲的目录，多了一个0.txt文件，里面存了你这个文件夹里所有链接库名字。<br>由于每一个Debug版本和Release版本的链接库是挨在一起的。写一个读取文档并对其分别保存就行了。<br>具体代码如下：（主要功能是读取一个txt文件，将其中奇数行和偶数行单独输出到新的txt文档。）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ifstream txtfile;<span class="comment">//打开读取的文件</span></span><br><span class="line">	ofstream txt01;<span class="comment">//保存的文件</span></span><br><span class="line">	ofstream txt02;<span class="comment">//保存的文件</span></span><br><span class="line">	<span class="built_in">string</span> temp;</span><br><span class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;<span class="comment">//用于判断奇偶</span></span><br><span class="line"></span><br><span class="line">	txtfile.open(<span class="string">&quot;0.txt&quot;</span>, ios::in);</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">while</span> (!txtfile.eof())            <span class="comment">// 若未到文件结束一直循环</span></span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		getline(txtfile, temp);<span class="comment">//一行一行读取</span></span><br><span class="line">		<span class="keyword">if</span> (index%<span class="number">2</span>==<span class="number">0</span>)<span class="comment">//判断除以2的余数，即为奇偶的判断</span></span><br><span class="line">		&#123;</span><br><span class="line">			txt01.open(<span class="string">&quot;1.txt&quot;</span>, ios::app);</span><br><span class="line">			txt01 &lt;&lt; temp;</span><br><span class="line">			txt01 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			txt01.close();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			txt02.open(<span class="string">&quot;2.txt&quot;</span>, ios::app);</span><br><span class="line">			txt02 &lt;&lt; temp;</span><br><span class="line">			txt02 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			txt02.close();</span><br><span class="line">		&#125;</span><br><span class="line">		index++;</span><br><span class="line">	&#125;</span><br><span class="line">	txtfile.close();   <span class="comment">//关闭文件</span></span><br><span class="line">	txtfile.close();</span><br><span class="line">	txt01.close();</span><br><span class="line">	txt02.close();</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Windows环境配置</category>
      </categories>
      <tags>
        <tag>PCL</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-2021计划表</title>
    <url>/2020/09/27/2020-2021%E8%AE%A1%E5%88%92%E8%A1%A8/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="853a7fac0c85009378beab41b09e7e37519469b46433feb9c1640c0d6ba20fa9"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>摄像机模型详解</title>
    <url>/2020/09/26/%E6%91%84%E5%83%8F%E6%9C%BA%E6%A8%A1%E5%9E%8B%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="摄像机几何模型详解"><a href="#摄像机几何模型详解" class="headerlink" title="摄像机几何模型详解"></a>摄像机几何模型详解</h1><h2 id="针孔模型-amp-透镜"><a href="#针孔模型-amp-透镜" class="headerlink" title="针孔模型&amp;透镜"></a>针孔模型&amp;透镜</h2><h3 id="问题引出-我们如何记录世界？"><a href="#问题引出-我们如何记录世界？" class="headerlink" title="问题引出 - 我们如何记录世界？"></a>问题引出 - 我们如何记录世界？</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926200942.png" alt="图0 如何记录世界？"></p>
<p>如果按照上面图片的设计，物体的每一个点，都会在胶片的同一个地方，留下自己的信息；由此胶片上的每一个地方都是物体每一点的信息集合，根本无法记录现实物体。</p>
<h3 id="改进方案-针孔摄像机"><a href="#改进方案-针孔摄像机" class="headerlink" title="改进方案 - 针孔摄像机"></a>改进方案 - 针孔摄像机</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926201249.png" alt="图1 针孔摄像机"></p>
<p>与原有的设计相比，此改进方案增加了一个隔板，只留下了一个孔；正如图上所标注的，光线穿过针孔，物体的每一个点，都在胶片的不同位置留下了自己的信息，不会像之前设计的胶片信息杂乱混合。</p>
<p>胶片就这样记录下了物体的信息。</p>
<h3 id="针孔摄像机模型"><a href="#针孔摄像机模型" class="headerlink" title="针孔摄像机模型"></a>针孔摄像机模型</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926201625.png" alt="图2 针孔摄像机模型"></p>
<p>图中的各个参数的含义如下：</p>
<blockquote>
<p><strong>f</strong> ：摄像机模型的<strong>焦距</strong> </p>
<p><strong>O</strong> ：针孔，亦称<strong>光圈</strong>/<strong>摄像机中心</strong> </p>
</blockquote>
<p>像平面与虚拟像平面相对于摄像机中心对称，唯一的不同是，虚拟像平面成像是正的，我们一般都是讨论虚拟像平面；像平面成像是倒着的。</p>
<h3 id="相机坐标系下的空间点与像平面坐标系上的平面点之间的映射（1）"><a href="#相机坐标系下的空间点与像平面坐标系上的平面点之间的映射（1）" class="headerlink" title="相机坐标系下的空间点与像平面坐标系上的平面点之间的映射（1）"></a><strong>相机坐标系下的空间点</strong>与<strong>像平面坐标系上的平面点</strong>之间的映射（1）</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926202434.png" alt="图3 摄像机坐标系与像平面坐标系之间，点的映射关系"></p>
<p>上图各个符号的含义如下：</p>
<blockquote>
<p><strong>P</strong>：真实物理空间中的某一点，在摄像机坐标系下，其坐标为（x，y，z）</p>
<p><strong>O</strong>：摄像机坐标系的原点</p>
<p><strong>i，j，k</strong>：摄像机坐标系的单位向量，构成坐标轴</p>
<p><strong>f</strong>：摄像机模型的焦距</p>
<p><strong>C’</strong>：像平面坐标系的原点</p>
<p><strong>P’</strong>：真实空间点P在成像平面上成像的点，在像平面坐标系下，其坐标为（x’，y’）</p>
</blockquote>
<p>以-i方向观察上图，可以简化为：</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926203254.png" alt="图4 以-i方向观察图4"></p>
<p>采用相似三角形法则，可以得出：</p>
<script type="math/tex; mode=display">
\frac{y'}{f}=\frac{y}{z}\Rightarrow y'=f\frac{y}{z}</script><p>又因为$ P=\left[\begin{array}{l}<br>x \<br>y \<br>z<br>\end{array}\right] $，$P^{\prime}=\left[\begin{array}{l}<br>x^{\prime} \<br>y^{\prime}<br>\end{array}\right]$；</p>
<p>所以：</p>
<script type="math/tex; mode=display">
\left\{\begin{array}{1}
x^{\prime}=f \frac{x}{z} \\
y^{\prime}=f \frac{y}{z}
\end{array}\right.
\tag {公式1}</script><h3 id="透镜"><a href="#透镜" class="headerlink" title="透镜"></a>透镜</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926201249.png" alt="图5 针孔摄像机"></p>
<p>光圈，亦称针孔；</p>
<p>光圈的尺寸大小与成像的关系：</p>
<blockquote>
<p>光圈越大，成像越模糊，但是也越亮</p>
<p>光圈越小，成像越清晰，但是也越暗</p>
</blockquote>
<p>光圈越大，穿过光圈的光线越多，因此也更亮，但是随着光圈的增大，物体上不同的，但是相近的位置点，都会发射光线到达胶片上的同一点，因此成像也越模糊。</p>
<p>光圈越小，穿过光圈的光线越少，因此也更暗，但是随着光圈的减小，物体上不同的，发射光线到达胶片上的同一点的概率也越小，因此成像也越模糊。</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926211838.png" alt="图6 光圈尺寸与成像的关系"></p>
<p>毫无疑问，我们最终想要的是既明亮又清晰的图像，如何能在光圈小的情况下，增大亮度，即让物体同一点的光线到胶片上同一点的光线数量越多？</p>
<p>答案是<strong>增加透镜</strong></p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926212145.png" alt="图7 增加透镜"></p>
<p>透镜将物体上同一点的多条光线聚集到胶片上的同一点，增大了亮度</p>
<p><strong>透镜焦距</strong>的定义：</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926212659.png" alt="图8 透镜焦距的定义"></p>
<blockquote>
<p>f：透镜的焦距</p>
</blockquote>
<h3 id="相机坐标系下的空间点与像平面坐标系上的平面点之间的映射（2）"><a href="#相机坐标系下的空间点与像平面坐标系上的平面点之间的映射（2）" class="headerlink" title="相机坐标系下的空间点与像平面坐标系上的平面点之间的映射（2）"></a><strong>相机坐标系下的空间点</strong>与<strong>像平面坐标系上的平面点</strong>之间的映射（2）</h3><p>将上述讨论的透镜，加入模型中：</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926212904.png" alt="图9 透镜加入模型"></p>
<p>参数说明：</p>
<blockquote>
<p><strong>f</strong>：透镜的焦距</p>
<p><strong>$z_0$</strong>：透镜的焦点到胶片的距离</p>
<p><strong>Z’</strong>：摄像机模型的焦距</p>
</blockquote>
<p>上述参数满足：$Z’=f+Z_0$</p>
<p>以后，以字母f代表摄像机模型的焦距Z‘</p>
<h3 id="像平面坐标系下的平面点-在像平面坐标系与像素平面坐标系的转换"><a href="#像平面坐标系下的平面点-在像平面坐标系与像素平面坐标系的转换" class="headerlink" title="像平面坐标系下的平面点 在像平面坐标系与像素平面坐标系的转换"></a>像平面坐标系下的平面点 在像平面坐标系与像素平面坐标系的转换</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926215929.png" alt="图10 像坐标系与像素坐标系" style="zoom:70%;" /></p>
<blockquote>
<p><strong>像素坐标系</strong>：</p>
<ul>
<li>以胶片的左下角为坐标原点的二维坐标系</li>
<li>单位是像素</li>
</ul>
<p><strong>像坐标系</strong>：</p>
<ul>
<li>同样成为像平面坐标系，以胶片中心为C’为坐标原点</li>
<li>单位是米</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20200926220338.png" alt="图11 示意图"></p>
<h3 id="理想情况下，摄像机坐标系下的空间点-与-像素坐标系下的平面点-之间的转换"><a href="#理想情况下，摄像机坐标系下的空间点-与-像素坐标系下的平面点-之间的转换" class="headerlink" title="理想情况下，摄像机坐标系下的空间点 与 像素坐标系下的平面点 之间的转换"></a>理想情况下，摄像机坐标系下的空间点 与 像素坐标系下的平面点 之间的转换</h3><p>此转换亦为3D与2D之间的转换；</p>
<p>坐标转换为：</p>
<script type="math/tex; mode=display">
\left.(x, y, z) \rightarrow(f k \frac{x}{z}+c_{x}, f l \frac{y}{z}+c_{y}\right)


\tag{公式3}</script><script type="math/tex; mode=display">
\alpha = fk</script><script type="math/tex; mode=display">
\beta = fl</script><blockquote>
<p><strong>k,l</strong> 单位为pixel/m</p>
<p><strong>f</strong> 单位为m</p>
<p><strong>$\alpha，\beta，c_x$ </strong>单位：pixel</p>
</blockquote>
<p>由于上述变换是非线性变换，后续处理采用齐次坐标的概念</p>
<hr>
<p><strong>齐次坐标</strong></p>
<p>欧几里得空间 -&gt; 齐次坐标空间：</p>
<ul>
<li>图像点的齐次坐标：</li>
</ul>
<script type="math/tex; mode=display">
(x, y) \Rightarrow\left[\begin{array}{l}
x \\
y \\
1
\end{array}\right]</script><ul>
<li>空间点的齐次坐标：</li>
</ul>
<script type="math/tex; mode=display">
(x, y, z) \Rightarrow\left[\begin{array}{l}
x \\
y \\
z \\
1
\end{array}\right]</script><p>齐次坐标空间 -&gt; 欧几里得空间：</p>
<ul>
<li>图像点：</li>
</ul>
<script type="math/tex; mode=display">
\left[\begin{array}{l}
x \\
y \\
w
\end{array}\right] \Rightarrow(x / w, y / w)</script><ul>
<li>空间点：</li>
</ul>
<script type="math/tex; mode=display">
\left[\begin{array}{l}
x \\
y \\
z \\
w
\end{array}\right] \Rightarrow(x / w, y / w, z / w)</script><hr>
<p>因为：</p>
<script type="math/tex; mode=display">
\left.(x, y, z) \rightarrow(f k \frac{x}{z}+c_{x}, f l \frac{y}{z}+c_{y}\right)


\tag{公式3}</script><script type="math/tex; mode=display">
\alpha = fk</script><script type="math/tex; mode=display">
\beta = fl</script><p>所以：</p>
<script type="math/tex; mode=display">
\left.(x, y, z) \rightarrow(\alpha \frac{x}{z}+c_{x}, \beta \frac{y}{z}+c_{y}\right)


\tag{公式4}</script><script type="math/tex; mode=display">
u =\alpha \frac{x}{z}+c_{x}</script><script type="math/tex; mode=display">
v=\beta \frac{y}{z}+c_{y}</script><blockquote>
<p>u，v 分别是像素坐标系下空间点P在成像平面上的坐标表示</p>
<p>x，y，z 分别是相机坐标系下空间点P的坐标表示</p>
</blockquote>
<p>使用齐次坐标表示 $\left.(x, y, z) \rightarrow(\alpha \frac{x}{z}+c<em>{x}, \beta \frac{y}{z}+c</em>{y}\right)$ ：</p>
<script type="math/tex; mode=display">
(\alpha \frac{x}{z}+c_X,\beta \frac{y}{z}+c_y) \rightarrow{转为齐次坐标}\rightarrow\begin{bmatrix}
\ \alpha x+c_xz\\
\ \beta y+c_yz \\
\ z
\end{bmatrix}</script><script type="math/tex; mode=display">
\begin{bmatrix}
\ \alpha x+c_xz\\
\ \beta y+c_yz \\
\ z
\end{bmatrix}
=
\begin{bmatrix}
\ \alpha & 0 & c_x & 0 \\
0 & \beta & c_y & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}
\begin{bmatrix}
\ x \\
\ y \\
\ z \\
\ 1 \\
\end{bmatrix}
\tag{公式5}</script><p>记像平面上的坐标点为<strong>P’</strong></p>
<p>则<strong>公式5</strong>可以写为：</p>
<script type="math/tex; mode=display">
P'=
\begin{bmatrix}
\ \alpha x+c_xz\\
\ \beta y+c_yz \\
\ z
\end{bmatrix}
=
\begin{bmatrix}
\ \alpha & 0 & c_x & 0 \\
0 & \beta & c_y & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}
\begin{bmatrix}
\ x \\
\ y \\
\ z \\
\ 1 \\
\end{bmatrix}
=
MP</script><script type="math/tex; mode=display">
M =
\begin{bmatrix}
\ \alpha & 0 & c_x & 0 \\
0 & \beta & c_y & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}</script><blockquote>
<p>$\alpha，\beta，c_x，c_y$全部属于相机内部参数</p>
<p>M是相机坐标系下空间点P到像素坐标系下点P’之间的投影矩阵，3x4</p>
</blockquote>
<h3 id="实际情况下，摄像机坐标系下的空间点-与-像素坐标系下的平面点-之间的转换"><a href="#实际情况下，摄像机坐标系下的空间点-与-像素坐标系下的平面点-之间的转换" class="headerlink" title="实际情况下，摄像机坐标系下的空间点 与 像素坐标系下的平面点 之间的转换"></a>实际情况下，摄像机坐标系下的空间点 与 像素坐标系下的平面点 之间的转换</h3><p>由于现实生活中，相机会有畸变问题，实际的像素坐标系如下所示：</p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20201001102638.png" alt="图12 实际畸变"></p>
<p>修正理想情况下的转换关系：</p>
<script type="math/tex; mode=display">
P'=
\begin{bmatrix}
\ \alpha & -\alpha cot\theta & c_x & 0 \\
0 & \frac{\beta}{sin\theta} & c_y & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}
\begin{bmatrix}
\ x \\
\ y \\
\ z \\
\ 1 \\
\end{bmatrix}
=
MP</script><script type="math/tex; mode=display">
M =
\begin{bmatrix}
\ \alpha & -\alpha cot\theta & c_x & 0 \\
0 & \frac{\beta}{sin\theta} & c_y & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}
\tag{公式6}</script><blockquote>
<p>$\alpha，\beta，c_x，c_y ，\theta$全部属于相机内部参数</p>
<p>M 共有5个自由度，即5个未知量</p>
<p>M是相机坐标系下空间点P到像素坐标系下点P’之间的投影矩阵，3x4</p>
</blockquote>
<p>从M中取出前3列，作为一个3x3的新矩阵，称为<strong>相机内参矩阵K</strong></p>
<script type="math/tex; mode=display">
K=
\begin{bmatrix}
\ \alpha & -\alpha cot\theta & c_x  \\
0 & \frac{\beta}{sin\theta} & c_y  \\
0 & 0 & 1  \\
\end{bmatrix}</script><p>因此，<strong>公式6</strong>可以表示为如下形式：</p>
<script type="math/tex; mode=display">
P'=
K
\begin{bmatrix}
\ E & 0 \\
\end{bmatrix}
P
=
\begin{bmatrix}
\ u \\
\ v \\
\ z \\
\end{bmatrix}
=
\begin{bmatrix}
\ \alpha & -\alpha cot\theta & c_x \\
0 & \frac{\beta}{sin\theta} & c_y \\
0 & 0 & 1 \\
\end{bmatrix}
\begin{bmatrix}
1 & 0 & 0 & 0 \\
0 & 1 & 0 & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}
\begin{bmatrix}
\ x \\
\ y \\
\ z \\
\ 1 \\
\end{bmatrix}
\\\\
= 
\begin{bmatrix}
\ \alpha & -\alpha cot\theta & c_x & 0 \\
0 & \frac{\beta}{sin\theta} & c_y & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}
\begin{bmatrix}
\ x \\
\ y \\
\ z \\
\ 1 \\
\end{bmatrix}
=
MP
\tag{公式7}</script><blockquote>
<p>E 为单位矩阵</p>
<p>K 为内参矩阵</p>
<p>M 为相机坐标系下空间点到像素坐标系下平面点的投影矩阵</p>
</blockquote>
<h3 id="世界坐标系下的空间物体-向-相机坐标系下的空间物体-的转换"><a href="#世界坐标系下的空间物体-向-相机坐标系下的空间物体-的转换" class="headerlink" title="世界坐标系下的空间物体 向 相机坐标系下的空间物体 的转换"></a>世界坐标系下的空间物体 向 相机坐标系下的空间物体 的转换</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20201001105119.png" alt="图13 示意图"></p>
<script type="math/tex; mode=display">
P=
\begin{bmatrix}
\ x \\
\ y \\
\ z \\
\ 1 \\
\end{bmatrix}
=
\begin{bmatrix}
\ R & T \\
\ 0 & 1 \\
\end{bmatrix}
\begin{bmatrix}
\ x_w \\
\ y_w \\
\ z_w \\
\ 1  \\
\end{bmatrix}
=
\begin{bmatrix}
\ R & T \\
\ 0 & 1 \\
\end{bmatrix}
P_w
\tag{公式8}</script><blockquote>
<p>R，T：相机外参数，表征相机在世界坐标系中的位姿</p>
</blockquote>
<h3 id="综合前面所有，从-世界坐标系空间点P-到-像素坐标系成像点P’-的转换关系"><a href="#综合前面所有，从-世界坐标系空间点P-到-像素坐标系成像点P’-的转换关系" class="headerlink" title="综合前面所有，从 世界坐标系空间点P 到 像素坐标系成像点P’ 的转换关系"></a>综合前面所有，从 世界坐标系空间点P 到 像素坐标系成像点P’ 的转换关系</h3><p>综合<strong>公式7</strong>与<strong>公式8</strong>：</p>
<script type="math/tex; mode=display">
P'=
K
\begin{bmatrix}
\ E & 0 \\
\end{bmatrix}
P
=
K
\begin{bmatrix}
\ E & 0 \\
\end{bmatrix}
\begin{bmatrix}
\ R & T \\
\ 0 & 1 \\
\end{bmatrix}
P_w
=
K
\begin{bmatrix}
\ R & T \\
\end{bmatrix}
P_w
\\\\
=
\begin{bmatrix}
\ u \\
\ v \\
\ z \\
\end{bmatrix}
=
\begin{bmatrix}
\ \alpha & -\alpha cot\theta & c_x \\
0 & \frac{\beta}{sin\theta} & c_y \\
0 & 0 & 1 \\
\end{bmatrix}
\begin{bmatrix}
1 & 0 & 0 & 0 \\
0 & 1 & 0 & 0 \\
0 & 0 & 1 & 0 \\
\end{bmatrix}
\begin{bmatrix}
\ R & T \\
\ 0 & 1 \\
\end{bmatrix}
\begin{bmatrix}
\ x_w \\
\ y_w \\
\ z_w \\
\ 1 \\
\end{bmatrix}
\\\\
=
\begin{bmatrix}
\ \alpha & -\alpha cot\theta & c_x \\
0 & \frac{\beta}{sin\theta} & c_y \\
0 & 0 & 1 \\
\end{bmatrix}
\begin{bmatrix}
\ R & T \\
\end{bmatrix}
\begin{bmatrix}
\ x_w \\
\ y_w \\
\ z_w \\
\ 1 \\
\end{bmatrix}
\tag{公式9}</script><blockquote>
<p>[ R  T ] 称为相机外参矩阵，3x4，6个自由度</p>
<p>K：称为相机内参矩阵，3x3，5个自由度</p>
<p>总体有11个自由度（未知量）</p>
</blockquote>
<p>设</p>
<script type="math/tex; mode=display">
M  
= K
\begin{bmatrix}
\ R & T \\
\end{bmatrix}</script><blockquote>
<p>M 为世界坐标系与像素坐标系之间的透视投影矩阵</p>
</blockquote>
<p>所以结合<strong>公式9</strong>：</p>
<script type="math/tex; mode=display">
p'=K
\begin{bmatrix}
\ R & T \\ 
\end{bmatrix}
P_w
=
M P_w
=
\begin{bmatrix}
\ m1 \\
\ m2 \\
\ m3 \\
\end{bmatrix}
P_w</script><p>转换为欧几里得空间：</p>
<script type="math/tex; mode=display">
\begin{bmatrix}
\ u \\
\ v \\
\end{bmatrix}
=
\begin{bmatrix}
\ \frac{m_1 P_w}{m_3 P_w} \\
\ \frac{m_2 P_w}{m_3 P_w} \\
\end{bmatrix}
\tag{公式10}</script><h2 id="相机标定"><a href="#相机标定" class="headerlink" title="相机标定"></a>相机标定</h2><h3 id="相机标定的目的"><a href="#相机标定的目的" class="headerlink" title="相机标定的目的"></a>相机标定的目的</h3><p>求解相机的内外参数</p>
<h3 id="为什么相机标定很重要？"><a href="#为什么相机标定很重要？" class="headerlink" title="为什么相机标定很重要？"></a>为什么相机标定很重要？</h3><p>相机的内外参数描述了三维世界到二维像素的映射关系</p>
<h3 id="标定原理"><a href="#标定原理" class="headerlink" title="标定原理"></a>标定原理</h3><p><img src="https://gitee.com/JunLuJun/up/raw/master/20201001152618.png" alt="图14 标定装置"></p>
<blockquote>
<p>已知条件：</p>
<ul>
<li>世界坐标系中$P_1，P_2…P_n$的位置</li>
<li>像素坐标系中$p_1，p_2…p_n$的位置</li>
</ul>
<p>求解目标：</p>
<ul>
<li>摄像机内外参数</li>
</ul>
</blockquote>
<p>结合<strong>公式10</strong>，各个点的坐标表示：</p>
<script type="math/tex; mode=display">
\begin{bmatrix}
\ u_i \\
\ v_i \\
\end{bmatrix}
=
\begin{bmatrix}
\ \frac{m_1 P_i}{m_3 P_i} \\
\ \frac{m_2 P_i}{m_3 P_i} \\
\end{bmatrix}</script><script type="math/tex; mode=display">
\begin{array}{l}
u_{i}=\frac{m_{1} P_{i}}{m_{3} P_{i}} \rightarrow u_{i}\left(m_{3} P_{i}\right)=m_{1} P_{i} \rightarrow u_{i}\left(m_{3} P_{i}\right)-m_{1} P_{i}=0 \\\\
v_{i}=\frac{m_{2} P_{i}}{m_{3} P_{i}} \rightarrow v_{i}\left(m_{3} P_{i}\right)=m_{2} P_{i} \rightarrow v_{i}\left(m_{3} P_{i}\right)-m_{2} P_{i}=0
\end{array}</script><blockquote>
<p>一对点（世界坐标系中的点和对应的像素坐标系中的点）可以写出2个方程</p>
<p>共有11个未知量</p>
<p>所以要使用至少6对点</p>
</blockquote>
<p>在实际操作中，使用多于6对点获得更加鲁棒的结果。</p>
<p>方程组：</p>
<script type="math/tex; mode=display">
\left\{\begin{array}{c}
u_{1}\left(m_{3} P_{1}\right)-m_{1} P_{1}=0 \\
v_{1}\left(m_{3} P_{1}\right)-m_{2} P_{1}=0 \\
\vdots \\\\
u_{i}\left(m_{3} P_{i}\right)-m_{1} P_{i}=0 \\
v_{i}\left(m_{3} P_{i}\right)-m_{2} P_{i}=0 \\
\vdots \\\\
u_{n}\left(m_{3} P_{n}\right)-m_{1} P_{n}=0 \\
v_{n}\left(m_{3} P_{n}\right)-m_{2} P_{n}=0
\end{array}\right.</script><p>化为齐次线性方程组，如下：</p>
<script type="math/tex; mode=display">
Pm=0</script><script type="math/tex; mode=display">
P \stackrel{\text { def }}{=}\left(\begin{array}{ccc}
P_{1}^{T} & 0^{T} & -u_{1}P_{1}^{T} \\
0^{T} & P_{1}^{T} & -v_{1} P_{1}^{T} \\
& \vdots & \\
P_{n}^{T} & 0^{T} & -u_{n} P_{n}^{T} \\
0^{T} & P_{n}^{T} & -v_{n} P_{n}^{T}
\end{array}\right)_{2 n \times 12}</script><script type="math/tex; mode=display">
m \stackrel{\text { def }}{=}\left(\begin{array}{l}
\mathrm{m}_{1} ^{T} \\
\mathrm{m}_{2}^{T} \\
\mathrm{m}_{3}^{T}
\end{array}\right)</script><p>方程组个数：2n</p>
<p>未知参数：11</p>
<p>求解超定方程组</p>
<ul>
<li>0总是一个解，不存在非0解</li>
</ul>
<p>求解目标：（最小二乘法）</p>
<script type="math/tex; mode=display">
\begin{array}{c}
\min _{\boldsymbol{m}}\|\boldsymbol{P} \boldsymbol{m}\| \\
\text { s.t. }\|\boldsymbol{m}\|=1
\end{array}</script>]]></content>
      <categories>
        <category>充电</category>
      </categories>
      <tags>
        <tag>相机模型</tag>
      </tags>
  </entry>
  <entry>
    <title>Aruco实现AR梳理_2</title>
    <url>/2020/09/21/Aruco%E5%AE%9E%E7%8E%B0AR%E6%A2%B3%E7%90%86-2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Aruco-实现AR过程梳理2"><a href="#Aruco-实现AR过程梳理2" class="headerlink" title="Aruco 实现AR过程梳理2"></a>Aruco 实现AR过程梳理<em>2</em></h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><a href="https://junlu.club/2020/09/14/Aruco%E5%AE%9E%E7%8E%B0AR%E6%A2%B3%E7%90%86/">上一篇</a>说的比较不系统，而且有一些问题没有说清楚，这一篇将系统的整理一下OpenCV，OpenGL，Aruco的具体分工，以及一些疑问。</p>
<h2 id="目标效果"><a href="#目标效果" class="headerlink" title="目标效果"></a>目标效果</h2><p><img src="/iframe/aruco04.gif" alt=""></p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>和之前的一篇一样</p>
<blockquote>
<p><strong>OpenGL的世界中有虚拟相机，现实世界中有真实相机，只要将两个世界的世界坐标重合，相机位置重合，分别渲染虚拟模型与真实场景，即可达到AR效果</strong></p>
</blockquote>
<h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><h3 id="OpenCV与Aruco"><a href="#OpenCV与Aruco" class="headerlink" title="OpenCV与Aruco"></a>OpenCV与Aruco</h3><ul>
<li>将真实相机捕获的画面，传递给OpenGL，用作背景</li>
<li>相机标定，将真实相机的内参标定出来</li>
</ul>
<h3 id="OpenGL"><a href="#OpenGL" class="headerlink" title="OpenGL"></a>OpenGL</h3><ul>
<li>将真实画面，正交投影至矩形中，充当背景</li>
<li>定义虚拟的Cube顶点</li>
<li>生成OpenGL窗口</li>
<li>Cube经历的变换为 <em>MVP（model transform, view transform, projection transform）</em>变换</li>
</ul>
<h3 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h3><ul>
<li><p>如何将真实的世界坐标系与OpenGL的世界坐标系重合呢？如何将相机位置重合呢？</p>
<p>OpenGL中，相机的位置是固定不变的，我们看到的永远是相机看到的，所以，只要清楚相机与世界坐标系的转换矩阵，即View Matrix，就可以将世界坐标系重合了。</p>
</li>
<li><p>Aruco的作用是什么呢？</p>
<p>获取真实相机相对于Marker的位姿（相机外参），传给OpenGL</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>Aruco</tag>
      </tags>
  </entry>
  <entry>
    <title>关于AR键盘</title>
    <url>/2020/09/19/%E5%85%B3%E4%BA%8EAR%E9%94%AE%E7%9B%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="AR-Keyboard"><a href="#AR-Keyboard" class="headerlink" title="AR Keyboard"></a>AR Keyboard</h1><blockquote>
<p>参考链接：</p>
<p><a href="https://www.cnblogs.com/mantgh/p/5680580.html#other">https://www.cnblogs.com/mantgh/p/5680580.html#other</a></p>
</blockquote>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>任何一套成熟的开发系统，都需要一整套开发套件，其中UI套件必不可少，其实用性，美观性关系着开发者的体验以及用户的体验。</p>
<p>目前，截至现在，Hololens2的开发工作，在Unity上的UI套件主要包括以下几种：</p>
<p>我有一个虚拟键盘的需求，类似于Hololens2的系统键盘那样，但是根据官方手册的指导，进展的并不顺利。</p>
<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>在混合现实主页的模式（即全息三维模式）下，使用虚拟键盘输入文本，类似于Unity 2D模式下的InputFiled。</p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul>
<li>Unity</li>
<li>MRTK</li>
</ul>
<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol>
<li><p>首先我想到的是查看官方手册，该如何调用系统键盘，能不能实现在应用内部调用系统键盘，从而实现上述需求</p>
<p><a href="https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/README_SystemKeyboard.html">官方主页链接</a></p>
<p><img src="https://gitee.com/JunLuJun/up/raw/master/20200919213126.png" alt=""></p>
<p>官方链接里面内容说的很清楚，这里不再赘述，将代码列在下方。</p>
<ul>
<li><p>how to invoke the system keyboard</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> TouchScreenKeyboard keyboard;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OpenSystemKeyboard</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    keyboard = TouchScreenKeyboard.Open(<span class="string">&quot;&quot;</span>, TouchScreenKeyboardType.Default, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>how to read the input</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> TouchScreenKeyboard keyboard;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (keyboard != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        keyboardText = keyboard.text;</span><br><span class="line">        <span class="comment">// Do stuff with keyboardText</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>Build的时候，尽量选择到处类型为XAML</li>
</ul>
</li>
<li><p>按照官方给的方法，实现的效果不好</p>
<p>当让其显示虚拟键盘的时候，Hololens会直接退出混合现实主页视图，直接变成了进入应用之前的场景，然后出现虚拟键盘，与我的需求并不契合；输入完成后，按Enter键，Unity又会重新进入混合现实主页视图，此时，输入框中会有刚刚输入的文字</p>
</li>
</ol>
<h2 id="其他选择"><a href="#其他选择" class="headerlink" title="其他选择"></a>其他选择</h2><ul>
<li>自定义一个自己的呗</li>
<li>听写识别输入</li>
</ul>
]]></content>
      <categories>
        <category>充电</category>
      </categories>
  </entry>
  <entry>
    <title>git clone 速度满，加快速度方法</title>
    <url>/2020/09/19/git-clone-%E9%80%9F%E5%BA%A6%E6%BB%A1%EF%BC%8C%E5%8A%A0%E5%BF%AB%E9%80%9F%E5%BA%A6%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="git-clone-速度满，加快速度方法"><a href="#git-clone-速度满，加快速度方法" class="headerlink" title="git clone 速度满，加快速度方法"></a>git clone 速度满，加快速度方法</h1><blockquote>
<p>转载于</p>
<p><a href="https://www.cnblogs.com/PieDaoChuan/p/9773039.html">https://www.cnblogs.com/PieDaoChuan/p/9773039.html</a></p>
</blockquote>
<h2 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h2><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global https.proxy http:&#x2F;&#x2F;127.0.0.1:1080</span><br><span class="line">git config --global https.proxy https:&#x2F;&#x2F;127.0.0.1:1080</span><br></pre></td></tr></table></figure>
<h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy &#39;socks5:&#x2F;&#x2F;127.0.0.1:1080&#39;</span><br><span class="line">git config --global https.proxy &#39;socks5:&#x2F;&#x2F;127.0.0.1:1080&#39;</span><br></pre></td></tr></table></figure>
<p><strong>注意：端口号1080为VPN设置的代理端口，可自行修改为自己的VPN代理端口</strong></p>
<p>有人使用第一种无加速效果，第二种代理方式速度得到明显提升，峰值可达1M/s。</p>
<h3 id="取消git代理设置"><a href="#取消git代理设置" class="headerlink" title="取消git代理设置"></a>取消git代理设置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Ubuntu配置</category>
      </categories>
  </entry>
  <entry>
    <title>C#语言实现Socket通信_2</title>
    <url>/2020/09/18/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0Socket%E9%80%9A%E4%BF%A1-2/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="2713a22fa591788ca1841bec802d74124052f03206282b88d2a0573859d6f48f">dd0d603e5e9ac09c382302acedbbb84d1507cc415b62c66d207fc15953c4cdfb0773e4883a1aa17524c83a18624bcb4a7390fc979a9f201642921924f79d0d334f0e6e583fea9a4a9204c830749d63b3f76e98917439b70150d6accb95bbe68b760c51e7fde9ad6c69ae1cb795687842c7312d4d045707524cb53757cc916b64707492cb5a52b060d4e628ee422de8f73feee293ef8aaabe16c7eafd14cf7a7c3c78524420e9005f007fd2bc98057ea9095a7f9075f5c3f3e2cf2ac46ab4827fe450e81750af4951c706f8fae97106022b2315369707a81ea26c8dd7ad04592e70f9bca919aea4fe44394759d1c63dca1ab1dfb386b42f810e8064fe00cf1db6eb3e3f72fb44e248ab53c6161fa2979dd71f5187047aa7511dd4a559475ddecf0a3da54ace0e6f2b66c271e8f7c8e7d4114765d57d4b75e145ac6034cd40f05fe00423ca293089dde910a4f4311ebc69a495b100610d290b4f522c27a456b595bd1a2895627db2c1f1c53c532086417e9cd35995ae06c4bd75bbce1daec3e0e882abab756ed47c9179840f55d512cc7677b978de0ba75ea1beeb920e36b38ecb671bedd88d48f28b0342635fc2b962585bd95baad2c6ae56b5c76afbebc9fab12afdce821d11084c6f182f7641af59f3a16227386ab0692b8d53b5282deed877d227f2168d510c0cafb539b29960f6967da3ba39e088cd4edb4243a3ba5fbcfc3831e7f22623492b651fdbc979b10a7cee9ef795068ec2a680e5f14b21038c8c1a543feb2f6e0f86635361927621ee80a19a65ed5606c50d3f8641e6a716ccea389a08a6829c1b4b6a6e32220955d1d76b4a10557555a86bf4e1e84fde2d53ab1ba844f8454a3796f78fa2b1f4bd4ac7ec31dc880d64c78f491565a75a2c62cb35848df6b5e42482a5ab1c6a438b166e54e75986ca80658bd74b4cb37382fe263c746e1fe16fabbb40dbb89cf8e8132f0ac547be6f505ed3d85ffbfdb19966da27545a2b2abb10cfe212e82e74fb5ce1925816bed0b2baea19067e46282667bb1b6be38722ed9b801cc5ada1383d2f7f53580cd9d0f836925ca8abf110e54aa1f2b974118ff3f1c5ad0bb8969d500dfc74d282fe6e18628ba4555c059841663883343629049e019006ac09209b88c6a177272f1fe7d4753fc07fa076b80082cca85afb86b933b6fe18a0b6108c9ae0ff6fe1e3a990e1ed9a4aa072068f60e5ffb8de9be48d044dea872922b8bd880e1aa1a5e56bd1214ae132ae7979f19360fd12b4537bbc41c4c44000da8eef578d84793de9285b0bb4bbcb9cd41ce2da0a0ee182a0be841fee52afc93f04b937480df3f029344c5523773ab819bfac0f14134672655594b288c5e58e5e031083be84523194dfd5749a020838edd3c3966d3152b353d3ddf2e6e6f04de1fa707da5ffeed3b6d02bb475779c51a5eb4e96f76c33c1acf7e98901cfe643634725585c09b7dde4ec1086efdf2c9a99aa176ff8402cca80c060beee4bb2ff36adc6fb906d1e8f6ffa9e57bdd02ecb3fcbce2283bd1eaa9899758bb5fae51210fcc4acb302bfbb92f20997474ad0f4005b6bc0b0b7c65f9ab7f9055c4b21ff9da2c3edf74bb42f11871257a41f0520f90a57cfadd7c4d4d3d4111e18a25d99977a8d91960e24f8d62cc15e5f50f4566baf59c90557f8a4d6073854f6071cc6b09cf4fefda79f380b54ab2b7761b8e49d88d709a46b6f9e1779e38700bc2034081554b4b3f19c50c5bc704b061cbc8685bce02989226c3e4ff72add80aed817ca124312d7c344ccbd21f5a2cc14e0d9900a9155be6f8a1be931633482c6cd67cfe7e6852f53a7c85c1745c69bf0d63ebf2e055d062ac11f361e428d131048ab6aa602ee8f641a8144540fe2a3b54bb48bf6010d224a06af81c2e39e84558f77619de5cdffce929346cfa232d8a55298c0fc7ce46c87e2379f722a63339406ac8e962c3ec56e0782606b4356aaa3691418b16515572c90eb9c2d324bba6ebda4b70ad3784748c1944097fedfa481240a3f303b2384aedf2a38521d5ee1c82b4219aa45c3fd2ba6fbf463f2417c5aa718efa9ce034efe683e01cfe107bab367cbac34194129487783e271307548f756808cf9244eadb10a648bc2bcaafe0d883bc81e41f064ee7aa4b2354d853e1a7ba3fc047117e8fced21a4c5bbd2f8446e91d655b4b0a9f99eb56147c3e472d5fda1e9f9a0247549167c5994caaf988474b8f06af2861d4c5294190e94c8f7ffe32bc4720f3635a6d297ed1a738be470fd45f4154b98ec0bcc0382a2b521bedd325920dbf2e0af3ac9a2664c73adb53ce32e716b1b6a2f1f3dd8fde0d446b4617810cadb7cb5ff31ef22c092bed5b9ae390f5a9ccb45358d32d35c60dffb88cad511d74f643a5d209b6cc8b90c8dd3f2404d161c4f3a608c754c7c628779d7a84cfcd6c73bfcf26f7b9d5ec48f4290e8bc382285488f86be5afdf997fba526a2de16304b0dd0b1ace4f5b2adc15594e5cc3d4c2ffb0be8a542c20d6c5ac2640d7e8ef3fc5c129fb79bba57dea41d172c5b878968f3d10a0ee18722a8b46602d8e9762a5d4f0e1d873ab83d60e8a0e523818bbc1ecf14e38af873cb69e7cd0d0ae85a6d7c502fc4a02cf8523299ca4ca5af8041d52ddee1b1c437268768674d1f2c77494e10071dc65ac1097507aa018b4bc9e0d9f1872d7e6225b1cc3a44baa07ea3715c66888f8ab83c8298f25fdaf0f8c9496da35e5f61ea38860edc4f071d04736ead5850eebe5f82c6348e03d65a4aceb2bb31540bb3465a830bf7330467ad4f0232297d824460e6fb69037c01be80a106ce113e0fda28f9843de2fa73c3a67bdcc97717d4b2ef69dbb654fa4f1a0d3a7ad3e439c97804f0c1aa85ee56b6e08263a21dc7c54cd63bdc4b37394371168da0c7e355ca379e04b53dca19dd683b400f222db433ee72321903fc232e87c0980ef12352464c018e9f180deee7c0e97551c5ac7a237fbcb34dec7c7d4540b5fcaaf32d280f2535683b8735c4f4886396ac15934baf5244d19fc4f4f511305a9e6da1519f6e76c1a9649b6d110d22d8094e2210be316555c3808ffe3f3a3a6e712f61bf54c3db8629d03ada952436f46638ba703641366adad27ebb1d0cf9c14fda4c35e796ebab4d45cbf390e08f674a07b53075ea7e07df42ef0ad95d8e09b9c43661c21f95549c6b43f39c7c9a751ce423b58cbbc4fcb609a3fd2de85995a56ed4f218fdb6fd514a640b1ac59fbdd0fc80ad311e9752c287f97df9249721e0e6ea59351336a982e0fea93924ffe690a8aa52cccafc7c8206dcbc549e2c1fc6a4746f7212f4252db3e769900634a15243a9be563964a9fb0388fed9b8e5a4e9a4130ba8602bc4d40ede5522ecf609d00df60cfde3055a6305fa5e3d9e8422b6cbf5970355e391ea3619f8bc41561fc7dcc02df8d7c17f7ae8ec0b6fbbf87d718e334aaf27b06ba2b46fd8b4ef4b75425bf6cbf8e5bcc461dd612f6968e6303c4bf516a779d5f115453a7efa3fa552be4f59d72aac9e0b533bd72c9e60f028c271a0264614cc9dfe7c914a0fc856e395415bef064ff0bb6d5f6a648789ae2f1eb25a7ecc3c81a1fb48323be3fba8d3f7930e2b26325c4092bc0dc46263ffca53adf8be67ad4eade6d0f322a9112bfaa7623ecaf4f23182eb3fe0ebb1ee2f0d55f24bdc67346b5aed98208c042817c9a64f1815fc8da97db32d21614d7ccfb030dcc2b728e9fe971d15198487366b6e7abffaf4e74d98d2673002c8161422815281281981ebb24ec5efa5104915c17862be1e3c602c6afa068ff5dab789b2583d64c650a295b1a42fc1926b1d7856f004dd353c46e472d413759df14d7552b8fe6d62388d3172aa8db3c14ee4f4f357eabd4901b8c57961a99c032eb4971e31f416b24070bdbcd95ad1d55e365b778d80839d58da74f43b73c3c8d9d0f7c8047d5eef253d879140e65c312ce7ec41ccd629a7dbedb4f9721866b8a8e3d06cc5cf6ff6952bad80a20e637ccb0842a628ff3d6e66ae69d586747e36287319a3b4c6c6b5cc3e527912797d22af83b56d9a01ba5b9e0b987b81be73fd5dd060f7fccb8d0ac612746d27ed44de452376590e6feb1e0b15aef8c600361658fde9382043fa67bc087b825e3efe163d927d2d9db1f2b7ae544f4c013ec794f6c10800a7b8c6015b4e5503ad5d80b9fd2c3c5c881988e0939a4417988e668effd8fb9750849a533a03c4b5247416c8888cfd38f52119847fe285f23973b97f60ae8576e89accf10cf592710a65a56b5f7d707cc334091d530b8f086fbeadcd7fdfbf4172eee6b0f2d562e8671a4fa2910ba8250724e31aedfd7e8eb4ea7c06c6dd1a96bfadc707175ac6b58068b118497bff18ad56fd26248a849dc2e015ae9c7fb3a4d6a5bd659e69713bc52f5b742da60df2a4d5e81cb817bbcdbb388613063e6e47f6104f07fab2804c2c1c86287da5e13b33faa8ffa25cc6ff68eb4b958288d3cfa84be4198717838c3d9024cdf74c8b07a5ae462cecd2d3598a1da9a8569b9742d07c997cefc8d6d5bc4806b6f6a2095b720393b29a345274bf532c7f1e0db375d5bb64e6310d7e0ffe5b1520b190338c6cc3d37e9702241a7a5e1283e942a63f2f0e913b94e26b4fa872d6d26cd07559d59e4cb7409726522d608c49b0e55e3b3349cf4f21784777a6977564212b9752bcd1e05c048b5b4c6f4278ee3e47abd0a244f3f79658d1b86c9833fa4c1cc0b15faff1ea73b4b62a2c123f706543aab5f607f8ac9130e4dff4ee148b3601a05c38c56ee128962c95006098b18e8e3dd0ce36da974148a3d1337724452d8b0cb6f79344e6b53cfff446971227fcce96c66a48106a8622e907817d64a00e2c27da9903d8cd4c45df6e7a90400f541ac4df3b9c7eeb815036fd6ef740df6cfa0152708d0a1bfcce697f07c31e27c74ca259bd1a8a8feed553cd8a6d367256f2e32d002b484df26f9043a25a01a78d6798c607c77bbdb445523bb25926cc7796d35b226bc95ea560980670e36ed5679fdb5c92ae8d2122e50e35b3334447e3509b7ead4dda2f6342d92128c0a4f392893455f5891af0d42f29324484fdd184977f91acc568887089cd8bc74eb19deca73a46600be97f4cb412f13154476d847e42e73716105d50b971374d58ea9f58443868ee1121cbac98d63de325a100318885bbbad2e76cd059ed324d90d4d961a4cf9e07324d6ba3104aeaee89ea77dc8de410f4e978a21a6e0d7a93bf8e06a230265d99a8cae1ea9e3ff5c7c3683a78d64d91a6b88a76cfa9dcf9636b35bb0377c0396179507eba33a046d18638c38f7ad9956632ead7e50fd973ba678e6ad7e90c18c757b61860fde14dd5095a84fc1bdd65714c817026f64f1dbf751dcfe3198686e9c6178c39d62114326ca8eda3043d02d32d92fc4ce5e68253f6f80730bbade6273328c73d031983a57d757b2d13cca448e16678b319635e6b8839e050f8945b5d128240f52208cdb7d8ea8b16888d657dbe5965012c9e40caa490acd330559ea43cb3beeb69936d6796bd02ec36855ac6258313bc611dcb542e0684c625a78ebdd0dc6e07b2a96b8f3d714a657c10d4ece8af605513e3c074a7896f80a855c61aa56596bc1daa3849fd7f49d2d120c35f099cce8042d01507e615741a860141de29d86e2219b3d5c9f7020faeb6f3201f07bcbd9cdc33b2ee5a6d85650b029e7a50dc16d19e7498cc2ca600028f72d8b7b5901e5f2ddf0bb62073835a9fc6df1a5393fb50ef799d83bcc4ed4d29e15cde4906e2f57bfe4246fc6a336b27b17bc19e98fcc353cc9c782130ff40f9a10ac941c0134ab1ea6d34a9daad2ea6b4403cd68ba4a3a16ec5cd74545860b368214368b0caf229f5bca4062dcaed4b58be79c8e42b2235c59fa8901b678818315573fc8081896c8eeb363cf4cfec4f14b34403b00406893dafd739a98fc0e27688c41b24c4a27db014796cac23461765be623f971d4028534dd9591bd13525fd58d69b3a351ec71913c6a14768cd5c660a53fd146975b0c07a39397eb8d4e0ccc5e2cf272b77da5c17b5c4c4697ba44ed00e3f55f0bb745fc4ddd1a154fcbf81818deab1e881f82cb5a0fa9e5d7dce3edabd90488395f02d0cfeb6ef5ad2c9f913527b44e3d9332b6ab53e4fcf99d663561fc7a8f116be3f424039a7e044b3fb527acc3e4706b48a798e57f4decc5b735d63554adcd9a66190a874dd3b1cdcb0014c3c89915f81910305d1a0abd9c68e34f5525a794e14b039c9187a7b2b4662e41cd39df5dbf8f27d9067a910da44635f552c941b58267b25510e1d7fdc6593df999caf6aa2fdbc32c1808eae573daae5f4fecda2ded413e11eea8dffa737394bcab9b01d033af79278a7ce1f7c1825cd4a5865168fa6fe78c4fa83a50fc492f6de1acd1a76db202bc73566ecca672c2b74a47d2d26129733fa9ae26b1ac6a26e7fc7a0390d895b80538012342d866d4ee1bb9fbea7891a8c88a2f02361a11a77b85f9fbfc7bda168bfafc76a71684aaf4e9122e2fd50351197762aa2d74d3049df53aca7df6808e6f84788dedeebd124e66751f673b18456dca761db298dc9a8a7d671c305c181b567b5a01cca032134230c06e942a4838f73d6c594ab20371d4aba336589a111b04c7960c9173bd393f87aae8f483b404948386b16c6958345f092ef482d22b105aaf23e3539b79f48438f6c4b52ba59f6113a877a746e5ff55869e0ee639a974f097a3d18f20e56f67f6831778753b9148d8acd48281ef182d7987a113fa38a627e42f9ddaeb2815962e22f110efe159952956fd9dea4b0bf92c62b77f94124428241030b312e8fe7baf500b1e8ae27e2b14dbe32272e8e87ab2e25eb71b7f25327207aa0814e717947d7677f442d53de7263a0f18b1c41dc437145388d769d3b45bb6803da92a3e34f32544c599e4435d9e7bdbae3160448c5f6003b08e754fb24cdd73edd9ddf4c59dbc21f028a2eed38752ccf939de04bd63609d23b95c0035cccdce16a165595811e7ae1e9c25ad5532769d8e2a150721b6b68e063fc9b6a884d5704ab227290f84f492ac845e7a789e6edbfc53a8463154089b12c2be3e66b8d7f78698d3e51ccb5c401b41a5b478b53a747639d43504b9af676ce45dfe90fe75975453da7871b3e0462f4f5db10ac2d617f20b59be87c9f59f8d4dc42c5f65b3f62c59108a8949784c9063044b5eeb94b553b27a09c1302ee5ce249967f38fc3f04285014e64890d83f704c52ed489013431aa9d36ed0b83110d18e425383b778260438b858b70f5c3672d9144d227b6a0e1d6613df97f1c6eecbd5fb7b58fe3f4e7c672e0e7926259411f237833752ea038c8145097492365f5f96cd7a332a3914a434a166acf4c90b2a682f7ee87325f45803903441412003c99da21e0d932484e48a9e0437d13fa424b4fa8596cbba5a68a45237dc110dccdbada5e61fc5a5bd327c13fa2b868258ebd02b15a2068e27dff32d53734ff21e70792423179b175f4d0e78035a0c9c8a27cd05fd9b63723cef63ed5e75baf0ea21aa380f8e603c43439601f39925babb5f76abb66faeaf7270af703dde1ff5c563cc800023cd4c7dac5f81c827f6b14259b7ffb99c780e78ad8a6d7b0d39ae523d1f5cd27fd5aae19ff3ed343902e383788bc7423e36d89728178ea5bf1937fda514cb75be6bc4bffe30ee8bf5d327b88b5c9afeea0f31dc86687d99d6d7004d25ab0d8c72f17e7e1c686aef3646f7e33940aaad018a51810da41e2c3bb7cc05eb21b41f267dec44a3d926310c76c6a3ec8cb10a02f450ff84b55ea12e6aee88891b1f4c0977e43c00fa3ba8a7354dac9e1a2a5deaca529afa5efb0928703f9e2d8a05dbf36a82f3b23d37146b9f8c9966aa25065661f01c400c683bdc6a6c758d7c19c05d2fb1e5dd06a16231334b6119467e0a1c09d33500e559f5b79e1f93f46055598405a03ff1d4333dfb760f59cd2b983dabc01892b676be51f667e92f9f125245e174f8f01683bc1c26e678ebf2b06475ba547361d2c8703b2db6081e7d4ca98184b1dded30e091d8d0ea0588d858e509443d2fa438cb55a7412c7fb614b8d6390a22fbba654a440cc804b3fdac7afd78f72894abd3a9358e790947e0d4f1ccefef194b03e3d852cab4c61311dd0850de46229178407b59c52a61f6013704997be2c0ad83195045654b042610983629d023f210777cd52bead4e07054f673771a03e13377f81d6f5217f8532abeb50d8aa0e708b444781fe93bf3d6f92eb09efb48d6bb0b81d0031741caacb8f269e45365e503cd5382a0cbe9f9e47f9ed66aeb021c43ec9bed628123191a16c5ddde93db7d46699dd5cb5bc25705f3e98040a678e803b823e4c73c9ded7c856c94c3b1f6ce7eefb1ec226622b5af51feff6bd71b47bae4128082f97cac2495ca18399324dbc402fe42c43edd4b11390744ba8bca6c8f99ea4a27d13d2cb3856faf3c50ef142b11ea1955da86ade4d3796ba5f1fbe0b28af99237659d014b2ce9ce8a07ad7f38c782e6cfa0f9b77470b7e8a98eca21d109b7f3b5a2042df037b2afbe20a6350c0573ad0f5d7efbd56fd538a8a294849321f814ce21da4f3ff27930ed80d1e1725767b4de984280eab1fa7c97566526d6bc6e68e412c530404637ace7e64ad4874b7fc614ff947e86d0fcd50f61c19890dfd2be1b6721a442158600113bc96c1a10c3e34d902b613e1862bada80d5917ebfc7c810d35d62b0ba93f1d1aeecf8084c5142feb764cee2876d0daa7ceeb7207ba0ef8ffcf81d742159952343e589d0b90b8c43bb2f3d28a1aa508d4212f72c79ee62cd6ac5f1eb08aecddef72757cb37e9c499653ba0d6a3ffa6d5266f11cef01fad7be52ecc23da89cb6814cdff62b6c2490a11b9ad88cbaf566412dc7466309309024b8e1890c9a8385b9a90a510ee38d9e71f11826e9b2bb029406f5e874894763e6824b73c8500c665eb3c5e301a401d02769a85d3a59fc6c20fbb576701bb1d8edc229ad8ddce946ca575a0df6fc52bae9578dae08f2e3e266cedec9e063e19c571a1243bfd65d1aab362781c1ae3ae7885080ab877a5fa4e1b900a22b26fb0f8fd3f1f2c7fac1577234063f9ad0a79b84ecafc42e33ea355fcf95fdbfa1a536300fd9396484599424b4bc9c1f21e61cfe9e63748033fbea35ee8f1066d2081c6f2c8e8949e9f251fbf0e6aa6539ba29a8c1e7c350c6e6ecb296fbd0489393b1f39054e208283724a600dedd2a92f223f86b2a0b029fbc3631af70f09992f551725635d136bb3d8b97d0af429c28564285bbb1df5e96acca5008856af5f97a0d09fe428c81ed7650b8110f66d000912478cce8230a80a11b2258b73deb5f7b6ddbf3dae46142441f67d6abd2c3712e5bece62da3140fb3308c672ed9c0a978235b0141a63f8ad4c55e1ef29d75925d5cef1746db8314958f707429c0cccbbd37aeb85f685cd27962efec646ca22f6c335b8671419ffa8530ecb6979edf92f62ff52d62fac2611bc5e27d4e67365f91e3444aaa33618783b966e5d43a18109bd573dfa32ce0d7a6cd853a002b77d1003f5a7505bc209a1293902e2a65f0fc4fa1bcc11a34f8c947937caac0641332ad4e6c853fc619f4d67bf9cd5f405cbea9942a66e61c9e432b03ef22bfe47366b52b6347ce54fb1065c2aa80f0a78c189d39627c7145c2ce9e9348b30c9c7493e679746561305d9148c3d432bcd9db5d75bac2446251bb1ef900069ed6fe61dfd6c1112a1959411f7193ac22265e386b5d5c2bf2bc6810d56540de41bef1a2f09213d568283a5c7cc392d9971acda76ded98cd9932a6e1563cdf1c172d88c03552aa20876127274b56c3323684de6e8e0e1187cf664add43470c12fe463cd6aa7e48ae5b69445fafe0e8bca11716821f105cf80d3d9428be0c912da476b7436cff2f1f122952dd59ea69108b7ea5317dfcf996105bce50f92292f431da3daf76c8ceb487524587af8af358d0bf58ae1e0ef28d17f8040caa38764022a23759fed492da8ef4168b8fa8f1d93f5fadcd5d172415427ce2ce6cbb4c8ea3080f1483c2acc6f0600d266d9102ec3424f649dc6b1749850c3f7125e00956b7d6b1cd47df8bd00a66f0e916602d3915f734f291e07e8bbcabd5c0c3b0338fca279a6c42c940233b4d814c7ccebad12c3c2edf0f42211fc31d8e190ebbd75c466b5116dea179d8779c5bb9217737f12d7d9c85a2ae1dfcfd418bf7067a04ad27b7e5d6395daac4ba1afdeba242fe5b406a652bd8d5162df2f8e71d87a2b7fd90c9ff477d186c844a39fc20763b97782db65b7980112fb51b8765363eccbb8c0dc2db0e60d7e0145927c5dd038c66f07b9ae4a86fe748ea042b6e89295f87aaed0dc621e9bc9efc54070c15735367554afb5dd5d0f7694818b536b9e14242e2750af7786a589fd616d8e33c9041d66fb37ab66f015dae1c0acb71d2e4a3fedd57c77ba19b419baeabbfb822678561adf87ff76303ee15ba86ad88b26fd524dd143999b23712d8dabe07f36607e0f67a99a8e41519eff03f47d5f9327cff15f823f3e0dcd00767451662635856ea7ab0392b717a7bdef4358fcc535658ad4fc03a122e93c9480c7a7a208972caa6de910ff2b151ea1e4f608b610b25dd10985a9bee401ee5394a1e6e963d9a2c4a698b14792d79f6a3dc85d81e7a32e45e218a15766fd7420920bbc96b17e9743146abca9d8cf3ce8f164435546931ef908bcd3a59bec09c2af2beb9da5cdf02d518d38bf0bb340d34724ffe813f5e1aee413e91b2e2877781e3040b2471431c943deb59c5ed34a6cefff13f1336f190be53bb03696b96cb849413c56029ec51dd7554f6fe6b713e04182d33d84b19d49a628005a56d4f1cceac1deec7f846658748d1d08516690910dd3d263f8f2c66d8bde0300c096fe7b6d17126f015645f48956f47970613098f2caf4c193f615efbe5e8e3c85a682abbcbe5ddf191c7423630a3be0c1138e149699d4d6260e23c442f546bab3b4ca892591e9f094b3fbf122d0631e71759987850a610cf175e03564cdfb99d3db5f095fbe64ce0e83623b54c7f63236129768f521f2631722d02dc2412d7c5e62bb6e260d80854873471aeb0a96d2992d77492af31747e1d26fae341b74d1f6700b6b80ec8d1bf37b4841faf2718a634d6b1c4943e3c73dfa7c8e74786605fd21eba8f9c94569daa8f7fdea2f341bde04663ae431492390b803f15cf9ad3ab8999a47358b050adad3011dbc8106dde4336006e2a9c0080bfe1b343f8047223baf5cdcd0b00ec50428920bd6d1561dfc4984df3debada1e083f3b828ea12d7fa090f2f3ab19711f7ab564730fd4e2f9277374ddc66cad1d96d6d6e26b3218b5ec40d78107741b3aab3c9b7a2a0d1345a86ee5aa55483bd9061bbd77110a36627be6e5297d7f4353a4f495b176280c9c64f435313edf2e296ceb1221e5c4d63afdf7a294ff23c71b208e7187b81ffd890feb57b33e6b369addd6df4531c2651605bd21bddb4c45f3698448637751fc53c3dd42d1d3a74e3d20bbfa7798a436a15030732dfdf8ed6ed1c67949b887695baba894f54347afb45b283c344bb78efb702c84eb040f86f0fd0a1c50e66a3fc98ecc1a7172f9d562cf3b0d938edbbad6b8a97dc13544d38e0fd416d2619d89913142bf85bd1d349cf634861d18418d83f8256733a2d2bc78a2c60743ad3cac1936051df62cd4574d3990de207168876d933ba376867617ec6c184c727e1885522b1e7b243335972b5ae99424367e59601baff100c4622aba4e4aae7c617dca64a1a7760752a5921b4a5fe2b68895672000fc7540396c904642f3c6a53b3b1d3a37ce436e1ae57fb8fb104cb9af3806d03fb45b3257f195f8a4cad981bd3f901352f181f65f3a195d7408e3e38106ce6386e9d3a8ab62192cd2055ae7c4196aaa99a1b75dbaa5a5fc05f5e7d0ce4317b20ac4107f2486be7ae99c0a0de2413ee6894f6b429c55e860cac60507517bdd3506e0db0cf57ce1abff230fcf67335e32f9e09d82d44ece3b701624de88fcfa83b61ac8c7198604de56a78263d660a42ca626ff8b76aa37036ea86022a14268250c56da99dc27345aadad1463ff1b71ce67d607ecfa0e3e47647d43e758c29632d15479e4da672132b9958bc96a07f2f2ef983a1e2a523d4768b204071b153c9d161669480834c2579180d62683444a3f6728a79c4ffd874474b8c60bccde14d24d06bcb299d146c03b769e5283a952e07148d51b967fccbc365d104d4909571498c54c07f9aaebf23d288da736de0349d6c96d37e4147cfeae67f2975fe4716095fef7059346313f07e897acf2b1ece4c343d7983051ddfb4d0abf59638a0101f3e9090aed8b3ede817edd313bafbc8867dff9e36280a373932d86eb77b90c005e5d292ed9b5ff00bc798e6e55432b29316d3a1124d47f9f5bbd89bf0afb5a1a995fcfbe60de8d3b872e5e708c8c54c5a4a1c7d0e47182c53256589a21e3e945c821ad14619b2a4023bcad5aea813580e6a3556f8500d0677502ba155871b535ec2926c69911d17ebf66d97ffb285e479d716fba3fc2c72fcdd1863516e83bf1b6a6e515d766f0936786aaacceaa146d9eba0a0c70ea65e2f7d1916d54cc43416385651005feb15c7658907ca3ba36b51fabf5226847fe5e75e98a48745ab673f47663b4e099b1c35590ae96b46d8a9791d826ac1dfdd1576703ff24a4abca86d4f6ed3dd72ac20d0ac71775817ea06613d48be2c724ddeb6b7674db685a42bb6ae43de85ce4b81e50ff94796240e3e1c26bd3c6763c473c36d5051c065a2a8f925b0ac366a6c7d13b15589fc9b1468404c899cf174d469ab3c3b1c71d32bf3b638ba5d1d94ffbd1b8ee735ef4ba03104a66899ba51594398527d98b6c97e3f064a43acd76fd71ba04db328e8dfccfcf6e141cd1fbfca1273ed2cb02a9e9d6b79ada8d4e82d2993fc2e1aba37a8366ca1445446c66e94381a67c6a6e6bdda28b6f4a8702c59443068a1a059409b4fb7e5bc0446efcbb51a2763ee5435fb143de4777d928ad3852a801885a5c42e20fe6919c70b515e39c0c020aaa532b26387a266b4f31183b7540944d8eb8721dacf400534b5d0891dcd69d04f8fef51b6e0f2eb93f9293d45e277fee522d5e0f7067fe0320866ff1edfbda175d03b756c85e62990885e8fb294949a8160d3cb0df13c5c8ee3c949c0f6ff1ee2f1faccc961946e66dc13cc101ef53ef059aec811156615ffef41af61089e19f03b961b86830835919d832f404b5afa4445b0dfebe89e654666124c92064a48e0b6d0710f453d49f2a931c1ed3948f4682548e910292cd4d39dc9f1e1a2ca6f89c188851b91ab464be83951ae743a4eb8d23c56ff530160f75843207d5a633d99785e228f64dffc3669fbc767858ef78bfdcd63ab88d3e0ed378ce1af3de702ac9fe97d5805b9ac9001df7c23668a2060f92b6cbcc5ebe927b27d276377c37ff3caf0108fc7a211f4c4b4e056d3ab898b4e1a063c4a28319e99ca4e6576cde8e676669d1743fa116d10322405d381895a13ab1e2811e8331658170e8820312fe7176f1006cf3b00378d342690f351d97f8433e145355292ad62d25766eff49240ce8497c31f9d160ce90c048089127fee5930ccf0e80e304cd94b9ab5c2be4faab6e47632a512260bc0f1f0e8664806aef13517c8394b8dc74399c2e1e2cdd5f1e8f24b7b0321df97acf3554a197deac521c686b00b98931a558c72a34ce8b0c3bb31a9423c079364441c7451a6ae02a9dd90bfe14d2ad1e6dd84c7485dfc170dee5adb3b4c039f46f12f79ae0d21f9eaf21a9febae732b8e4370febf613f600d44f106114bb2e40bf240759b73ca305c80ec89c5a45d21ab42fed5ead807e6ee73b07ef4a16a804057493fa7ec93495d21d9543da9a9ca692c913a6fa6d47d3a6d1a6f654a4e2eb82df28bf30ae6f84e71c672dccce57842826fd4d6234dff454249fcd822d0650cba3d552339eded76dcfa6bf63eebf8b088dbbcd65d93c0ba7bb9647d3a2d4e28c3d3985260802fda24b9fd5b633518ca9b6407e97c0a997bc976491eb79b396fef785b7b521ea35ab401c8d8ff14c7f7a23e5e2ac015dd32b7d7fe682aee05c3c5b0ad33d8d4ccd012686ee3f92f52a8926803847c8b4450dd979032d3d436ecdb10659a524b06960ca429ad3d412112a840f1153cd1f2ecd6e49c6c8ae3fb6d5edb65da4bd7dbcdcef1799e667471698fc5ea14a53bb124c39914f81a19f502e84e6cdc373cf75b53df21e1174ffec8371b381ba9c446a7499ab90379524f6a9af552820391910d90b86c2c8a2472a39bfb3cebbc84fb2b360ee5b7a4086c306577a110c2c1a503317ac7181a5fdc6e2da72a322192b10dd9dde2a89b9994cdcefbf35232ce2d18ff3cd0bfdb0bc01066c96b3ce84adc2a212690f6c335ed163e391686284a3e8d0b18445bbdd3ee2ccadd12a52627079bdfe841610a84263870bca1179a459a6cc9624315c715edabef36d37fd330c8e8085c6e96f0c6cd94ceba68e3f1dda8cbc6648a1a21972d6e0567d8c466d4b3a4a0e46835c0041efed9c93d39527fc41f02068d4f30ef14b7f4d8baa5148d57ea2f7a9a38eea98cc7f6422e152b12b73c43a41585c374c37f02016fc514c0db6f2d647574c202242ae9af69458b20fbdc53933fede9065cf218636f00077230e5a57d57e8db4b2e15c02c3a194b21298f3ea009052250de05e9c39752ea7223bf9be50f5083641743f8bb88e7c646ec15018f007ed8faaa3fab4d47ab8b634623ea7da31ee1a0a454e031b2bccfa9da507e8237a0f96bd44f74f19e25c021ec500908aaaa42c1347ce24a7f6bbca4af60156cce66fbc13d3c4f269c85f92659d1d451e98baff81af5bdaa19be83a41d79d171422874891cc77cbef5ed1228a743c8190a387760e277b0fffd02366ca32d6b2c9e726d6e9a34a07f09226764d498954da1ed8930c9e99c05aa16221c8a1c57267fe7c5b5bd4a8d0a742bd07d9cd47d1554265dbf8132e4d550e80b6dba04895abbffbb6e9870272c75f65481109545074c185778931357681d72cb64c9f2af87171b11c378ed2aea3cb73d7e63655c46d2035d1363b85ecbf4a9b7a37ca3f5e102c2ee02de5bf9acf9e536a64bab83c0084076f46e3d32a887fefe045872b3d347e76e71f145d48b6390ec72de1a6aa8f1c8183e2ec795f87a5d6c138ead5aad475ba4199a8060ae19bc32ee77b6a80f6ddc05fd331a49c8ce531808041359fc615293f1e1f1dfa3700bec071de28eed0cfa99e56e462c2d5d88a34cb3c17dade7a783d29db4c243a4f2915b1b2c8b413bc6c0db93e23b100d8e1fc3c9421c7c293701476f39da09019ea8a78a432d5321a35f57201cc0b9aea4fa23a654d9655e243433458b8cbc21afdb497bf09e1505216660aeda2c99d5389ca18cbddb7256d52f1ee90ad7c1b1523ac6494b2f7b5a51ece3e93902abaad6d06d420de8a7497d49f1624295aac860c29398b366adb82fa3a8dc5c500d9e9c56842149a8c02382d6e0e69cfc193b813288fd731ae68e8b0d0bd89c56495fe565e384ee6298bcc43d095639ed8f8140c8c5f97c512edd11d42fa0b25bd94925f2bdd38cf4d1e811aab9f2f019eefebf5db39306a5c14bf84c2c8e4efa5696c962966293abd442657e53835ca2cdfb84efd1740eb9da1a029d48c4dfec3414898854f96b3849d4c06e0c17ef1dab45136699900f53e34fd72986928a247ec9919c612ba3eb1e568a57510a8ed5b63452c637c1746490913c3aff9229fb31771713a7409b071c14013ab910818ae8beccd0b9ccf3ab232a6f7420cefa3bebdb4df7262e4bba907b25b61af5bf207cc17d086af704faa0792720c1498e6a646e51fd0e270fce711cb7689b92483846b57cf4959a21ec9134c958ed92e8bf558dd635d1991b7710199df07ef589299ba07ac6049d297b0b21e8b8e99ffeaf1c05a3beb61bf0488c2c3d6714af08826b208afbb970a632d73be98d81315bd7a987bc68623c5c5d51502d9620a42592c19c69faff5f8ceeb726bacf90822a6b0f8d1f60eaa9bb8240703c7e561234574cb3c02d8e54e63c7bbb82254952637d46102ac08c2ffc04e56364acce9231554c9a97f4b8af2de5a222254f0f7cae7ad6a1ca19fdae32f22ab589187f052f778399a078a2c0811e31ba803cbf54933dbb260700c29ae9582d95d5f376d6017b80e9590e39f672831f815b54ac3974ec06531e627571ca993b664fc26db2b31d4e62adeaf2e3e8743317075a7c3561ac8b51cdca82564bcb74cd80ab2b970a9d778f93e3ec1b5ac9fcda99f6b3c28da3cf5c22fb82b3011877258655311930d950bf98e66083d6eb63a2f27ccb20455fbd27a87836f18b550bcd9fbd832961ad0ab4fc816d0e203fdcdce785abb2ef0db022a73e7f48269c6dc9a9b677428cc0280316ea301a0db95b152a78dbfcd2f86a7b088255fbf82f01273eb97d07b6e79fb7b86802817857c721cd2502bd42427856b4888b7cbdd09c3b615c4f5391149ddadbcbdc46f5ed181f708d0a15e1dc26c4c2d9c656d4c5a1ab63f296a1de6ac70358150fdd41eef716293d6c4e97fd1e6ef77674d192a6ab4b0958aebf35fa30dfef433e3028949f9f820140fe783fe37567723595baa3e3faef68b8bad835c7e834d1310de4b68a53bb2fab43c4532c0e2fd06a7c34cc2007fc87a4c3a47027e7067707da073e40964d21dd51a292cadee4a00440b54ba5e367d0002f471ee4b16740c5ed57bdb396ab0f9b61ad3e32fe0ce09dad148ad2e355ff8ab105d9db1fbe10e717ddef782af6471f4a27f83d07ba99d5700fcf74bc9abc6ab395869a5356122f426817d875560eafc133f835a056e5fec9444553383dbf878b06d08610deec51b57d420480201b6c0bdbe1eea0a229d0a44decc719e6209546b4882ee029a625737a7718f3aa22c7db074a2db0b145e3e9e707b1c6b39299abbe5aa491aa8615e9b029d8e42ce6e8d8f773a39235ed18fcdce2e729bea0eeae30a06092215812de8e3fd901adae2af47ac4c6a33b93165296dec409c55a685e002352877e957a6e13e7b6e02e5aa823f745d715fc27cc51209fe5342d385b74e00c5cdcf197703632c96192ec1fb63a641ee0627f2230d2d97de8ab80947a7ca24219120af7e2c835edb6a10621898f87f2702b9ef7695057d6ba72c2744e01ac9266dd462d3560bad0e926d684c48c5dde7770063b6903f53444cb4072b2ff909618c40d6efb49b8a6833643f784fb7d60bd28bca9e5060dc30be675fdd01899b593335c467b61f860e37956c8d4eb2da95cbb41e8afe602e5474edbb2a83c1fbba5c674f191d35ac346c120fc59ac21a99be230f0eff73968f5ee6ba9e26a572c29d8a518793906dc50e973f0702394337760a8914e71b711261cab338f6ef3077c04214245f2b8ad509132dc22a5330297b13ad08e9017d4da2d4b36dd96aabb9bbc91ab0355206bff4069419206590911d5ccf3c210d61e0aa49bd2509a8dd8c7b47a207814918f86c1fd51653c66450eaeaaf13a224ceaca1071c6876eae3954ab461b1f247d60cf675da70d94203cedc540e81e8baf39f3faa4e491e9dd72cc4b6cf218d51aaa37f517e4bd3c0b205fb7a54190e6c3e4564d2d8164679b054c1dd3bf95af92d88d5583c0a9c9127c5f46a764fca9c372fd8138620ea3dd1c8d06f0a3183eece7b945427b703cae2c4fd1d4f9c1b2cf49e36af834852fefcf3c4ca28274a88c5d48aefb647d7fc65b58cb7faf0950b17c0039ec0c0a8070a16f3c7c920246b173108f3d32d8c6387896dd4010e94f1e4b23d361a15fc3684ddd4b903106be5d6c3a5955c880ad81951f6e64dcd41583581150022b796b83f8569039abcb2383cb4671812c61aaab00d2407297d065ac7eedf9b451d69a2905f58f335e48db20926557018c566b814df3137bacda9bc5400b8ad4bb10df277ca82ba6511999fb4dd55d0899060d3c495de3b606e880a1f1355912cf5f0254b0b70590efdfddfc59f98ef8541ffd85b69e11845ca3912ba524bd81580cc4c015123347f8548f3d9740dcdb31d52a39ac52590734370d822c3c97cfd0e864c605dc723869cdf25d2225f45e83c382ebd8b104cafc452ebbe2a950bfb41bdf0df685382730fdc73015807e2b8555c553e8a24bfb5cc5356e4efe96b7d1482539a728732c279db233ac3a7449a112e0d1f7aa4155672e9f2ea3405845bc7db0becf206cc489c922f6622aa2ea978d91ff70ffd8ebdfb21678434358a04230bc4424953a93ab3c1b90b417dbf656ad69130717fa92d1d4f0c93a6854a78fc5e91dc6d9c1d1f9ca5cd5fa2b5981240caa627ebddd3c13d83c02b58d25b3b6afb595e8f65b86ede7f913fcf19cdec43195040862a68cc0821c24fd1a2466495bc7e2d59d6a1aba2f49ef6c4b0ce302a0cffedd8a6d73dde42ff0adec326a455b14f1b6038eeb07df242e3aa80d005e36d754e17471cfbdb046b9bb84e39a9ddb5200d9c7e8b2d92f2e52e70c0ae1697ce4d4b5e661c7dbf65984b0694dcb6b1cc169d5180e00349867794f9f9c9ec2db3e04e326f998aa9913990a48881596f3317049618b21bc700f7bfd06349b371433ee056001940e24a081aa3a11b53f43aa47a96f34128425b6e5cf54ac3dc3441c3475540e690ab29af8c1c3b67489cf27a7a47d60e82ece3f1f4c39d71b042705d805232d444685f241aba960dc55fb4f527513d414031bf32ac471fd5e002345a3e6268da6a61bdc1a0a83b63857de39a3342b0126b3258175eb238d41689efc0e560f4087366c4c48ae6fe2488c072fc100a047d3314baec9affe72330635230d53cc654e5c2fbc31eed6033227081f504ee73871e7360473ae650990c29deecd7b4bf25914e6053fccbc6f061357bcf63520d4998455f4dd106f241c8162572470a127ce94fb77c233a3dae6f86b954b3b36aa0584d6f5bef1f7aa61527ea0cd411eda0f4bf9c8c2362fda431c65207132c83e250678ee7f0e24419dbe9631a639c5beb3640ce4508f4073acb8f2d072dac2166cf254d9cf6d118e1c53711d36fde3c17850a4065ca11156fd7c9a184d97b2528e9db8a64ebdec91163e31d912e6fe9dd9bcf6f91d4a807851b11a5971a154163fd83219ae08679a5783391d47b3b1d9faabd239f1b274cda0dac48fcd1e95f63a4f2c9803f27921fd412eac654864543c616abf6d8e5fb1ba404380284ab33612e3ec18940611d2c2701075e7fdfe7aca8565a9662abe0f77a745fc6ebc43c1921af58894373265cac4036d90d7b7054ba0ecdb7d5bba85e91018fc715cb446b8f0c7ea0f185884ca4048be65230b62e00406ecc96417ee3dc03bd815e5549fd768ff6d6ec17a44017d5bd052c31402b91285a301f49e03c4480423c35d4af2702dedba852275b35c8f7df4cbbb8ab04111dc8abd27a9fd9d87568d9c0da4352ba525ba3bd801c2a16bd6ee48b839aabe12dbfe0d9fcbc67538029643fb87a72182c53518331f77907d85e712755c02f5996527fe977628ebbd3b84ca7f40113243ba5e0bf6b51e3e134a0cd6e2a5d59c452e35a920808320917dfb39d0e3642a107dede55732783a53e4d03a0eaab2cd3386b3396379aa8e2299bc1b69c816ffa8a0dcff8026246c3361b02bc702d5db69606c1312b4fd8c172ff846ff35951787f6b5dc9b4f8481b17f06a29a0491c6d8c745db8d05e86648b74d2e2e2004456f4b862ff9505680ad43a13030f09904659c8cf529505bb2a38d5bce389b5a49d58a08b897f1c21b453a952f06ef9ab3fe0f81e6d96843bc36ff8662da8f16d6366875f68ae0b59382e03d5fbf2138e68c1afa62f69b8ed521eca8c7f9fed471044ed62af9908b9303d793ed4046a060a59b3c144a3484e130ce77e9500134c5a4f67eed3a3c5cd48fbe9de4e1ab8edc323ea3ce4808c1a2d43893ebae9c6c7fdccde4b5d7e1e3b64cd008edce9309fc913d7c4a11e243d79a1062d639decf5a113a7f6c35242134f3b255909a212cae1bfe40319c6e0e593162feae138d78a3920b1bc5cd855493aeb1fe7816cc4808e44f1fa08831d464757e4b797b59ec5e70f9adeff5ec49fb1443da948f4d24623f6124304f5c6cb078b7ef80e8fe7d131274fde4d0c08dc30ad92883b73230aaa8b8bf77e004d0786cba68ff88edbc6c7ae5c8f5ac759af56632e2770000fd019190aeb4efdb1bceea7b6eb95fe1577870ee794ca0a9e2eda0f60670dc47077e2e886102497ad9cd31fe41c6dcc42075825ced4debd1bdae47ca48c8d2c714bb3ad8b2f052927e4add499d7ed1c7b4c37f65bbed2c9b982e0cc6174d1e50e61b274fcb00e773d509e82038001f10edd49d005bced53fee9e8c3006ace5b2f13f223404d4e0da609962f4f43ecb7741aa966cf34030890bafa442809047277e933881c2164992010534e4929a378c0e14a19cbf2d42614e702d16e05eb23557aae9b53b6f624095aa8428445a8e939820ebd70bc0d4c12bfe0694fd1b6224f4781a402381791dc03f121802514e6aa7df3157b8392011bdb2d0c0079dc25681a6266cb339ab77fc13ea04175d5e0af4810d296ecbb3f8a320ea263c0348daf3530b02a94c849cf83c83330b56ddecb1d27dbde67615fddeda1ea10ea2a6bffece3c9fd0a2ad104ec1b3448e317e02f0dff53c9719d3c22c3a065bbe3e4ebbad59d4490e4c53ff3b5018b4a475de482d15e10f1c96d232fe43f56cfa10f6d8e59bd1e63788535627b46f4440a5b2b0b8774f5480bf3da1f2429b2d4bcc75ea5915e2f9a8ff4e00827292cd950d12cef9e9cfe36828060e2a73cbedc1fc415aad612521edc54283a0a132514ac0b02196cd60c186849c584ac40c38898edf26465739db3f1904409a6d5a4d44edea88ceb3702904450df7653a804d119580124a33ea317fb0838be5ba999b710d7687735471020221d4f23043ed83538e93a22275a6a81d564f59bd980d98a861c19ad31b42e5e3f48a13976e25217c721b6047b507c130b6cca3655f8eb89e923fc1307c015a7357067393f848062f32fd778c7685ac5227b77829c16711b9127aecfa3cf4ea6ff7e0e317e59560dccdeebeb9fff8e85f28bb8960fe52d438f1769df9115e09f7fce00ca9c51fdd606eb75a0ce0737ea253a17f5c758d6390215eead6796f14452d7af22e51e7a636d1fb24c2e96024ac30a0e6dbb5d46759522f159bc57035a33e264e7cbcca1c730e91723e5f1e17f6df1685c37ca5559234537f1b7ada6d3837ea98963da11eff44b949f2046f5d6ae8c0b9959bfcc3acea9f3a6fe4b49841b27391e8957d9270b89200d046df516c07b35a17f584365d051876f1757c4df358b9d537fe6780b8d7300b4aa5b9db40b67a1e77a98c09915fb2faba68dca03bd69cd2bed8571a33bd1ac25088d6e1124c2a5f4952fa300352a887b19e370e1b779ec4124a61b058d1fe1343b6a8bc7163d03e6b90ba9b65f7c3643698896ea2ce87c539b3aad64821d340fbbc80a4fd91c272783bb58fd0c020c9582f7e271676991b4d3738b962d079c86f65fca6fccc7672b5e7ce3ae7197ceaf4ea0781f6b827ced546d45160c8b0e2e34bd31e5dc687d412baabaef5524c49bf8ef62b516d78d4ea8e9b853cf73ca4cc866e4a6967f38b4c95ce0aa402b852a2afbf3dc84c579f19c4770d768c5ca6e5a0dd6911a92cff9457d6efa5ef92a8ea96356fa7006948bdd1d22b435caf7a88269355f3ae6cfe2ddef2ea987bf452477ba1565ac925b908382122809f52eaa5b2afb70a88ad5cb4e2990f07104daf2511866582b6b082d5c5a331750db922a1abb98db0f28ec615000acebb4a7e59d62f56f836f557f80ab404a91948047f9eb319668e147559f79fe91a1f903797ed113ed8140022a5fa57429a20c6dfa874da1a06745381db231a72e1e71918ec640307c0b7040b382c7404111959a7dca1780a14f1a63401f23f26435d71eb4b27bdfdcdd5d1705a277ba407d74d375e9a764d1b4daf69e363e7d9fb1de8ba489e6d974bc28aa69116532bd86df64ece4808839f40a98282969f17fc73df3774cdb4eddbe6aa73c390abbde56bcdd31623a2b2c0afbc5474add77c02768a46d8b4d8f94a94eedd59da654d79398228bdc7d3518547c131a4b6c255d426511f9fb0ab229c941ee5aad3d4df9a778439f709766452873d7cec03d9129477156ffdcb18a504bdb9e3047301d335eb9e40f4af21e18dd98a152bdb8bed8447d09627c7a7f007e040937acfda9a6b0940034777ceaab0f5b14fe8e0a02c5749d4658a677987823e07a0ebf98cd9224aa4aad8555f6e399767fffddf9b326a1116d98d3866740d627c842f52341a8e47eeb4a0b4d377d631f6dc691ca68853e476a5376a9409f0498de2838b6e1e5a57f097140561e81652fcad3703b59b997f28e5275459d2f392a390871585b9fb71ce3335bcdcd63535a148da1725529c565f288698de649a2b2c40d01e9e7a962d50f268dd01c4b8beaac631e599b17095b1badb289038998aeb01d4a3389c21364dbb07eaa52393f0fb5417855e607b0e6a80db17d095a405845c718bdb7c54dbf4d99c47842c657a8e92236374402b1279ffb0ef550de9f27336de8445f4bc1c18534a32963d017751d2c6f257097a052c3683d679c3e463119a6c53bd04da4f76db52364d0501da9b4a690d94117bd7ade12d000dc7c50bc25d326572fc688c3de65544de93031ec33f6ac7aac1a08e74c3928a4fe7c14cc3c81d434972be0cba6ab02f959652001a445fd957b17ff82ec279b04a2d75f2d752a8a3cb673d6d9bfaebb8d49ec0d28eb3d41a603e94732c57c72e5050e6ed854316d91900e78522c01ff6971d0980d1fa0add38e39bd789b6d45462341e3b8ed9a35c1cdcc660977bd4d2ea9a5c26e74f9ab4ebb993871c37d18e0e1c9992f0d826cb45889e6c1f237f34528d20b8ab9697ddf3fbaa5c78550e487d8261c29b95ef17f6073cbca0815da479a37d5df7b22fcb68427a0932c103b4cb47c2d52550bdc7168919f2ff88032444d9f94114d0f95d26f72ef7a4207d7e9398446ff176c4da3743d5787f5240a45fff6dfcbb37fc7e6780b35c5ad42fc1d53f0b957af2dce4dfa05348b075f69e2ca63a84dc0347e4be0090e0e9779490982c72748ad7f824a2d7ab3b84225a3ad5d07be939d2498993467be0836f23b6d9677e7b6ac253328eadcd066248e5cebd6f4f39fdd044d17c177dc23a2f5928e23ea4db0372938edd8ee1a70350d6ba3bcd0db44a5d440b48e4838f99b7e33eb948e5cb80ca78cf6f542f8161e92b5524ee6cb2e18e4977f41e7a4d1e21bfceac6a5dd23ba315bbe43f939ca0984c3a45244d4bfd60176d0f745c7e93afcc5fb71e0d3a80a92256c7b5edba1f4a8a5e56960896abb3eb84f661c6496b9b2a536224b09e535b951d6b35b337303e008cb780a8c7c5f8dc653da04bd51715d2ea064258788e7e01a70d3afbc39ac4d77e24019ae3d0c6f8ed943badb387fcdc1632e9907bd23d0bcd64dfbcfde75e7330953526bd9f403e9b57706cf8f60c04de5cf793d376a5faa3345cafaa9b395d4123ea937e78aac49c94ecb1897be0ced549cd71a384d63476e4010dac97f88ea56de5b5770c325099f66dee35d2a565f355df5af84e98a8519417f7b14cfcae82fbf95a8cdca20b120150fe343aef6ae46b3dbd7a26bcbfb731fd82ca8f8db0a469f801a906d25501e892280f67e1bcfebd0fced12285912292731a2091b97fe91ff4deaa0733dc1f8b6cfe685f058fcd94ae7bfdeafcfd900d5cf230f33b0e1be24ef99f934560974b2e830ff4e2eeb6ec24414a474ec6da027e89543087cb2acb707386ba13422a3d25665ed5c2ead16590c8e41310bcd7d4acb406ed4bc90da5575b4a7f81c1bf02c7fc6bff4708730c2a6b1c68f04cb70da566e6d1f0a0e056491902a344a021d020800bef7bdfb7b72deabfd4cdec715e4ce4de413cfc2ce4b8efbe6ccac446985c065890058823c9e311f73bd6a9439402c7a05e880e7f439be53297f7bfe4e56efd2f0c92e5bf730bc4af058f326e52c81d3f20a346e86872e8124ff2cb17220113f269c7850f7eb35c316515e4d1394bc0b5abadcb0a1511c1d43e17ee9ee8ba00c86f3d5dad5abe578e2430ebb2255300678fb54c6f1bb759f3812fe04692ce40809ab0527bdcde806eed28ae3a1ecb6510bccdd1f160d4b2428e879c75627ea1c28b13e840967a39462d7e369dfb1bb1365ae4fb156831754dc42dd75f51ede7f6882daa406e213416e5609b6ae18195bf0b849fa687e583649acc13e034a551b965622ae630d980ce7d6b4fd5ee87f85f1d48356e7311666873f72c48ece10d1249680331cfb423a50a789d5e1844938cdf3159aabca77f7d4e56042dd72e5b6bb53ca17703ae2ad37030fce5df0e0fabf611d8d031e4f49f7c76701e4d2dcde90c9ba9466d5aad7e44643d8a15fe8dfb98ae9681a15e07db0eef9d3a4b7b106b6bcfd2689142d0768d9c360e3b1f20266055975aba2b5b8f32d7e8b086372cf42220d50741ee9001bcecced081e36a5e416686835cbccee5e3769ac3c28037642418c6b9fdc0b9f6b02abbede95bd27c356f6220c63661284a7e6671c86e386d13cc2816b77b5010f89cc3193de7e7bb12eb5939af2a7845341c52c636a341303a5be71d322cb7dd74f1e47aab6795f8f9d3507902369e627707d1bf4950ffc27395bc727f2d7a634eea568fa54a48047123c9365f29fd875f9b91ce8ea8f592e94abac780c0cd2f5574c2bdbf6581b335221e77a8b772099c42c7c9004c14a26c0836bbdfb7aebd8db660c353b361566609acaf99befd78fcb27ef6f156c8ff0ca5fe4c6323ee8357719e978c28627ac72f06723995a12601770b0724f89a1fff49f5e70ee933a846042d8cf48b8802c4c57807eceec36232cd0a3e5f10e9778c4854127ba3f5c21f8fb6ac53d2b2ee28e7a864b6b888dc6e5dae2ae0690b3d61cc872e38bf33ae8c92d89f063033d26b07dc8999e3f56caaf8ba16175895a5c1ea3900526a77d6da12debee2bef311bcf1ca19b4594bda477c4e60b7af7003e2baef4ce1a43a23b7295cb0ad6609be492a50faa7d25bd7a1de8efa909d69ae3cc4915d43eb5a37b41ab4a43ec1cb3c7e2842311f660526d6f781131d2a898623ded50a16ebee41145fa2e81bcbdd747d7229b91bb0399b913598e1ec9799d448fad8fffc6ff6eed3d6dbe9ea44a04f5589bc48fc2f4f60c4d77573fee9b7c8ad3050f4bcbb61b4761bf4809267afff0254ce9a98933353b2c603b7b637b7886e0660ae1c43285ad374db35764b30ba2ea151a668b460c97bb73ec1aff853f3449acb2cf39908ebe8f55e76e665f164b89f42b159a4a3538619e0cd41c9c5d713fb75014fa046af93ab23ba44f9398237ccccedbb699369a068ed5b75a9b03a5869bb22e7615589db6fee367a3f9d913d20e5143eb89f0e0efac18bac9c1f7e2f1770b8d655aa578be6310af6bdf5aadd001ae1b987a55649b0af79dbf70afe0a7b6c178b910602c5838e71296f82a46c2ca3dc7ab4f22448c36e2a0eb2b5d69e1f0d18080651813939c4bdacb30bff96545d50c5bf2104a09cf7c454a50c90d9db173fb9ce53a50741185c434ac782d5c2e40be6e4622beceda941716018eb8166364170428f4e544a7b9a932be4f471964e8dc95bfdd59b97947ba29b535ec34ff1c827c3fd53d439d36908021c1321f640ea8aa646084155f54f0c385ff68b96976e5e9c6263c382ff202d8adb6f3f9bce56659723a6d86a1f7d06f82593e7eac33ce72fc888b1c61592e9773feb4f739425101258d754510d286e037f2c4a6d6c8086024cbb81e824d8bc715822ac01d4d942f45093758fd4987bfad9722c1c4904f775bbd7b8c590db6e4647e9ad055927b63e56d0567f6806d739a26fb70338d35df92901165cd8e6bb2ec093d67e7b0e5ec61cd1bc5d720382c0a613001c514ff2ce4a170f311656d1801835b8252d9808e4967ff88a331d3fd35378e17e8f4a079f35588b8ed52953719b08ebc943c92692a2f13ee081513fea494c4ef598192e27e4ac5c61a22da677d268f2cb7319c3a7d1a8527b2938c73bafc10a3c82108b62bae68cbff1a185fca85d66133a31db55f45f7aa5483dcc97545ab006fc84352604942808819d6a6b9e025ebbce426ea529293b8cd6c9035b22ab80801eeb52a8d2bd521348d46b7095d4076589eede468848d4b8db26766a4fafb04aced5fd8009c57919d3f3c6d7c1f8f2fc25b8cb02df09ead1d786861a0205826141f67049f837678ebc00b94ab3c05c91eb854e8751934113b7babda4dcdf517321850abc9174728b2fd7f0c4801b2543db9418c727c1ef38967fb90a0e9c93fcc93c310aad4e38e8a70fe0912eca4bb44b8171b7f9db2eb72f9d3eb3d419d2acd1a1479d8e1d8a1e34c08362f4452c3c747f738a7c3bca31f1f5dd7bd89bcd031cac2140f197f5ddc564d39996797ce59a46926a2516bc8077cad635e6b84477d192727e2a52a2bb12409561932403763eb44841525458e9a5c924c02ad471ee76c2353a40812eddadd8b56ce1c08cf7858472193f216d75af761d9b8390c879ab6445db0cdddddd530079b646b2ffe284825aa8dcbf31462960da9787bd776c670e58c73eb340517cbf59a3dd518499051594782316db38145341705c7575c569607a1210f914b9a17e9cced605d23d33568458752cb62180e42789f89b83e76c3774219ff8d39634911c8c048e3e745965f843a2dd39570aede58f785da5bd44ced8082e3215709ada72ab79c741bde07997824593fead7d93c99fae806ff86b25b9d2a7437c2a961bee8dd07e7ffd62991ffa27fa68fa60e0ececaa54ef479dda260fd024f4786f0c76766c01fda4db99fa5e404939b91260d00f44c15dbf8737f86509c277b9c6eba270755f1bab424da638f5e25527e4e2ceef44b0a2b74516f5ca56372499b395065379fc37c81307da9eb6f2ffca724a720cc0ac34831a87028f955d3f24899466013a17a6361e065f061339e8d65d56ede59979990cc882d89c381a0f95d909ce8703fbf0fb6177b9ee9dc191df70847b9db45161672fd1deffb9180c338307f55f59cf2faab6c56c2d1b086ba10cdc2ee735332f464cbad2caebf8f6418f11522f3d1e9b1d908bf7bc77718659695b562038eac98de074e308a57558d578bad8d22bd2d6a9edf4802b15d44f04941b199af4f015af681f43e10182bee7d021141b750dc57b09e2c9456c60c1efa031c93c3d1c8094d559eed7b596ba73bed5ec2d5e39a1cafb91d88568d4cb7ddf9231c2f226740a13d34c802ba77b1e3ec70416d64852bb91144184bc4346e88b8f6cdcdda16e592919e2b6944ff4a22a3ea4db7798dccba5a4fd5f7ff9f0c8558ba491da3ba363026543d4202b0ca5a4d20eff2197631f937eb285a856031c5514991a066e29eb90e841a40928a44bfcb4f5ba5bc9e57f8ff22b1a444eb964fa4c93f3b3098a7826187950789c6b2e6fe997fc380dc4421f2b1ec45d89ca8d547d21bcfe992cfcb58433cd1bd120e44e6acf31c80f8f7ffb1d32319e87b21bdb4d6abefd685a6e46fd4ee43c0c243f9aa670e402d15c5b3d1ec440277ece4f31bf72f01f8f8356267677f3721728c464885a07d14de5ef83ed03087175e9015533ab2c19efe667c454cf7303fc6ec640fd81004244e8bce715fd0bc042da4288b6ab1c0532322648b8c4a3c70e2847d05a02513d6ba3873346ed151e1894f4c9cc35cf9e22912d675a0d1686341ff6c464f471566617b1130b0d8ff096925c7e92156684b9d6feedf8a8b7872652e7a1080de81649fce05f4d6ea9f7d690e4a016ad18b13d1208f3c5f5e613a6272fb020f2fe30ed5b53d6c980bc993e8559b3ee168c77b41747d1b71e4e3c89521c98f0e72c8a9ee35316595300f9c6dda6510916c74fdc9f3c4cdbe77df2d3a00d896d1434f76eba12cb1dbc1618a0453fd718404e7695f6f1d4519fcc06a2038c853c12abc688c1ac94868a25bcfeec0e63f92ccb0559b667f51e8ebb16a5f6de3ff27f047eba9eaee3ce39c30e7d32b262562d325220402db1649a5b6605b164fd622eabfb70b31e935fde3c00badf5dc8795faf1fa80c0bab232fedd9a040783ea168e429fff15d3a02a82da376f023356a073c97fcbcb640db390f80fe33f4524271663b0aa0cb61d0876d11f571838a42b6115cc221f0af504bc4ed7d4986d8f0a0b1ec3062a721963a3152d043c41b082343538bd7f38acd45614ecb3ff8156c4a2c440346504ac9c15c88bf6fa1b57e6698a40146635d1540302c739e61cc0297f62e7085ec4658217e9d5b374e00593c04eafd584ca5eb1931fbe700c62151c0ad18f1c9bd7e934c1fc30e4de5c600f913582cdd8b6b2ca5a85b8b6af2c28ecade4dc766f0fdfbfa63533b17f69a1cc54eb0f9897b3528318209ab709c3718199acf87b8deccbff3a9604aa56b3f3ab7430f66c0d51d694504ca6b0be6dd2153a2f3a824d49b453ede47078b76ddeae4a46761549536edf54da815ef78209f1a777218d716646cbb8016c929410edd971b6d5b1130533b1c274f55baf960c9c2e2742d0a924c40ac11a11e34c5badc07992a31a13dc9393e606e83407840c639627a0f0c1dfe4ad8daa3d2d50284a197c1ff18363e97103dd881048271c3dfa8074263e5a1f6147ed5557bce564dffd0b00ec2a4262fa955587e703b17d839566198dfd727e3bb2bd8b3591f4de3f58ec326f35c5f4eab17d1beb4c86f34777b0c7cd73bb5b4b45149bb4272eaa4037cac0ff4c38bfcb473febc7b7234fd0a8f8cf6979d14ec00e0a08cbd019bd7ccaf048a4a9bbda006ab13956efcbc3e0d664d6bc96a6373ded757e24fa4397854b0e544d94396e1b2d2600ebcd5a077b7988cda17b4820d75c2f0f960ef01f5ca72aa028be4443ec91c4813d31c1685ee9374c2afc8439203674df7132d26b0a56bc90e41ec80ea22a862231a6689c7cef90e08178374f89cd7fe771741c36b8d014c468d60e2d4db416686b4ec7b384768d1e8e6ec376ec416bfc91330dc6921876f5ad88ca164678231c18a6bf6dbb563a1841f81dfda911940ce22a9c97907e872e30e10be6cdb00921b3a5a14150f68846b1e70fd86ab5679b01492e31a75e8481c74675570faddddbe58a9af598cd577cf154a1e1fce4215bfcd4eb7606d1d69f72116d8f08e49dd31d953fa63e51bd5aee1d0905112450b22b9913941bbe703fa97f099cc1205301c84b94ab85cc97d4369236e56edbee4a066ac0f740c1fdd1a1f66833ebf5045f1aaf819a6f985df5619a13b8ba6bfe2133674e96f7c2de6048306cb9f9292f1664d39e7fe09efa651e4dfdef6f9c110785a9a3ea82a6fb763cf3e878926088f78feb34e1e7284e2112db23c79f274f2bbd3025a2a6caa51c1e08d505940f88bfcc8e1947aca7f157cda7d17424c9d80a7e32b937a1a395c59f4672f2c4a4857aba488ceb20a686a214659cc3742afd6b70defbc470bad73a52e6a3411bf5bffce49a3573eb8b4fed2bce87f736a07eabc93f1907895f4d8e0cd1de9aa7919d8c4c9021a3da6f3eba990321288001b68ad438b146140533b919b0ee610ff256918df570ea0721ea896eec7d51dedaa984c98ac06ea5822da0de0d2b716c942728a3d3157634996bb1bbe8b4d585c2bb8e034efac279c431e8c1f8897a400a63e7d954e2de790cf5b76bbad3498e626ff9caef79bbfb83b4b09aca41c9a3cbcd4b14ba7d7da364213a80779e15f9e24107f43badd9e15213ef111d91ef03af98ed7dc711e79c35f0dfde3536d548d02ba590dac91db7faec19cf410582250563e7e8241ced30f1e74f93c68e07b2ffa612d4a58c81d0121959c40dde66138583466d87789118a0beaf74987106c50b60f09d774b02cb9d1fba72b7f5881b50c46eb47371c8f8ccd52cd7254670f5043aba3a35ed039a5348cb1ad0fd25131693e1cc0e4e2bd7721161b027301fcb56a365ac98e631423cdcf41d56f3f00753cbb72ab1881c1195f2ade22876677c26329cb185ce07d01975ed11a9f3b19bd844d73036b7f332f00aa6bec4a71c19726fdab260ca6c2eff5778d88f295f83e145a7af0f9b8f9d77b3346aa71811e30de57e73cf08fe1e01233cda13f5b980f8a3d4579270d2c5df9fa4db8c4ba296aeb0c1ee9b3ab155a981bd4fe6a629107ac9f9c765938121157619eab0054be6d9e38c81980dc4fb29cd0f5423de095e4464d5895be1a14030322cffbcb7dfb151e5e0378f59c37d08cb04380a2abbd40c30f1c0762c0c13bb27a4bf49ab1e87ec940c120f33a21ecb4705c82d9c5fdc77cbe48c78770f7f7b44af635afe2de0d38f7b88f8b3bc334c43674c6381c4fe0a36de27cba1456be9df22988e828b948beeb99cfa2378422a96030a7c4fde331e3bb54629725fd1afedc044cff676558348da944de9811bf54c5d9aa5d23e2a7fd3cbb26f51b1a2e55a8e6f95c6295a4cffc536674a144ebf2cbef26a05389df16301212cc6177fd462145b28ea655a3f5520d648fa6463a9f05b5f52c71b6da5632324b05c33b52c813779b5ce2259a506e1f8fc0296ba85e2444dc40f88e4dd4a9dc953d8a6ac9861b410fb85d6f4a21467d917c7c7a4b5f2d30be89e584ef1d4d441cf88d23dc1afc44eb7a7e952d23ade1f456ec62c1d69fcb77d57a31253b20244d3f98fcd0a05d57ade84524b648e84e6397441b5f79cf96f78e211296ac2d916331a16144515e4cddc26c889e51423381c0b7da07236e19a1cf46a1599b2e5ba6ec950855871ede7adcee2ac608d46267debe075fced93662f13d48f1a704dab3bb60cf37017e876d3bf87102d9a3aaa2b0e9197990cd87e52c22d828e885eb6bf889de57649398c67e7d5805882d0a0bc05d028e76a8fb921756b7639fd4db622cfff11078d565ee91b77e35c434a615ce48345cb1b4d1c85e72b8c541751d69b0e14677393b9989b75da0a906d558e9995a7e949d5d5f83a7b42bde81d66d1c8babb4f282ad35e425ee0e4ea852fcca8512f34216435033ebd0c0718397f6ed7113000dc6b5fda1cef40f7218fdf49ae442f0ebe907b8d67353787ae96decafe0fb3a71d95f5342c71ff606079360ef18c1601d41bddde2ba79e4f33839bdf22449c927bf3e4ce1aa5cf5d0fee65df22f8b7cc5e2301fef835ae15259748a79c46d4bef8920bdc1e5abe592ab370b1fd50f57998791dd484f4b44a07237e428080cd979a4bfb704e863dedb2f8beb8ce3e3924025392ab88f7eeebd86c2332ff2a980d6478d3f2d9fe0038fb44cb2f37ec2b1e2ca2143eb040530479ffa149744de5464cff01bb33d92317dd7c15f52341f749028f93d1b2710ca07ca9dcbea22193a11f4832645c98e49662818a8194feb911547e69a893208a3b4708a01413f478097bae3df65bae80917eefd1a17f5494578121dc7b3d67f6d7a04e9c0f3b32bbd7b52c61dd0c8a61e1730fb1cc4c6b0e82659983a4d900bda408a9f13688fc65529f645b7d560f852c646b63f5ea4efc08a2b7a4467a5db41f857ebf74053595e3abe1a4d973106c03311a520ffda9c62dd03a3fd33b6f8cc2770838959d98f15d02e8f1cf7c2ec13ca09efe61ef6d0c641c137b6dc2a6cd3f823207f043220b312172a0f08b754f5daab19a894aaf5808f979d786718727a709449510b3ea493bb1c3f2c1791ba69f9227a6841252e20938ea336bb8752a048650d1f8d817e49a4e0a5f6933c8f9ba651ba7c0b1b2c887f11a79ecb6a6a38dfb3b5874019afe8cf0a9c213469aa987b7c3c9329d9bbccea537226a62b4b906380da4c317b19a996147eb571f89aa4f4cd66fb62c3f29ba822a0f92e15d27e830bd9fd4813b9e3a34491383145bf7bdee33dcdcfc0eff5381ee88a6edcb736fe8d9ef869818f9e1a2b62881afbf82e8cdacc6d24db3ea3fe789f7529edcfd61cb27c24c46b76899d9317075c3a2464108b30b2572861c70c7bc8f7c19a55c63d63b49fee6f601214dee8ad7fc95fb1177750926b6e93663d20441b48039e0bd8256e33272ff542cb02357ee53419e5154b413184ddecc979a4f752a6f44b023b9841a2d85e372bf91969f1d5e1961dd6b845dde5f8b15615554387dfccdcfc86dcbda07388eea84d031ef2c35d07ba18ac0fdc2e80ba9eda400a44f9e3f891d8541e27170e4e6f3b2d69507f19d0c6c0e427348b4cd28a555be10a98292486e5e1f4538434780cc94c94c476da385a511430906077e6d113828d1f8e05ca38a0755d465591dc09f0e1e8d8243b545e670eb86afc012eeab64c8d313c4f2f540e5387fd6b876ba78368f49254a05517af91c9770a8bb1a9ebcd93998f3f3ca40dcacc1b891fe7cbc7871b01bb9d92367e04d10fcf9dcba1e1b23e7af2f66f60811d84616e206cf8fa1e7cb6367ab34ee61e19e6b968a8e4a9472a3ed0929b76046b9ef7d676631de5ecda0a3294ebe17a12554350c30de7333c514099e682e7914462754689d817cc49a767d9ea89558e84c0e9d8accc189a5ae8b04ae8e1d37a428face68f753ab753a0f76c039f4223340ea43df23477653cfc1f19196d4f3387f51a22d30ae69e00f66e8106b5001f0e70c9b54a3d1b50c90634c5da75e57259e8faf8fa9e6b013e5e8154d2d970beaf67c133ce82467997929c4ae985b91ffa006adc6163ea6264003d91291a03fbb4abcd77864107aba373c37e7ef6377eeaeee0a23d07a01a7277c8cd62b8c38e96db73a9336baf1b97f7f1b18a22a1a68a899df798fdda6121057b7938b8a01f8135be744248cfd12bce23cb6da7ad850c6e7c4f7f586a741ddc99c4fc63dae7fb3aaf6f4bb1d43d7afd9a0325985ec01daaa38668d5a7db9931ba3cc5665d0791582ace8b1ab1b1bc8562b1716b1bd0f8da021d49f46d20c8cfd551252d038ad7d0ca9af4e34c13e3a948520be2508867074e7a8098c2328c2ed74698c3b1f8fff68acb4c5beffe91dea4083721f216d70bcab6dce5ce07e29ee37cd3fa5fd7edc3b24810cbd9690fe10ea1bbf84d55cd723e75438e2d06091a18fa62b9fc10df2d9bae17775a77264463415f279d461a61893711a981dd934c31962cda04d58374dfd34951d66b7eaf001e86ceceed971909673946917094dc05d8ad29e013db95f6bd6c14ad05c0a0632d6a81dcdd3dd0f5ca9e5a37e3c806fb44b49686fee7725eb47788e49f9c88db5a35bd0993b28497fbc5a8f22a0ed3f55fbe61bd00be064b2736bdb7c2c8661ec71077303841305859caeb0fd85096a7acba31edbefa3a8ef80aae2221cfc6070372c7e0b33ea198a4b52be725f96ccf1b2404d5e398932c6c946ff72bf3084ee6d9686c31ab565178e8bd6585854f6791200643bd105a21437bdc3e1cf429011883e03f78bfb48c33b0206e07701052d0579903660cdd74e37855de678f16f46863c1d863c48fadc1a298e22ae6dc894ce65a23aa198ebebe14e72ee4c6f652f9c89b6fb4cd053e0dd059ff49e6695920746149f748748f2f9a0efef6a3053884393b4b940423d3bfa7e6f8cb83c87c2e0e05c1d67093bce4ee9f049b4de2466cf3db416fbe23a8f51d4d41fafde343e5825a52c0a62c13fc71681f20be09e3db169f2d8f519ea48b6296b31e844da44fdf5447606514007d7362936e8a0da7830c13b9f77d0ba74ab48a17a884d8924b522b8e0fd8441eda31f75c0a37bc4c282eb6a9f6d0ad75b1aab1142a286cfbdae14e2a0d03f6cd070f8ee6f5e92fbc3406f8f163872ed98bfd67d5663157c639fac257541580581ef854dec12b88b385fbb226931bd7ed731bd4ad9f1fcf530e9039e30d835f67cd690ad9ff85c8e2f15dc4555944f964a1da16582c19a7851ebc2a6828aa46f63d94dc6f7b748ed03d041e4c550773eaf05b3dfe8fcf197a6564c85f40cf844228a00f6744f3ce589de9e85e579325e0be7739715cdbbd83906dda0b879a6fb7905f6e615b6133f95e549781c11762e8ce0186f6c0b62f5b682f28c5e9809add8ffa25ae027515734c46611c63e4365d9925d03217510d189573ab68cd5763e3a52639e76b2d1fc4d8bc381d485394e9c0538ec32bf1baae571c4a8fbb1caaeebf2445686a7e9b7efc8b2b55e21ab259d1e48e852b754e841dd6f8fc3c5f61955e4664d64e4369d7b4179480ed5a945944341dde120f99794d311c462af05d426f05a815afebc23350d11409c322ac90e81fcbe9e0b94e3f423bd1393520a2f55005b270be06d321345e7b551ee1c2155bd148fe8ad999a8cc17d88d287e423afb1b9836e12cc02dd6ea5366d0cc306b60c272ce437437ec213153194bcee6d398b05357271f88e92b416950adb703a4fb7fa187fe34158765cedab3d55e5bffb0393196dd1b2fdf6bef526bff32ab936fc9cdb69ab86214265ef6824747ca06f303c3026d016de5d7428a03c6dccbc8f932f188a33f0bab4b46653e4bf9cb47baf176e79f56e00a4fdad9f8cef59e8421916a552534ded6ab6b38ef49ccb13a60ee3062d9ac1e2b66c17d449280193d75726fbb74d567dc997880274b7ce82a0ed90391b16b4253d97bcfbfd4e35ad321750569929b7c97271a3940f8b56b9b3737eb4cab39caf8c1714ad11746ed164e21b98a5156744d6a21f292332607d3f86694e6d8e491d094a37b47c986c5f3eb2063a5e529077d12a3c215bf7ae87d228b76424bf690f9c3d5e5f7df8388373b85ff9ef35b4c1b15212534944b44f1487db0721fc95a212c40500bb9b39b868a13f82d2c8f132a0d66741ba72f49310ad291270ae11f65438f966c3cd8eb7d9aabac5038c0ca4c0b9ca715720d8b39a9c397f2679a634122aaacf1d3a076067442d14dc2d94757afd4b17a72686d9b14a232342d60ee6474dc3b6799ed3c01477577774d0c90e749ed469085a70c79ad8dd0a80a0cc2f74b9b88b9590164c25b7d7d53bf61d6d9f1d5dfe415e6f6e1c9d19eab9cc7ae8a2dc983a8e3ecdd1ca9f93202033fcb1371179516f800d304d0770998b0726c7771f0860910fae7a651c029199db64ae7f248c82eeaaca433e247f707d858e78759812b5d2de33355b91ee95fd0f1ba1b637374c7b63900b457bc401d9c156bbfd90bc118a872bef8878584bc4d4bbe8d48c5a055d67d83c3a9a42443972b2e75098821dc9ef7d3dc78899e045d66209503e9164e573fb6571d714907070c6b7e239751533e4fbe793ceb5816edfe8195d0c39afd64df4de0a5864bbfca47daa3ac2974582989990c2849a9eac8325711811a70b9faa51988e67bbca6adc2d3281bf8b24211ac958ab1bd4bee9069875f49d804caf47bf5c0386d8d789fd84186efdd857cfd90cf17144bede5ea1286b74c0b611732f283788cf1e249f1563b45e6ee69739b35bbf2e4f38b9e98d1eb4f6adc1ad7da4dc7c73591455a2111426397d3d26cc7be6af0627190b8d4d3466c8cb47a1c493021d9147db7dda15cf4294bf1a2f1330e422c46c12c35fb7facc18452a6bd24aa7e89a368415f9ff94e4013757cfeb3317343e22f34d0c9fd523a269e2afb68515fb87b29a85f905aefb9f7a34df0300fd4694296d59ded34d89efbdc8c66a4769d7ecb7c8e769687ea8644e549d4721579c846eaafb755a32fc1aa6cff444803c80894b7e648cda736d9fc1410d75c9fdd85b2aabbd8ed86</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>Socket</tag>
      </tags>
  </entry>
  <entry>
    <title> C#语言实现Socket通信-1</title>
    <url>/2020/09/18/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0Socket%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="77ec6d25855fcbe75e19e74a804e3a32bc26202ac2bb849c7107085d030cd8e2"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>socket</tag>
      </tags>
  </entry>
  <entry>
    <title>Augument Reality : Review 1</title>
    <url>/2020/09/17/Augument-Reality-Review-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Augument-Reality-Review-1"><a href="#Augument-Reality-Review-1" class="headerlink" title="Augument Reality : Review 1"></a>Augument Reality : Review 1</h1><h2 id="definition"><a href="#definition" class="headerlink" title="definition"></a>definition</h2><blockquote>
<p>Azuma [3] provides a commonly accepted definition of AR as a technology which (1) combines real and virtual imagery, (2)  is interactive in real time, and (3) registers the virtual imagery with the real world.</p>
<p>—-<Trends in Augmented Reality Tracking, Interaction and Display : A Review of Ten Years of ISMAR></p>
<ol>
<li><p>Combines real and virtual</p>
</li>
<li><p>Is interactive in real time</p>
</li>
<li>Is registered in three dimensions</li>
</ol>
<p>—-<A Survey of Augmented Reality></p>
</blockquote>
<hr>
<h2 id="AR-Research-Topics"><a href="#AR-Research-Topics" class="headerlink" title="AR Research Topics"></a>AR Research Topics</h2><ol>
<li><p>Graphics rendering hardware and software</p>
<p>Graphics rendering hardware and software that can create the virtual content for overlaying the real world.</p>
</li>
<li><p><strong>Tracking techniques</strong></p>
<p>Tracking techniques so that <strong>the changes in the viewer’s position can be properly reflected in the rendered graphics</strong></p>
</li>
<li><p><strong>Tracker calibration and registration tools</strong></p>
<p>Tracker calibration and registration tools for <strong>precisely aligning the real and virtual views when the user view is fixed</strong></p>
</li>
<li><p>Display hardware</p>
<p>Display hardware for merging virtual images with views of the real world</p>
</li>
<li><p>Computer processing hardware for running AR simulation code and supporting input and output devices</p>
</li>
<li><p>Interaction techniques</p>
<p>Interaction techniques specifying how the user can manipulate the AR virtual content.</p>
</li>
</ol>
<hr>
<h2 id="Tracking-Techniques"><a href="#Tracking-Techniques" class="headerlink" title="Tracking Techniques"></a>Tracking Techniques</h2><h3 id="Sensor-Based-Tracking-Techniques"><a href="#Sensor-Based-Tracking-Techniques" class="headerlink" title="Sensor-Based Tracking Techniques"></a>Sensor-Based Tracking Techniques</h3><hr>
<hr>
<h3 id="Vision-Based-Tracking-Techniques"><a href="#Vision-Based-Tracking-Techniques" class="headerlink" title="Vision-Based Tracking Techniques"></a>Vision-Based Tracking Techniques</h3><p>Vision-based tracking techniques can use image processing methods to <strong>calculate the camera pose relative to real world objects.</strong></p>
<h4 id="feature-based"><a href="#feature-based" class="headerlink" title="feature-based"></a>feature-based</h4><p>The rationale underlying feature-based methods is to find a correspondence between 2D image features and their 3D world frame coordinates.</p>
<hr>
<hr>
<hr>
<h5 id="Markers"><a href="#Markers" class="headerlink" title="Markers"></a>Markers</h5><h6 id="Artificial-markers"><a href="#Artificial-markers" class="headerlink" title="Artificial markers"></a>Artificial markers</h6><p>Early computer vision papers at IWAR described marker tracking methods that could be used to calculate camera pose in real time from artificial markers.</p>
<h6 id="Natural-Features-such-as-points-lines-edges-or-textures"><a href="#Natural-Features-such-as-points-lines-edges-or-textures" class="headerlink" title="Natural Features,such as points, lines, edges or textures"></a>Natural Features,such as points, lines, edges or textures</h6><hr>
<hr>
<hr>
<h4 id="model-based"><a href="#model-based" class="headerlink" title="model-based"></a>model-based</h4><p>Model-based trackers usually construct their models based on lines or edges in the model.</p>
<p>Texture is another useful feature for constructing models. </p>
<hr>
<hr>
<h3 id="hybrid-tracking-techniques"><a href="#hybrid-tracking-techniques" class="headerlink" title="hybrid tracking techniques"></a>hybrid tracking techniques</h3><hr>
]]></content>
      <categories>
        <category>论文总结</category>
      </categories>
      <tags>
        <tag>review</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenCV中的Aruco识别</title>
    <url>/2020/09/17/OpenCV%E4%B8%AD%E7%9A%84Aruco%E8%AF%86%E5%88%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="OpenCV中的Aruco识别"><a href="#OpenCV中的Aruco识别" class="headerlink" title="OpenCV中的Aruco识别"></a>OpenCV中的Aruco识别</h1><blockquote>
<p>转载博客：</p>
<p><a href="https://blog.csdn.net/u010260681/article/details/77089657">https://blog.csdn.net/u010260681/article/details/77089657</a></p>
<p>如有侵权，立即删除</p>
</blockquote>
<p>姿态估计（Pose estimation）在<a href="http://lib.csdn.net/base/computervison">计算机视觉</a>领域扮演着十分重要的角色：<a href="http://lib.csdn.net/base/robot">机器人</a>导航、增强现实以及其它。这一过程的基础是找到现实世界和图像投影之间的对应点。这通常是很困难的一步，因此我们常常用自己制作的或基本的Marker来让这一切变得更容易。</p>
<p>最为流行的一个途径是基于二进制平方的标记。这种Marker的主要便利之处在于，一个Marker提供了足够多的对应（四个角）来获取相机的信息。同样的，内部的二进制编码使得<a href="http://lib.csdn.net/base/datastructure">算法</a>非常健壮，允许应用错误检测和校正技术的可能性。</p>
<p>aruco模块基于ArUco库，这是一个检测二进制marker的非常流行的库，是由Rafael Muñoz和Sergio Garrido完成的。</p>
<p>aruco的函数包含在c++：<a href="http://docs.opencv.org/3.1.0/d9/d53/aruco_8hpp.html">链接地址</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;opencv2&#x2F;aruco.hpp&gt;</span><br></pre></td></tr></table></figure>
<h2 id="Marker和字典"><a href="#Marker和字典" class="headerlink" title="Marker和字典"></a>Marker和字典</h2><p>一个ArUco marker是一个二进制平方标记，它由一个宽的黑边和一个内部的二进制矩阵组成，内部的矩阵决定了它们的id。黑色的边界有利于快速检测到图像，二进制编码可以验证id，并且允许错误检测和矫正技术的应用。marker的大小决定了内部矩阵的大小。例如，一个4x4的marker由16bits组成。</p>
<p>一些ArUco markers的例子：</p>
<p><img src="http://docs.opencv.org/3.1.0/markers.jpg" alt="markers.jpg"></p>
<p>应当注意到，我们需要检测到一个Marker在空间中发生了旋转，但是，检测的过程需要确定它的初始角度，所以每个角落需要是明确的，不能有歧义，保证上述这点也是靠二进制编码完成的。</p>
<p>markers的字典是在一个特殊应用中使用到的marker的集合。这仅仅是每个marker的二进制编码的链表。</p>
<p>字典的主要性质是字典的大小和marker的大小：</p>
<ul>
<li>字典的大小是组成字典的marker的数量</li>
<li><p>marker的大小是这些marker的尺寸（位的个数）</p>
<p>aruco模块包含了一些预定义的字典，这些字典涵盖了一系列的字典大小和Marker尺寸。</p>
</li>
</ul>
<p>有些人可能会认为Marker的id是从十进制转成二进制的。但是，考虑到较大的marker会有较多的位数，管理如此多的数据不那么现实，这并不可能。反之，一个marker的id仅需是marker在它所在的字典的下标。例如，一个字典里的五个marker的id是：0,1,2,3和4。</p>
<p>更多有关字典的信息在“选择字典”部分提及。</p>
<h2 id="创建Marker"><a href="#创建Marker" class="headerlink" title="创建Marker"></a>创建Marker</h2><p>​    在检测之前，我们需要打印marker，以把它们放到环境中。marker的图像可以使用<a href="http://docs.opencv.org/3.1.0/d6/d6e/group__imgproc__draw.html#ga482fa7b0f578fcdd8a174904592a6250">drawMarker()</a>函数生成。</p>
<p>​    例如，让我们分析一下如下的调用：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cv::Mat markerImage;</span><br><span class="line">cv::aruco::Dictionary dictionary = cv::aruco::getPredefinedDictionary(cv::aruco::DICT_6X6_250);</span><br><span class="line"></span><br><span class="line">  cv::aruco::drawMarker(dictionary, <span class="number">23</span>, <span class="number">200</span>, markerImage, <span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<p>首先，我们通过选择aruco模块中一个预定义的字典来创建一个字典对象，具体而言，这个字典是由250个marker组成的，每个marker的大小为6x6bits(DICT_6X6_250)</p>
<p>​     <code>drawMarker</code>的参数如下：</p>
<ul>
<li>第一个参数是之前创建的字典对象。</li>
<li>第二个参数是marker的id，在这个例子中选择的是字典DICT_6X6_250第23个marker。注意到每个字典是由不同数目的Marker组成的，在这个例子中，有效的Id数字范围是0到249。不在有效区间的特定id将会产生异常。</li>
<li>第三个参数，200，是输出Marker图像的大小。在这个例子中，输出的图像将是200x200像素大小。注意到这一参数需要满足能够存储特定字典 的所有位。所以，举例而言，你不能为6x6大小的marker生成一个5x5图像（这还没有考虑到Marker的边界）。除此之外，为了避免变形，这一参数最好和位数+边界的大小成正比，至少要比marker的大小大得多（如这个例子中的200)，这样变形就不显著了。</li>
<li>第四个参数是输出的图像。</li>
<li>最终，最后一个参数是一个可选的参数，它指定了Marer黑色边界的大小。这一大小与位数数目成正比。例如，值为2意味着边界的宽度将会是2的倍数。默认的值为1。</li>
<li>生成的图像如下：</li>
</ul>
<p><img src="http://docs.opencv.org/3.1.0/marker23.jpg" alt="marker23.jpg"></p>
<p>​    详细的例子在模块演示文件夹中的 <code>create_marker.cpp</code> </p>
<h2 id="检测Marker"><a href="#检测Marker" class="headerlink" title="检测Marker"></a>检测Marker</h2><p>给定一个可以看见ArUco marker的图像，检测程序应当返回检测到的marker的列表。每个检测到的marker包括：</p>
<ul>
<li>图像四个角的位置（按照原始的顺序）</li>
<li>marker的Id</li>
</ul>
<p>marker检测过程由以下两个主要步骤构成：</p>
<ol>
<li>检测有哪些marker。在这一阶段我们分析图像，以找到哪些形状可以被识别为Markers。首先要做的是利用自适应性阈值来分割marker，然后从阈值化的图像中提取外形轮廓，并且舍弃那些非凸多边形的，以及那些不是方形的。我们还使用了一些额外的滤波（来剔除那些过小或者过大的轮廓，过于相近的凸多边形，等）</li>
<li>检测完marker之后，我们有必要分析它的内部编码来确定它们是否确实是marker。此步骤首先提取每个标记的标记位。为了达到这个目的，首先，我们需要对图像进行透视变换，来得到它规范的形态（正视图）。然后，对规范的图像用Ossu阈值化以分离白色和黑色位。这一图像根据marker大小和边界大小被分为不同格子，我们统计落在每个格子中的黑白像素数目来决定这是黑色还是白色的位。最终，我们分析这些位数来决定这个marker是属于哪个特定字典的，如果有必要的话，需要对错误进行检测。</li>
</ol>
<p>考虑如下图像：</p>
<p><img src="http://docs.opencv.org/3.1.0/singlemarkersoriginal.png" alt="singlemarkersoriginal.png"></p>
<p>这些是检测出来的marker（用绿色标记）</p>
<p><img src="http://docs.opencv.org/3.1.0/singlemarkersdetection.png" alt="singlemarkersdetection.png"></p>
<p>以下是识别阶段被剔除的Marker候选（用粉红色标记）：</p>
<p><img src="http://docs.opencv.org/3.1.0/singlemarkersrejected.png" alt="singlemarkersrejected.png"></p>
<p>在aruco模块，检测是由<code>detectMarkers()</code> 函数完成的，这一函数是这个模块中最重要的函数，因为剩下的所有函数操作都基于detectMarkers()返回的检测出的markers。</p>
<p>一个marker检测的例子：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cv::Mat inputImage;</span><br><span class="line"><span class="built_in">vector</span>&lt; <span class="keyword">int</span> &gt; markerIds; </span><br><span class="line"><span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt;Point2f&gt; &gt; markerCorners, rejectedCandidates; </span><br><span class="line">cv::aruco::DetectorParameters parameters; </span><br><span class="line">cv::aruco::Dictionary dictionary = cv::aruco::getPredefinedDictionary(cv::aruco::DICT_6X6_250); </span><br><span class="line">cv::aruco::detectMarkers(inputImage, dictionary, markerCorners, markerIds, parameters, rejectedCandidates); </span><br></pre></td></tr></table></figure>
<p><code>detectMarkers</code> 的参数为：</p>
<ul>
<li>第一个参数是待检测marker的图像。</li>
<li>第二个参数是字典对象，在这一例子中是之前定义的字典 (<code>DICT_6X6_250</code>).</li>
<li>检测出的markers存储在<code>markerCorners</code> 和 <code>markerIds</code>结构中：<ul>
<li><code>markerCorners</code> 是检测出的图像的角的列表。对于每个marker，将返回按照原始顺序排列的四个角（从左上角顺时针开始）。因此，第一个点是左上角的角，紧接着右上角、右下角和左下角。</li>
<li><code>markerIds</code> 是在markerCorners检测出的所有maker的id列表.注意返回的markerCorners和<code>markerIds</code> 向量具有相同的大小。 </li>
</ul>
</li>
<li>第四个参数是类型的对象 <code>DetectionParameters</code>. 这一对象包含了检测阶段的所有参数。这一参数将在 下一章节详细介绍。</li>
<li><p>最后的参数, <code>rejectedCandidates</code>, 返回了所有的marker候选, 例如， 那些被检测出来的不是有效编码的方形。每个候选同样由四个角定义， 它的 形式和markerCorners的参数一样。这一参数可以省略，它仅仅用于debug阶段，或是用于“再次寻找”策略（见<a href="http://docs.opencv.org/3.1.0/d9/d6a/group__aruco.html#ga90374a799f1da566e5de16f277b12463">refineDetectedMarkers()</a>）</p>
<p><code>detectMarkers()</code>之后，接下来你想要做的事情可能是检查你的marker是否被正确地检测出来了。幸运的是，aruco模块提供了一个函数，它能在输入图像中来绘制检测出来的markers，这个函数就是<a href="http://docs.opencv.org/3.1.0/d9/d6a/group__aruco.html#ga2ad34b0f277edebb6a132d3069ed2909">drawDetectedMarkers()</a> ,例子如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cv::Mat outputImage;</span><br><span class="line">cv::aruco::drawDetectedMarkers(image, markerCorners, markerIds);</span><br></pre></td></tr></table></figure></li>
<li><code>image</code> 是输入/输出图像，程序将在这张图上绘制marker。（它通常就是检测出marker的那张图像）</li>
<li><code>markerCorners</code> 和 <code>markerIds</code> 是检测出marker的结构，它们的格式和 <code>detectMarkers()</code>函数提供的一样。</li>
</ul>
<p><img src="http://docs.opencv.org/3.1.0/singlemarkersdetection.png" alt="singlemarkersdetection.png"></p>
<p> 注意到这个函数仅仅用于可视化，而没有别的什么用途。</p>
<p>使用这两个函数我们完成了基本的marker识别步骤，我们可以从相机中检测出Marker了。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cv::VideoCapture inputVideo; </span><br><span class="line"></span><br><span class="line">inputVideo.open(<span class="number">0</span>); </span><br><span class="line"></span><br><span class="line">cv::aruco::Dictionary dictionary = cv::aruco::getPredefinedDictionary(cv::aruco::DICT_6X6_250); </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (inputVideo.grab()) </span><br><span class="line"></span><br><span class="line">&#123; </span><br><span class="line">    cv::Mat image, imageCopy;</span><br><span class="line">    inputVideo.retrieve(image); </span><br><span class="line">    image.copyTo(imageCopy);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ids; <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Point2f&gt; &gt; corners; </span><br><span class="line">    cv::aruco::detectMarkers(image, dictionary, corners, ids);</span><br><span class="line">    <span class="comment">// if at least one marker detected </span></span><br><span class="line">    <span class="keyword">if</span> (ids.size() &gt; <span class="number">0</span>) </span><br><span class="line">        cv::aruco::drawDetectedMarkers(imageCopy, corners, ids);</span><br><span class="line">    cv::imshow(<span class="string">&quot;out&quot;</span>, imageCopy); </span><br><span class="line">    <span class="keyword">char</span> key = (<span class="keyword">char</span>) cv::waitKey(waitTime); </span><br><span class="line">    <span class="keyword">if</span> (key == <span class="number">27</span>) <span class="keyword">break</span>; </span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>​    注意到这里忽略了有些可选的参数，比如检测参数对象、以及输出的被剔除的候选对象向量。</p>
<p>​    完整的工程代码包含在模块样例文件夹中的<code>detect_markers.cpp</code> </p>
<h2 id="Pose检测"><a href="#Pose检测" class="headerlink" title="Pose检测"></a>Pose检测</h2><p>接下来你想要做的应当是通过Marker检测来获取相机pose。</p>
<p>为了展现相机的Pose检测，你需要知道你的相机的校准（Calibration）参数。这是一个相机矩阵和畸变系数。如果你不知道如何校准你的相机，你可以看一看<code>calibrateCamera()</code> 函数，以及<a href="http://lib.csdn.net/base/opencv">OpenCV</a>的校准教程。你同样可以使用aruco模块来校准你的相机，这在使用aruco进行校准的教程中将会介绍。注意这个过程只需要做一次，除非你的相机的光学性质发生了改变（例如调焦）</p>
<p>最后，在校准之后我们得到的是相机矩阵：这是一个3x3的矩阵，包含了焦距和相机中心坐标（相机的内参），以及畸变系数：一个包含五个以上元素的向量，它描述的是相机产生的畸变。</p>
<p>当你用ArUco marker来检测相机Pose时，你可以单独地检测每个Marker的pose。如果你想要从一堆Marker里检测出一个pose，你需要的是aruco板。（参见ArUco板教程）</p>
<p>涉及到marker的相机pose是一个从marker坐标系统到相机坐标系统的三维变换。这是由一个旋转和一个平移向量确定的（参见 <code>solvePnP()</code> 函数）</p>
<p>aruco模块提供了一个函数，用来检测所有探测到的Marker的pose。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Mat cameraMatrix, distCoeffs; </span><br><span class="line"></span><br><span class="line">... </span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt; Vec3d &gt; rvecs, tvecs; </span><br><span class="line"></span><br><span class="line">cv::aruco::estimatePoseSingleMarkers(corners, <span class="number">0.05</span>, cameraMatrix, distCoeffs, rvecs, tvecs); </span><br></pre></td></tr></table></figure>
<ul>
<li><code>corners</code> 参数是marker的角向量，是由<code>detectMarkers()</code> 函数返回的。</li>
<li>第二个参数是marker的大小（单位是米或者其它）。注意Pose检测的平移矩阵单位都是相同的。</li>
<li><code>cameraMatrix</code> 和 <code>distCoeffs</code> 是需要求解的相机校准参数。</li>
<li><p><code>rvecs</code> 和 <code>tvecs</code> 分别是每个markers角的旋转和平移向量。</p>
<p>这一函数获取的marker坐标系统处在marker重心，Z坐标指向纸面外部，如下图所示。坐标的颜色为,X:红色，Y：绿色，Z：蓝色。</p>
</li>
</ul>
<p><img src="http://docs.opencv.org/3.1.0/singlemarkersaxis.png" alt="singlemarkersaxis.png"></p>
<p>aruco模块提供了一个函数绘制上图中的坐标，所以我们可以检查pose检测的正确性。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cv::aruco::drawAxis (image, cameraMatrix, distCoeffs, rvec, tvec, <span class="number">0.1</span>); </span><br></pre></td></tr></table></figure>
<ul>
<li><code>image</code> 是输入/输出图像，坐标将会在这张图像上绘制（通常就是检测marker的那张图像）。</li>
<li><code>cameraMatrix</code> 和 <code>distCoeffs</code> 是相机校准参数。</li>
<li><code>rvec</code> 和 <code>tvec</code> 是Pose参数，指明了坐标绘制的位置。</li>
<li>最后一个参数是坐标轴的长度，和tvec单位一样（通常是米）。</li>
</ul>
<p>针对一个marker的pose检测的基本的完整示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cv::VideoCapture inputVideo;</span><br><span class="line">inputVideo.open(<span class="number">0</span>);</span><br><span class="line">cv::Mat cameraMatrix, distCoeffs; <span class="comment">// camera parameters are read from somewhere </span></span><br><span class="line"></span><br><span class="line">readCameraParameters(cameraMatrix, distCoeffs);</span><br><span class="line"></span><br><span class="line">cv::aruco::Dictionary dictionary = cv::aruco::getPredefinedDictionary(cv::aruco::DICT_6X6_250);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (inputVideo.grab()) &#123; </span><br><span class="line">	cv::Mat image, imageCopy;</span><br><span class="line">	inputVideo.retrieve(image); </span><br><span class="line">	image.copyTo(imageCopy);</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ids; </span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Point2f&gt; &gt; corners; </span><br><span class="line">	cv::aruco::detectMarkers(image, dictionary, corners, ids);<span class="comment">// if at least one marker detected </span></span><br><span class="line">	<span class="keyword">if</span> (ids.size() &gt; <span class="number">0</span>) &#123; </span><br><span class="line">		cv::aruco::drawDetectedMarkers(imageCopy, corners, ids);</span><br><span class="line">        <span class="built_in">vector</span>&lt; Mat &gt; rvecs, tvecs; </span><br><span class="line">        cv::aruco::estimatePoseSingleMarkers(corners, <span class="number">0.05</span>, cameraMatrix, distCoeffs, rvecs, tvecs); <span class="comment">// draw axis for each marker </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;ids.size(); i++) </span><br><span class="line">        &#123;</span><br><span class="line">            cv::aruco::drawAxis(imageCopy, cameraMatrix, distCoeffs, rvecs[i], tvecs[i], <span class="number">0.1</span>); </span><br><span class="line">        &#125;</span><br><span class="line">        cv::imshow(<span class="string">&quot;out&quot;</span>, imageCopy); </span><br><span class="line">        <span class="keyword">char</span> key = (<span class="keyword">char</span>) cv::waitKey(waitTime); </span><br><span class="line">        <span class="keyword">if</span> (key == <span class="number">27</span>) <span class="keyword">break</span>; </span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>​    样例视频:</p>
<p>​    <a href="https://youtu.be/IsXWrcB_Hvs"><img src="http://img.youtube.com/vi/IsXWrcB_Hvs/0.jpg" alt="ArUco markers detection video"></a></p>
<p>​    完整的工程代码包含在模块样例文件夹中的 <code>detect_markers.cpp</code></p>
<h2 id="选择字典"><a href="#选择字典" class="headerlink" title="选择字典"></a>选择字典</h2><p>aruco模块提供了Dictionary类来描述marker的字典。</p>
<p>除了marker大小和字典中的marker数目，字典还有一个很重要的参数，就是内部marker的距离。内部marker的距离是marker之间的最小距离，它决定了字典错误检测和纠正能力。</p>
<p>一般而言，较小的字典大小和较大的marker大小将会产生更大的内部marker距离，反之亦然。但是，过大的Marker在检测中更加困难，因为我们需要从图像中提取出更多位的信息。</p>
<p> 例如，如果你的应用中仅仅需要10个marker，最好使用只包含10个marker的字典，而不是包含1000个marker的字典。原因在于，由10个marker组成的字典将会有更大的内部Marker距离，因此，它的容错性更强。</p>
<p>结果，aruco模块包含了很多选择marker字典的途径，所以你可以让你的系统变得更加健壮。</p>
<ul>
<li>预定义的字典：</li>
</ul>
<p>这是选择字典最简单的办法。aruco模块包含了一系列预定义的字典，涵盖了不同的marker大小和marker数量。例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cv::aruco::Dictionary dictionary = cv::aruco::getPredefinedDictionary(cv::aruco::DICT_6X6_250); </span><br></pre></td></tr></table></figure>
<p>DICT_6X6_250 是一个预定义的字典，它包含6x6位的marker，总共有250个marker。</p>
<p>在所有提供的字典中，我们推荐使用你选择尽可能小的marker。例如，如果你需要6x6位的200个marker，选择DICT_6X6_250要优于选择DICT_6X6_1000。字典越小，内部距离就越大。</p>
<ul>
<li>自动生成的字典:</li>
</ul>
<p>我们可以针对想要的marker数量和位来生成字典，以得到最优的内部Marker距离。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cv::aruco::Dictionary dictionary = cv::aruco::generateCustomDictionary(<span class="number">36</span>, <span class="number">5</span>); </span><br></pre></td></tr></table></figure>
<p>这将会产生一个由36个5X5位字典组成的标准字典。这个过程需要几秒钟，具体时间取决于你的参数（更大的字典和更多的位数会耗费更多的时间）</p>
<ul>
<li>手动生成的字典:</li>
</ul>
<p>最终，我们可以手动设置字典，方便做任何修改。为了做到这一点，我们需要手动给 <code>Dictionary</code> 对象参数赋值。必须注意的是，除非你有一些特别的理由需要自己来生成字典，一般情况下我们推荐前面的任一种方案。</p>
<p>字典参数为：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dictionary</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">    	Mat bytesList; </span><br><span class="line">    	<span class="keyword">int</span> markerSize; </span><br><span class="line">    	<span class="keyword">int</span> maxCorrectionBits; <span class="comment">// maximum number of bits that can be corrected</span></span><br><span class="line">    	...</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>bytesList</code> 是一个数组，它包含了所有marker代码的信息。markerSize是每个marker的维度（例如，参数为5代表5x5位）。最终， <code>maxCorrectionBits</code>是marker检测中 可校正的最大比特数，如果这个值过大，会得到大量的错误位置。</p>
<p> <code>bytesList</code> 中的每一行代表字典中的一个marker。但是，这些marker的数据并不以二进制形式存储，而是以一种特殊的方式存储，这样可以简化检测的过程。</p>
<p>幸运的是，我们可以简单地调用静态方法<code>Dictionary::getByteListFromBits()</code>来转换到这种形式。</p>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Dictionary dictionary; </span><br><span class="line"><span class="comment">// markers of 6x6 bits </span></span><br><span class="line">dictionary.markerSize = <span class="number">6</span>; </span><br><span class="line"><span class="comment">// maximum number of bit corrections </span></span><br><span class="line">dictionary.maxCorrectionBits = <span class="number">3</span>;</span><br><span class="line"><span class="comment">// lets create a dictionary of 100 markers </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++)</span><br><span class="line">&#123;<span class="comment">// assume generateMarkerBits() generate a new marker in binary format, so that </span></span><br><span class="line"><span class="comment">// markerBits is a 6x6 matrix of CV_8UC1 type, only containing 0s and 1s </span></span><br><span class="line">	cv::Mat markerBits = generateMarkerBits(); </span><br><span class="line">	cv::Mat markerCompressed = getByteListFromBits(markerBits); <span class="comment">// add the marker as a new row</span></span><br><span class="line">	dictionary.bytesList.push_back(markerCompressed); </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h2 id="检测参数"><a href="#检测参数" class="headerlink" title="检测参数"></a>检测参数</h2><p> <a href="http://docs.opencv.org/3.1.0/d9/d6a/group__aruco.html#ga306791ee1aab1513bc2c2b40d774f370">detectMarkers()</a>的一个参数是DetectorParameters对象。这一对象包含了marker检测过程中所有特定的选项。</p>
<p>在这一章节中，我们将介绍所有的参数。我们可以根据它们涉及的阶段来给这些参数分类。</p>
<h4 id="阈值化"><a href="#阈值化" class="headerlink" title="阈值化"></a>阈值化</h4><p>检测的第一步是输入图像的阈值化。</p>
<p>例如，上述样例中的图像阈值化的结果如下：</p>
<p><img src="http://docs.opencv.org/3.1.0/singlemarkersthresh.png" alt="singlemarkersthresh.png"></p>
<p>这一阈值化过程由以下几个参数决定：</p>
<ul>
<li><code>int adaptiveThreshWinSizeMin</code>, <code>intadaptiveThreshWinSizeMax</code>, <code>int adaptiveThreshWinSizeStep</code></li>
</ul>
<p>​    <code>adaptiveThreshWinSizeMin</code> 和 <code>adaptiveThreshWinSizeMax</code> 参数代表选择的自适应阈值窗口大小（以像素为单位）间隔（具体参见<a href="http://lib.csdn.net/base/opencv">opencv</a>的 <code>threshold()</code>函数）。</p>
<p>参数adaptiveThreshWinSizeStep表明了窗口从adaptiveThreshWinSizeMin到adaptiveThreshWinSizeMax大小的增量。</p>
<p>例如，对于adaptiveThreshWinSizeMin=5，adaptiveThreshWinSizeMax=21以及adaptiveThreshWinSizeStep=4，那么将会产生5个阈值化步骤，窗口大小分别为5, 9, 13, 17 和 21。在每个阈值化图像中，都会选出一些marker候选。</p>
<p>如果marker大小太大的话，较小的窗口大小可能会切割marker的边界，所以它将不会被检测到，就像下图一样：</p>
<p><img src="http://docs.opencv.org/3.1.0/singlemarkersbrokenthresh.png" alt="singlemarkersbrokenthresh.png"></p>
<p>Broken marker image</p>
<p>另一方面，如果marker太小的话，较大的窗口大小也会有类似的效果。此外这一过程将会趋向于全局阈值，而失去了自适应的特性。</p>
<p>最简单的例子是对adaptiveThreshWinSizeMin和 <code>adaptiveThreshWinSizeMax</code>使用相同的值，这样就只会执行一次阈值化步骤。但是，最好还是使用一个范围的值作为窗口大小，虽然较多的阈值化步骤会在一定程度上降低性能。</p>
<p>缺省参数：<code>adaptiveThreshWinSizeMin</code>: 3, <code>adaptiveThreshWinSizeMax</code>: 23, <code>adaptiveThreshWinSizeStep</code>: 10</p>
<ul>
<li><p><code>double adaptiveThreshConstant</code></p>
<p>这一参数表达了阈值状态下的常量（参见Opencv函数）。它的默认值是大多数例子下较好的情况。</p>
</li>
</ul>
<p>默认值: 7</p>
<h4 id="轮廓滤波"><a href="#轮廓滤波" class="headerlink" title="轮廓滤波"></a>轮廓滤波</h4><p>阈值化之后，我们需要检测轮廓。但是，我们并不会把所有的轮廓都当作是候选。在不同步骤中，我们通过滤波剔除一些不太可能是marker的轮廓。这一章节中的参数可以自定义这一过程。</p>
<p> 需要注意到，大多数例子中我们需要平衡检测的性能和效率。所有考虑到的轮廓都会在接下来的过程中做进一步处理，这通常产生了更高的计算消耗。所以，我们希望能够在这一阶段就丢弃错误的候选，而不是下一阶段继续处理。</p>
<p>另一方面，如果滤波的条件过于苛刻，事实上的marker轮廓可能会被错误地剔除，因此，没有检测到marker。</p>
<ul>
<li><p><code>double minMarkerPerimeterRate</code>, <code>doublemaxMarkerPerimeterRate</code></p>
<p>这些参数决定了marker的最小值和最大值，具体来说，是最大最小marker的周长。它们并不是以绝对像素值作为单位，而是相对于输入图片的最大尺寸指定的。</p>
</li>
</ul>
<p>例如，大小为640x480，最小相对marker周长为0.05的图像，将会产生一个最小周长640x0.05 = 32(像素)的marker，因为640是图像的最大尺寸。参数 <code>maxMarkerPerimeterRate</code> 也是类似的。</p>
<p> 如果 <code>minMarkerPerimeterRate</code>太小，检测阶段性能会降低，因为会有更多的轮廓进入到接下来的阶段。这一弊端对于 <code>maxMarkerPerimeterRate</code>参数而言不是那么显著，因为小的轮廓数目通常要多于大的轮廓。选取 <code>minMarkerPerimeterRate</code>值为0以及值为4，就相当于考虑了图像中的所有轮廓，但是出于性能考虑这是不推荐的。</p>
<p> 缺省值：</p>
<p>Default values:<code>minMarkerPerimeterRate</code> : 0.03, <code>maxMarkerPerimeterRate</code> : 4.0</p>
<ul>
<li><code>double polygonalApproxAccuracyRate</code></li>
</ul>
<p>我们对所有的候选进行多边形近似，只有近似结果为方形的形状才能通过<a href="http://lib.csdn.net/base/softwaretest">测试</a>。这一值决定了多边形近似产生的最大误差（参见<code>approxPolyDP()</code> 函数）。</p>
<p> 这一参数是相对于候选长度的（像素上）。所以如果候选的周长为100像素，polygonalApproxAccuracyRate的值为0.04，那么最大的误差应当为100x0.04=5.4像素。</p>
<p>在大多例子中，缺省参数的表现已经很好了，但对高失真的图像，我们需要更大的误差值。</p>
<p>​    缺省值：0.05</p>
<ul>
<li><code>double minCornerDistanceRate</code></li>
</ul>
<p>同一张marker中每一对角的最小距离。这是相对于marker周长的值。像素的最小距离为Perimeter * minCornerDistanceRate.</p>
<p>​    缺省值: 0.05</p>
<ul>
<li><p><code>double minMarkerDistanceRate</code></p>
<p>两张不同的marker之间的任一对角的最小距离。它表示相对于两个marker的最小标记周长。如果两个候选太接近，较小的一个被忽略。</p>
</li>
</ul>
<p>​    缺省值：0.05</p>
<ul>
<li><code>int minDistanceToBorder</code></li>
</ul>
<p>marker角到图像边缘最小距离。部分图像边缘被遮挡的marker也能被正确地检测出来，如果遮挡部分比较小的话。但是，如果其中一个角被挡住了，返回的角通常在图像边界的一个错误的位置。</p>
<p>如果marker角的位置很重要的话，例如你想要做pose检测，最好舍弃掉那些离图像边缘太接近的角。否则就没有必要。</p>
<p>​    缺省值：3</p>
<h4 id="比特位提取"><a href="#比特位提取" class="headerlink" title="比特位提取"></a>比特位提取</h4><p>检测到候选之后，我们需要分析每个候选的比特位，来确定它们是不是marker。</p>
<p>在分析二进制编码之前，我们需要提取出比特位。为了达到这个目的，将对透视变换后的图像使用Otsu进行阈值化，来分离黑色和白色像素。</p>
<p>以下是一个透视变换后的图像：</p>
<p><img src="http://docs.opencv.org/3.1.0/removeperspective.png" alt="removeperspective.png"></p>
<p>接下来，图像被划分为网格，和marker位数相同。在每个单元格里，我们统计黑色和白色的个数，决定这个单元格的比特位。</p>
<p><img src="http://docs.opencv.org/3.1.0/bitsextraction1.png" alt="bitsextraction1.png"></p>
<p>以下参数可以自定义这一过程：</p>
<ul>
<li><code>int markerBorderBits</code></li>
</ul>
<p>这一参数指定了marker边界的宽度。这和每个比特位的大小相关。因此，值为2意味着边界的长度是两个内部比特位的长度。</p>
<p>这一参数需要和你使用的Marker边界大小一致，边界的大小可以在绘制函数如 <code>drawMarker()</code>中设置。</p>
<p>​    缺省值：1</p>
<ul>
<li><code>double minOtsuStdDev</code></li>
</ul>
<p>这个值决定了进行Otsu的最小标准差的像素值。如果偏差很低，这可能意味着所有方形都是黑色的(或白色的），Ostu将不起作用。如果是这样的话，所有的比特位都根据平均值大于还是小于128被设为0或者1.</p>
<p>​    缺省值：5.0</p>
<ul>
<li><code>int perpectiveRemovePixelPerCell</code></li>
</ul>
<p>这一参数决定了透视变换后图像的像素数目（每个单元格，包含边界）。这是上图中红色正方形的大小。</p>
<p>例如，让我们假设我们在处理5x5比特位、边界为1比特位的marker（参见markerBorderBit）。然后，每一维的单元格/比特位的个数为：5 + 2* 1 = 7（边界需要被统计2次）。单元格总体大小为：7x7。</p>
<p>如果perpectiveRemovePixelPerCell的值为10，那么获取到的图像大小为10*7 = 70 -&gt; 70x70 </p>
<p>这一参数选择更大的值可以提升比特位的提取过程（在某一程度上），但是它同样也降低了性能。</p>
<p>​    缺省值：4</p>
<ul>
<li><code>double perspectiveRemoveIgnoredMarginPerCell</code></li>
</ul>
<p>当提取每个单元格的比特位时，需要统计黑色和白色的像素个数。一般而言，我们不推荐考虑单元格的所有像素。反之，最好忽略单元格的一些像素。</p>
<p>原因在于，透视变换之后，单元格的颜色不会完全分离，白色的单元格可能会混入一些黑色的单元格（反之亦然）。因此，最好忽略这些像素，以避免错误的像素计数。</p>
<p>例如，以下图像：</p>
<p><img src="http://docs.opencv.org/3.1.0/bitsextraction2.png" alt="bitsextraction2.png"></p>
<p>我们只考虑处在绿色正方形中的像素。我们可以在右边的图像中看到，最终的像素包含了邻域单元格更少的噪声。参数<code>perspectiveRemoveIgnoredMarginPerCell</code> 指明了红色和绿色正方形之间的距离。</p>
<p>这一参数是相对于单元格整体的大小的。例如，如果单元格的大小为40像素，这一参数的值为0.1，那么大小为40*0.1=4像素的边界将被剔除。这意味着每个单元格实际上要分析的像素大小为32x32，而不是40x40。</p>
<p>​     缺省值：0.13</p>
<h4 id="Marker-ID"><a href="#Marker-ID" class="headerlink" title="Marker ID"></a>Marker ID</h4><p>比特位提取之后，接下来的步骤是检查提取的编码是否属于这个marker字典，有必要的话，还需要做错误检测步骤。</p>
<ul>
<li><p><code>double maxErroneousBitsInBorderRate</code></p>
<p>marker边界的比特位应当是黑色的。这一参数指明了允许的边界出错比特位的个数。如，边界可以出现的白色比特位的最大值。它的大小相对于marker中的比特位总数。</p>
</li>
</ul>
<p>​    缺省值：0.35</p>
<ul>
<li><code>double errorCorrectionRate</code></li>
</ul>
<p>每个marker字典有一位可以纠正的理论最大值（Dictionary.maxCorrectionBits）。但是，这个值可以由<code>errorCorrectionRate</code> 参数来修改。</p>
<p> 例如，如果允许纠正的比特位（对于使用的字典）数目为6， <code>errorCorrectionRate</code>的值为0.5，那么实际上最大的可以纠正的比特位个数为6*0.5=3</p>
<p>这一值对减少错误容忍率以避免错误的位置识别很有帮助。</p>
<p>​    缺省值：0.6</p>
<h4 id="角落细化（Corner-Refinement）"><a href="#角落细化（Corner-Refinement）" class="headerlink" title="角落细化（Corner Refinement）"></a>角落细化（Corner Refinement）</h4><p>当我们检测完marker，并且验证了它们的id之后，最后要做的一步是在角落处的亚像素级的细化（参见OpenCV <code>cornerSubPix()</code>)</p>
<p>注意，这一步是可选的，仅在我们对marker角位置的准确性要求很高时才有意义。例如，pose的检测。这一步骤很耗费时间，所以默认下是不做的。</p>
<ul>
<li><code>bool doCornerRefinement</code></li>
</ul>
<p>这一参数决定了是否要进行角落亚像素级细化过程，如果对角点的准确性要求不高，可以不进行这一过程。</p>
<p>​    缺省值：false</p>
<ul>
<li><code>int cornerRefinementWinSize</code></li>
</ul>
<p>这一参数决定了亚像素级细化过程的窗口大小。</p>
<p>较大的值可以产生窗口区域内比较靠近的图像角，marker角会移动到一个不同的错误的地方。除此之外这还会影响到性能。</p>
<p>​    缺省值：5</p>
<ul>
<li><code>int cornerRefinementMaxIterations</code>, <code>doublecornerRefinementMinAccuracy</code></li>
</ul>
<p>这两个值决定了亚像素级细化过程的结束条件。cornerRefinementMaxIterations指明了迭代的最大次数，<code>cornerRefinementMinAccuracy</code> 是结束这一过程前的最小错误值。</p>
<p>如果迭代次数过高，这会影响到性能。此外，如果太小的话，亚像素级细化就基本没有发挥作用。</p>
<p>​    缺省值：</p>
<p><code>cornerRefinementMaxIterations</code>: 30, <code>cornerRefinementMinAccuracy</code>: 0.1</p>
]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>Aruco</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Windows10设置Windows terminal 当前目录打开</title>
    <url>/2020/09/15/%E5%85%B3%E4%BA%8EWindows10%E8%AE%BE%E7%BD%AEWindows-terminal-%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E6%89%93%E5%BC%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="关于Win10-设置Windows-terminal-的特定目录打开设置"><a href="#关于Win10-设置Windows-terminal-的特定目录打开设置" class="headerlink" title="关于Win10 设置Windows terminal 的特定目录打开设置"></a>关于Win10 设置Windows terminal 的特定目录打开设置</h1><blockquote>
<p>参考博客:</p>
<p><a href="https://blog.csdn.net/andyL_05/article/details/105943820">https://blog.csdn.net/andyL_05/article/details/105943820</a></p>
<p>以下内容全部来自参考博客，如有侵权，请联系我删除，感谢</p>
</blockquote>
<h2 id="Windows-Terminal-简介"><a href="#Windows-Terminal-简介" class="headerlink" title="Windows Terminal 简介"></a>Windows Terminal 简介</h2><p>Windows Terminal 是微软推出的Windows端新的命令行工具，相比于之前一直被吐槽丑的command 和 powershell，Windows Terminal更加“现代”，界面好看，使用方便。</p>
<p>作为一款开源工具，repo位于<a href="https://github.com/Microsoft/Terminal">Windows Terminal</a>这里。当前（2020年5月初）版本为v0.11.1251.0，也是v1.0rc1，基本上就是预览版（preview）的最后一个版本了，在源码仓库里时间表上也可以看到<br><img src="https://img-blog.csdnimg.cn/20200506092739206.png" alt="在这里插入图片描述"><br>预计就是本月推出正式版的windows terminal了。<br>以往的预览版通常无法直接安装，需要从源码自行编译。目前已经可以直接从Microsoft Store里直接安装，不过要求系统版本<br><img src="https://img-blog.csdnimg.cn/20200506092952865.png" alt="在这里插入图片描述"><br>在1903或更新。</p>
<hr>
<h2 id="Windows-Terminal设置简要介绍"><a href="#Windows-Terminal设置简要介绍" class="headerlink" title="Windows Terminal设置简要介绍"></a>Windows Terminal设置简要介绍</h2><p>安装后直接打开的Windows Terminal是这个样子：<br><img src="https://img-blog.csdnimg.cn/20200506093128723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FuZHlMXzA1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">注意到“Windows Terminal”这个名字实在是太长了，所以其实运行的可执行文件叫做 “wt”，按win键启动开始菜单输入 wt 就可以直接打开。<br>首先我们注意到字体就比cmd或者powershell好看了很多<br>点击右侧下拉菜单，可以选择新建其他的命令行，这里只是显示了默认的几个，实际上通过设置可以进行ssh连接到远程主机（不限于win系统）<br><img src="https://img-blog.csdnimg.cn/20200506093355250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FuZHlMXzA1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>设置是通过setting.json实现的。<br>打开设置文件，可以看到一系列的设置选项：<br><img src="https://img-blog.csdnimg.cn/20200506093906551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FuZHlMXzA1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>微软也有完善的文档支持这些设置，<a href="https://github.com/microsoft/terminal/blob/master/doc/user-docs/index.md">使用者文档（user documentation）</a></p>
<p>以及 <a href="https://github.com/microsoft/terminal/blob/master/doc/cascadia/SettingsSchema.md">setting.json文档</a></p>
<p>可以参考完成设置，我这里就不多说了。<br>简单说一下default里面的设置，就是默认打开的终端设置，这里不光可以设置背景颜色，字体等，还可以选择自定义的图片作为背景，比如我就设置了：<br><img src="https://img-blog.csdnimg.cn/2020050609424670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FuZHlMXzA1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样的背景，感觉使用起来还是蛮有感觉的。</p>
<p>list内部就是自定义的profiles，可以配置打开不同的终端时的设置。guid就是全局唯一标识符，可以从工具自动生成。其他设置参考文档中的设置即可。</p>
<p>背景的独立设置，不仅美观，而且能够帮助我们直观的区分所处的环境，避免输入错误的命令导致严重后果。</p>
<hr>
<h2 id="Windows-Terminal-当前路径打开"><a href="#Windows-Terminal-当前路径打开" class="headerlink" title="Windows Terminal 当前路径打开"></a>Windows Terminal 当前路径打开</h2><p>熟悉cmd或powershell的朋友们应该知道，如果在文件夹地址栏直接输出 cmd 或 powershell 就可以在文件夹所处路径直接打开命令行终端，而不需要启动后再切换路径，对于Windows系统来说，由于磁盘分区、中文路径、反斜杠等因素，切换路径比起linux更让人烦一点。<br>除此之外，通过修改注册表也能够使用shift+右键选择此处启动powershell，这些都是快速在当前路径启动命令行的方式，那么Windows Terminal能不能这么做呢？</p>
<p>测试发现直接在文件夹地址栏输入wt（因为这个可执行文件就是wt.exe而不是完整名字）确实启动了Windows Terminal，但是初始路径位置并不是当前的文件夹。这里参考我们上面的设置，default里增加一行 “startingDirectory”: “.”，也就是打开目录为当前路径，就可以做到地址栏输入WT在特定目录启动Windows terminal了。</p>
<p>不过这里仍然有一些<strong>问题</strong>：<br>1· 首先如果不加这一行或者不对startingDirectory设置，那么默认启动路径是C:\Users\username这里，无论是双击wt.exe还是地址栏还是开始菜单启动都是这样，设置了之后默认位置就变成了C:\WINDOWS\system32这里，除了地址栏输入wt能够在特定目录启动外，其他运行Windows Terminal的方式一律在这里打开了。<br>2· 另外如果已经有Windows Terminal的窗口打开了，再次启动或者通过地址栏运行wt都会新建一个窗口而不是原来窗口的新标签页，并且标签页不能像浏览器一样拖进拖出；同时在某个路径下打开WT的窗口，点击右边“+”新建的标签页一定在同一个路径。一开始发现这个有点不爽，但是仔细想想可能这样做更实用一些，如果所有终端页面都是可拖动的标签页也难免混淆。<br>以上就是特定目录启动wt的一种方法，setting.json增加相应设置，然后地址栏输入wt按下回车即可。另外在文件夹中，快捷键 ctrl+L将焦点锁定地址栏，这样完全不需要鼠标，听起来有点geek了。</p>
<p>除此之外，通过自己建立注册表，也可以实现类似powershell的右键打开方式，具体方法参考<a href="https://github.com/microsoft/terminal/issues/1060">这个issue</a></p>
<p>由于我本人更喜欢地址栏打开方式，右键打开的配置就不赘述了，通过上述链接查看即可。</p>
]]></content>
      <categories>
        <category>Windows环境配置</category>
      </categories>
      <tags>
        <tag>Windows terminal</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub上传项目文件</title>
    <url>/2020/09/15/GitHub%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="在GitHub上，上传项目文件"><a href="#在GitHub上，上传项目文件" class="headerlink" title="在GitHub上，上传项目文件"></a>在GitHub上，上传项目文件</h1><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>新建仓库</li>
<li>将仓库下载到本地</li>
<li>把要上传的项目文件夹，放进下载的仓库文件夹中</li>
<li>使用以下代码push到GitHub：</li>
</ol>
<h2 id=""><a href="#" class="headerlink" title=""></a><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .        </span><br><span class="line">git commit  -m  &quot;提交信息&quot;  </span><br><span class="line">git push -u origin master   </span><br></pre></td></tr></table></figure></h2><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>对于体积较大的项目文件，可能会遇到如下错误：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fatal: the remote end hung up unexpectedly Everything up-to-date</span><br></pre></td></tr></table></figure>
<p><strong>错误原因</strong>：</p>
<p>文件太大</p>
<p><strong>解决办法</strong> :</p>
<blockquote>
<p>转载自<a href="https://blog.csdn.net/qq_21770005/article/details/78733008">https://blog.csdn.net/qq_21770005/article/details/78733008</a></p>
</blockquote>
<ul>
<li>windows:</li>
</ul>
<p>在 .git/config 文件中加入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[http]</span><br><span class="line">postBuffer &#x3D; 524288000</span><br></pre></td></tr></table></figure>
<ul>
<li>linux:</li>
</ul>
<p>在 .git/config 文件中加入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">linux:</span><br><span class="line">git config http.postBuffer 524288000</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>奇淫技巧</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Aruco实现AR梳理_1</title>
    <url>/2020/09/14/Aruco%E5%AE%9E%E7%8E%B0AR%E6%A2%B3%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Aruco-AR过程梳理-1"><a href="#Aruco-AR过程梳理-1" class="headerlink" title="Aruco AR过程梳理_1"></a>Aruco AR过程梳理_1</h1><hr>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><strong>目的</strong>：在<em>VS2019</em>运行的<em>OpenGL</em>窗口上，<em>generated virtual computer generated 3D graphics on the realistic environment , i.e.</em> 在<em>OpenGL</em>的相机位置看到<em>AR</em>效果</p>
<p><strong>思路</strong>：</p>
<p><strong>OpenGL的世界中有虚拟相机，现实世界中有真实相机，只要将两个世界的世界坐标重合，相机位置重合，分别渲染虚拟模型与真实场景，即可达到AR效果</strong></p>
<ul>
<li>生成<em>OpenGL</em>窗口</li>
<li>将外部相机捕获的<em>frame</em>传递到<em>OpenGL</em>中，作为背景</li>
<li>定义虚拟的三维物体，将其渲染</li>
<li>相机捕获的背景，不需要透视变换，正交变换即可</li>
<li><p>虚拟物体，需要<em>MVP（model transform, view transform, projection transform）</em>变换</p>
</li>
<li><p>世界坐标系重合，使用OpenCV去做</p>
</li>
</ul>
<hr>
<h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>两个世界的世界坐标系要完全重合，相机位置完全重合</p>
<blockquote>
<p>OpenGL中的世界坐标与虚拟物体局部坐标系的变换为Model Transform，世界坐标系与相机坐标系之间的变换为View Transform；</p>
<p>OpenCV中的aruco，将世界坐标系注册在marker上；<strong>Model Transform 保持不变（即虚拟物体的位置保持不变）</strong> </p>
</blockquote>
<p><em>OpenGL</em> 的摄像机需要实时改变自身位置与姿态，数据来自于<em>opencv</em> 相机标定<del>外参</del> </p>
<blockquote>
<p>相机标定完成后，得到的是相机内参与畸变参数，对于特定的相机来说，都是不变量，因此，相机标定只需要一次即可</p>
<p><strong>通过aruco的marker，获得相机的外参（重点），并实时传入OpenGL的View Transform矩阵</strong> </p>
<blockquote>
<p>用 aruco 的 marker 检测相机位姿时，是从marker坐标系（marker中心）到相机坐标系的一个三维变换矩阵</p>
</blockquote>
<p><strong>相机内参的作用：用来构造Projection Transform</strong> </p>
</blockquote>
<p><em>OpenGL</em> 中的背景图也需要实时改变</p>
<blockquote>
<p>将OpenCV捕获的图像，实时正交投影至背景</p>
</blockquote>
<hr>
<h2 id="遗留问题"><a href="#遗留问题" class="headerlink" title="遗留问题"></a>遗留问题</h2><ul>
<li><p>虚拟模型没有出现在规定的世界原点处；</p>
</li>
<li><p><del>如何将三维模型直接导入OpenGL，而不是一个一个的定义顶点坐标</del> </p>
<blockquote>
<p>解决方法：导入Assimp库，Assimp能够导入很多种不同的模型文件格式（并也能够导出部分的格式），它会将所有的模型数据加载至Assimp的通用数据结构中。当Assimp加载完模型之后，我们就能够从Assimp的数据结构中提取我们所需的所有数据了</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200913163957.png" alt=""></p>
]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>Aruco</tag>
      </tags>
  </entry>
  <entry>
    <title>ArucoDemo-2</title>
    <url>/2020/08/23/ArucoDemo-2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>参考链接：</p>
<p><a href="https://blog.csdn.net/qq_33446100/article/details/95796560">https://blog.csdn.net/qq_33446100/article/details/95796560</a></p>
</blockquote>
<a id="more"></a>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\imgproc.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawCubeWireframe</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	cv::InputOutputArray image, cv::InputArray cameraMatrix,</span></span></span><br><span class="line"><span class="function"><span class="params">	cv::InputArray distCoeffs, cv::InputArray rvec, cv::InputArray tvec,</span></span></span><br><span class="line"><span class="function"><span class="params">	<span class="keyword">float</span> l</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> wait_time = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">float</span> actual_marker_l = <span class="number">0.101</span>; <span class="comment">// this should be in meters</span></span><br><span class="line"></span><br><span class="line">	<span class="function">VideoWriter <span class="title">writer</span><span class="params">(<span class="string">&quot;VideoTest.avi&quot;</span>, VideoWriter::fourcc(<span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;G&#x27;</span>), <span class="number">20.0</span>, Size(<span class="number">640</span>, <span class="number">480</span>))</span></span>;</span><br><span class="line"></span><br><span class="line">	cv::Mat image, image_copy;</span><br><span class="line">	cv::Mat camera_matrix, dist_coeffs;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">ostringstream</span> vector_to_marker;</span><br><span class="line"></span><br><span class="line">	cv::VideoCapture in_video;</span><br><span class="line">	in_video.open(<span class="number">0</span>);</span><br><span class="line">	cv::Ptr&lt;cv::aruco::Dictionary&gt; dictionary =</span><br><span class="line">		cv::aruco::getPredefinedDictionary(aruco::PREDEFINED_DICTIONARY_NAME(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">	<span class="function">cv::FileStorage <span class="title">fs</span><span class="params">(<span class="string">&quot;camera.yml&quot;</span>, cv::FileStorage::READ)</span></span>;</span><br><span class="line"></span><br><span class="line">	fs[<span class="string">&quot;camera_matrix&quot;</span>] &gt;&gt; camera_matrix;</span><br><span class="line">	fs[<span class="string">&quot;distortion_coefficients&quot;</span>] &gt;&gt; dist_coeffs;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;camera_matrix\n&quot;</span></span><br><span class="line">		&lt;&lt; camera_matrix &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\ndist coeffs\n&quot;</span></span><br><span class="line">		&lt;&lt; dist_coeffs &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> frame_width = <span class="number">480</span>;</span><br><span class="line">	<span class="keyword">int</span> frame_height = <span class="number">640</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (in_video.grab())</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		in_video.retrieve(image);</span><br><span class="line">		image.copyTo(image_copy);</span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ids;</span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Point2f&gt;&gt; corners;</span><br><span class="line">		cv::aruco::detectMarkers(image, dictionary, corners, ids);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// if at least one marker detected</span></span><br><span class="line">		<span class="keyword">if</span> (ids.size() &gt; <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			cv::aruco::drawDetectedMarkers(image_copy, corners, ids);</span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Vec3d&gt; rvecs, tvecs;</span><br><span class="line">			cv::aruco::estimatePoseSingleMarkers(</span><br><span class="line">				corners, actual_marker_l, camera_matrix, dist_coeffs,</span><br><span class="line">				rvecs, tvecs</span><br><span class="line">			);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// draw axis for each marker</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ids.size(); i++)</span><br><span class="line">			&#123;</span><br><span class="line">				drawCubeWireframe(</span><br><span class="line">					image_copy, camera_matrix, dist_coeffs, rvecs[i], tvecs[i],</span><br><span class="line">					actual_marker_l</span><br><span class="line">				);</span><br><span class="line"></span><br><span class="line">				vector_to_marker.str(<span class="built_in">std</span>::<span class="built_in">string</span>());</span><br><span class="line">				vector_to_marker &lt;&lt; <span class="built_in">std</span>::setprecision(<span class="number">4</span>)</span><br><span class="line">					&lt;&lt; <span class="string">&quot;x: &quot;</span> &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">8</span>) &lt;&lt; tvecs[<span class="number">0</span>](<span class="number">0</span>);</span><br><span class="line">				cv::putText(image_copy, vector_to_marker.str(),</span><br><span class="line">					Point(<span class="number">10</span>, <span class="number">30</span>), cv::FONT_HERSHEY_SIMPLEX, <span class="number">0.6</span>,</span><br><span class="line">					Scalar(<span class="number">0</span>, <span class="number">252</span>, <span class="number">124</span>), <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">				vector_to_marker.str(<span class="built_in">std</span>::<span class="built_in">string</span>());</span><br><span class="line">				vector_to_marker &lt;&lt; <span class="built_in">std</span>::setprecision(<span class="number">4</span>)</span><br><span class="line">					&lt;&lt; <span class="string">&quot;y: &quot;</span> &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">8</span>) &lt;&lt; tvecs[<span class="number">0</span>](<span class="number">1</span>);</span><br><span class="line">				cv::putText(image_copy, vector_to_marker.str(),</span><br><span class="line">					Point(<span class="number">10</span>, <span class="number">50</span>), cv::FONT_HERSHEY_SIMPLEX, <span class="number">0.6</span>,</span><br><span class="line">					Scalar(<span class="number">0</span>, <span class="number">252</span>, <span class="number">124</span>), <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">				vector_to_marker.str(<span class="built_in">std</span>::<span class="built_in">string</span>());</span><br><span class="line">				vector_to_marker &lt;&lt; <span class="built_in">std</span>::setprecision(<span class="number">4</span>)</span><br><span class="line">					&lt;&lt; <span class="string">&quot;z: &quot;</span> &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">8</span>) &lt;&lt; tvecs[<span class="number">0</span>](<span class="number">2</span>);</span><br><span class="line">				cv::putText(image_copy, vector_to_marker.str(),</span><br><span class="line">					Point(<span class="number">10</span>, <span class="number">70</span>), cv::FONT_HERSHEY_SIMPLEX, <span class="number">0.6</span>,</span><br><span class="line">					Scalar(<span class="number">0</span>, <span class="number">252</span>, <span class="number">124</span>), <span class="number">1</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		cv::imshow(<span class="string">&quot;Pose estimation&quot;</span>, image_copy);</span><br><span class="line"></span><br><span class="line">		writer &lt;&lt; image_copy;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">char</span> key = (<span class="keyword">char</span>)cv::waitKey(wait_time);</span><br><span class="line">		<span class="keyword">if</span> (key == <span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawCubeWireframe</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	cv::InputOutputArray image, cv::InputArray cameraMatrix,</span></span></span><br><span class="line"><span class="function"><span class="params">	cv::InputArray distCoeffs, cv::InputArray rvec, cv::InputArray tvec,</span></span></span><br><span class="line"><span class="function"><span class="params">	<span class="keyword">float</span> l</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">	CV_Assert(</span><br><span class="line">		image.getMat().total() != <span class="number">0</span> &amp;&amp;</span><br><span class="line">		(image.getMat().channels() == <span class="number">1</span> || image.getMat().channels() == <span class="number">3</span>)</span><br><span class="line">	);</span><br><span class="line">	CV_Assert(l &gt; <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">float</span> half_l = l / <span class="number">2.0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// project cube points</span></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Point3f&gt; axisPoints;</span><br><span class="line">	axisPoints.push_back(cv::Point3f(half_l, half_l, l));</span><br><span class="line">	axisPoints.push_back(cv::Point3f(half_l, -half_l, l));</span><br><span class="line">	axisPoints.push_back(cv::Point3f(-half_l, -half_l, l));</span><br><span class="line">	axisPoints.push_back(cv::Point3f(-half_l, half_l, l));</span><br><span class="line">	axisPoints.push_back(cv::Point3f(half_l, half_l, <span class="number">0</span>));</span><br><span class="line">	axisPoints.push_back(cv::Point3f(half_l, -half_l, <span class="number">0</span>));</span><br><span class="line">	axisPoints.push_back(cv::Point3f(-half_l, -half_l, <span class="number">0</span>));</span><br><span class="line">	axisPoints.push_back(cv::Point3f(-half_l, half_l, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Point2f&gt; imagePoints;</span><br><span class="line">	projectPoints(</span><br><span class="line">		axisPoints, rvec, tvec, cameraMatrix, distCoeffs, imagePoints</span><br><span class="line">	);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// draw cube edges lines</span></span><br><span class="line">	cv::line(image, imagePoints[<span class="number">0</span>], imagePoints[<span class="number">1</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">	cv::line(image, imagePoints[<span class="number">0</span>], imagePoints[<span class="number">3</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">	cv::line(image, imagePoints[<span class="number">0</span>], imagePoints[<span class="number">4</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">	cv::line(image, imagePoints[<span class="number">1</span>], imagePoints[<span class="number">2</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">	cv::line(image, imagePoints[<span class="number">1</span>], imagePoints[<span class="number">5</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">	cv::line(image, imagePoints[<span class="number">2</span>], imagePoints[<span class="number">3</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">	cv::line(image, imagePoints[<span class="number">2</span>], imagePoints[<span class="number">6</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">	cv::line(image, imagePoints[<span class="number">3</span>], imagePoints[<span class="number">7</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">	cv::line(image, imagePoints[<span class="number">4</span>], imagePoints[<span class="number">5</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">	cv::line(image, imagePoints[<span class="number">4</span>], imagePoints[<span class="number">7</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">	cv::line(image, imagePoints[<span class="number">5</span>], imagePoints[<span class="number">6</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">	cv::line(image, imagePoints[<span class="number">6</span>], imagePoints[<span class="number">7</span>], cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200823075820.png" alt=""></p>
]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>Aruco</tag>
      </tags>
  </entry>
  <entry>
    <title> Aruco Demo_1</title>
    <url>/2020/08/22/Aruco-Demo-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>参考链接：</p>
<p><a href="https://blog.csdn.net/qq_33446100/article/details/89209901">https://blog.csdn.net/qq_33446100/article/details/89209901</a></p>
</blockquote>
<a id="more"></a>
<h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>Aruco Demo_1 是在<strong>board</strong>板上显示图片，在相机标定的基础上完成</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\highgui.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\videoio.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco\dictionary.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco\charuco.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\imgproc\imgproc.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv::aruco;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WINDOW_NAME <span class="meta-string">&quot;ARDemo&quot;</span></span></span><br><span class="line"></span><br><span class="line">Mat camMatrix, distCoeffs, srcImage;</span><br><span class="line"><span class="keyword">float</span> markerLength = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">readCameraParameters</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; filename, Mat&amp; camMatrix, Mat&amp; distCoeffs)</span> </span>&#123;</span><br><span class="line">	<span class="function">FileStorage <span class="title">fs</span><span class="params">(filename, FileStorage::READ)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (!fs.isOpened())</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">	fs[<span class="string">&quot;camera_matrix&quot;</span>] &gt;&gt; camMatrix;</span><br><span class="line">	fs[<span class="string">&quot;distortion_coefficients&quot;</span>] &gt;&gt; distCoeffs;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw_image</span><span class="params">(Mat image, Mat&amp; frame, Vec3d&amp; rvec, Vec3d&amp; tvec)</span> </span>&#123;</span><br><span class="line">	<span class="built_in">vector</span>&lt;Point3f&gt; points;</span><br><span class="line">	<span class="built_in">vector</span>&lt;Point2f&gt; imagePoints;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> l = markerLength * <span class="number">0.5f</span>;</span><br><span class="line"></span><br><span class="line">	points.emplace_back(-l, l, <span class="number">0</span>);<span class="comment">//确定每个marker对应的坐标系中四个顶点的位置</span></span><br><span class="line">	points.emplace_back(l, l, <span class="number">0</span>);<span class="comment">//这个坐标是上一篇中绘制出来的坐标轴中对应的坐标</span></span><br><span class="line">	points.emplace_back(l, -l, <span class="number">0</span>);</span><br><span class="line">	points.emplace_back(-l, -l, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//通过相机内参、外参将3d坐标映射到图像坐标系</span></span><br><span class="line">	cv::projectPoints(points, rvec, tvec, camMatrix, distCoeffs, imagePoints);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">int</span> x = (<span class="keyword">unsigned</span> <span class="keyword">int</span>)imagePoints[<span class="number">0</span>].x;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">int</span> y = (<span class="keyword">unsigned</span> <span class="keyword">int</span>)imagePoints[<span class="number">0</span>].y;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;Point2f&gt; corners;</span><br><span class="line">	corners.emplace_back(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	corners.emplace_back(image.cols, <span class="number">0</span>);</span><br><span class="line">	corners.emplace_back(image.cols, image.rows);</span><br><span class="line">	corners.emplace_back(<span class="number">0</span>, image.rows);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//从四对对应点计算透视变换</span></span><br><span class="line">	cv::Mat T = getPerspectiveTransform(corners, imagePoints);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//将透视变换应用于image</span></span><br><span class="line">	Mat warpedImg;</span><br><span class="line">	cv::warpPerspective(image, warpedImg, T, frame.size());</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;Point2i&gt; pts;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">auto</span> i : imagePoints) &#123;</span><br><span class="line">		pts.emplace_back((<span class="keyword">int</span>)i.x, (<span class="keyword">int</span>)i.y);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//用全0填充凸多边形</span></span><br><span class="line">	cv::fillConvexPoly(frame, pts, cv::Scalar::all(<span class="number">0</span>), cv::LINE_AA);</span><br><span class="line">	<span class="comment">//或运算</span></span><br><span class="line">	cv::bitwise_or(warpedImg, frame, frame);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*cout &lt;&lt; points &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; imagePoints &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; corners &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; pts &lt;&lt; endl;*/</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	[-50, 50, 0;</span></span><br><span class="line"><span class="comment">	 50, 50, 0;</span></span><br><span class="line"><span class="comment">	 50, -50, 0;</span></span><br><span class="line"><span class="comment">	 -50, -50, 0]</span></span><br><span class="line"><span class="comment">	[98.558197, 147.89699;</span></span><br><span class="line"><span class="comment">	 131.39151, 168.23427;</span></span><br><span class="line"><span class="comment">	 108.73455, 203.80612;</span></span><br><span class="line"><span class="comment">	 75.317993, 184.06393]</span></span><br><span class="line"><span class="comment">	[0, 0;</span></span><br><span class="line"><span class="comment">	 100, 0;</span></span><br><span class="line"><span class="comment">	 100, 100;</span></span><br><span class="line"><span class="comment">	 0, 100]</span></span><br><span class="line"><span class="comment">	[98, 147;</span></span><br><span class="line"><span class="comment">	 131, 168;</span></span><br><span class="line"><span class="comment">	 108, 203;</span></span><br><span class="line"><span class="comment">	 75, 184]</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//waitKey();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function">VideoCapture <span class="title">inputVideo</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="comment">//VideoWriter writer(&quot;VideoTest.avi&quot;, VideoWriter::fourcc(&#x27;M&#x27;, &#x27;J&#x27;, &#x27;P&#x27;, &#x27;G&#x27;), 25.0, Size(640, 480));</span></span><br><span class="line"></span><br><span class="line">	Ptr&lt;aruco::Dictionary&gt; dictionary =</span><br><span class="line">		aruco::getPredefinedDictionary(cv::aruco::DICT_4X4_50);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">bool</span> readOk = readCameraParameters(<span class="string">&quot;camera.yml&quot;</span>, camMatrix, distCoeffs);</span><br><span class="line">	<span class="keyword">if</span> (!readOk) &#123;</span><br><span class="line">		<span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;Invalid camera file&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; camMatrix &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; distCoeffs &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	srcImage = imread(<span class="string">&quot;image.png&quot;</span>);</span><br><span class="line">	resize(srcImage, srcImage, Size(<span class="number">100</span>, <span class="number">100</span>));</span><br><span class="line"></span><br><span class="line">	namedWindow(WINDOW_NAME);</span><br><span class="line"></span><br><span class="line">	Mat frame;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (inputVideo.grab()) &#123;</span><br><span class="line">		inputVideo &gt;&gt; frame;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ids;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;Point2f&gt;&gt; corners;</span><br><span class="line"></span><br><span class="line">		aruco::detectMarkers(frame, dictionary, corners, ids);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (ids.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="built_in">vector</span>&lt; Vec3d &gt; rvecs, tvecs;<span class="comment">//得到旋转矢量以及平移矢量</span></span><br><span class="line">			cv::aruco::estimatePoseSingleMarkers(corners, <span class="number">100</span>, camMatrix, distCoeffs, rvecs, tvecs);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ids.size(); i++) &#123;</span><br><span class="line">				draw_image(srcImage, frame, rvecs[i], tvecs[i]);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="comment">//writer &lt;&lt; frame;</span></span><br><span class="line">		&#125;</span><br><span class="line">		cv::imshow(WINDOW_NAME, frame);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">char</span> key = (<span class="keyword">char</span>)waitKey(<span class="number">10</span>);</span><br><span class="line">		<span class="keyword">if</span> (key == <span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	inputVideo.release();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200822193805.png" alt=""></p>
]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>Aruco</tag>
      </tags>
  </entry>
  <entry>
    <title> Aruco 相机标定</title>
    <url>/2020/08/22/Aruco-%E7%9B%B8%E6%9C%BA%E6%A0%87%E5%AE%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><blockquote>
<p>参考链接：</p>
<p><a href="https://blog.csdn.net/qq_33446100/article/details/89192005">https://blog.csdn.net/qq_33446100/article/details/89192005</a></p>
<p><a href="https://mp.weixin.qq.com/s/BT7V4de8p8tpJEcV7acwHA">https://mp.weixin.qq.com/s/BT7V4de8p8tpJEcV7acwHA</a></p>
</blockquote>
<a id="more"></a>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Azure Kinect 相机；</p>
<h2 id="步骤一：生成ChAruco-Aruco标定板"><a href="#步骤一：生成ChAruco-Aruco标定板" class="headerlink" title="步骤一：生成ChAruco(Aruco标定板)"></a>步骤一：生成ChAruco(Aruco标定板)</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">By downloading, copying, installing or using the software you agree to this</span></span><br><span class="line"><span class="comment">license. If you do not agree to this license, do not download, install,</span></span><br><span class="line"><span class="comment">copy or use the software.</span></span><br><span class="line"><span class="comment">                          License Agreement</span></span><br><span class="line"><span class="comment">               For Open Source Computer Vision Library</span></span><br><span class="line"><span class="comment">                       (3-clause BSD License)</span></span><br><span class="line"><span class="comment">Copyright (C) 2013, OpenCV Foundation, all rights reserved.</span></span><br><span class="line"><span class="comment">Third party copyrights are property of their respective owners.</span></span><br><span class="line"><span class="comment">Redistribution and use in source and binary forms, with or without modification,</span></span><br><span class="line"><span class="comment">are permitted provided that the following conditions are met:</span></span><br><span class="line"><span class="comment">  * Redistributions of source code must retain the above copyright notice,</span></span><br><span class="line"><span class="comment">    this list of conditions and the following disclaimer.</span></span><br><span class="line"><span class="comment">  * Redistributions in binary form must reproduce the above copyright notice,</span></span><br><span class="line"><span class="comment">    this list of conditions and the following disclaimer in the documentation</span></span><br><span class="line"><span class="comment">    and/or other materials provided with the distribution.</span></span><br><span class="line"><span class="comment">  * Neither the names of the copyright holders nor the names of the contributors</span></span><br><span class="line"><span class="comment">    may be used to endorse or promote products derived from this software</span></span><br><span class="line"><span class="comment">    without specific prior written permission.</span></span><br><span class="line"><span class="comment">This software is provided by the copyright holders and contributors &quot;as is&quot; and</span></span><br><span class="line"><span class="comment">any express or implied warranties, including, but not limited to, the implied</span></span><br><span class="line"><span class="comment">warranties of merchantability and fitness for a particular purpose are</span></span><br><span class="line"><span class="comment">disclaimed. In no event shall copyright holders or contributors be liable for</span></span><br><span class="line"><span class="comment">any direct, indirect, incidental, special, exemplary, or consequential damages</span></span><br><span class="line"><span class="comment">(including, but not limited to, procurement of substitute goods or services;</span></span><br><span class="line"><span class="comment">loss of use, data, or profits; or business interruption) however caused</span></span><br><span class="line"><span class="comment">and on any theory of liability, whether in contract, strict liability,</span></span><br><span class="line"><span class="comment">or tort (including negligence or otherwise) arising in any way out of</span></span><br><span class="line"><span class="comment">the use of this software, even if advised of the possibility of such damage.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/highgui.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/aruco/charuco.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* about = <span class="string">&quot;Create a ChArUco board image&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* keys =</span><br><span class="line">        <span class="string">&quot;&#123;@outfile |&lt;none&gt; | Output image &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;w        |       | Number of squares in X direction &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;h        |       | Number of squares in Y direction &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;sl       |       | Square side length (in pixels) &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;ml       |       | Marker side length (in pixels) &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;d        |       | dictionary: DICT_4X4_50=0, DICT_4X4_100=1, DICT_4X4_250=2,&quot;</span></span><br><span class="line">        <span class="string">&quot;DICT_4X4_1000=3, DICT_5X5_50=4, DICT_5X5_100=5, DICT_5X5_250=6, DICT_5X5_1000=7, &quot;</span></span><br><span class="line">        <span class="string">&quot;DICT_6X6_50=8, DICT_6X6_100=9, DICT_6X6_250=10, DICT_6X6_1000=11, DICT_7X7_50=12,&quot;</span></span><br><span class="line">        <span class="string">&quot;DICT_7X7_100=13, DICT_7X7_250=14, DICT_7X7_1000=15, DICT_ARUCO_ORIGINAL = 16&#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;m        |       | Margins size (in pixels). Default is (squareLength-markerLength) &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;bb       | 1     | Number of bits in marker borders &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;si       | false | show generated image &#125;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="function">CommandLineParser <span class="title">parser</span><span class="params">(argc, argv, keys)</span></span>;</span><br><span class="line">    parser.about(about);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (argc &lt; <span class="number">7</span>) &#123;</span><br><span class="line">        parser.printMessage();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> squaresX = parser.get&lt;<span class="keyword">int</span>&gt;(<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> squaresY = parser.get&lt;<span class="keyword">int</span>&gt;(<span class="string">&quot;h&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> squareLength = parser.get&lt;<span class="keyword">int</span>&gt;(<span class="string">&quot;sl&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> markerLength = parser.get&lt;<span class="keyword">int</span>&gt;(<span class="string">&quot;ml&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> dictionaryId = parser.get&lt;<span class="keyword">int</span>&gt;(<span class="string">&quot;d&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> margins = squareLength - markerLength;</span><br><span class="line">    <span class="keyword">if</span> (parser.has(<span class="string">&quot;m&quot;</span>)) &#123;</span><br><span class="line">        margins = parser.get&lt;<span class="keyword">int</span>&gt;(<span class="string">&quot;m&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> borderBits = parser.get&lt;<span class="keyword">int</span>&gt;(<span class="string">&quot;bb&quot;</span>);</span><br><span class="line">    <span class="keyword">bool</span> showImage = parser.get&lt;<span class="keyword">bool</span>&gt;(<span class="string">&quot;si&quot;</span>);</span><br><span class="line"></span><br><span class="line">    String out = parser.get&lt;String&gt;(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!parser.check()) &#123;</span><br><span class="line">        parser.printErrors();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Ptr&lt;aruco::Dictionary&gt; dictionary =</span><br><span class="line">        aruco::getPredefinedDictionary(aruco::PREDEFINED_DICTIONARY_NAME(dictionaryId));</span><br><span class="line"></span><br><span class="line">    Size imageSize;</span><br><span class="line">    imageSize.width = squaresX * squareLength + <span class="number">2</span> * margins;</span><br><span class="line">    imageSize.height = squaresY * squareLength + <span class="number">2</span> * margins;</span><br><span class="line"></span><br><span class="line">    Ptr&lt;aruco::CharucoBoard&gt; board = aruco::CharucoBoard::create(squaresX, squaresY, (<span class="keyword">float</span>)squareLength,</span><br><span class="line">        (<span class="keyword">float</span>)markerLength, dictionary);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// show created board</span></span><br><span class="line">    Mat boardImage;</span><br><span class="line">    board-&gt;draw(imageSize, boardImage, margins, borderBits);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (showImage) &#123;</span><br><span class="line">        imshow(<span class="string">&quot;board&quot;</span>, boardImage);</span><br><span class="line">        waitKey(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    imwrite(out, boardImage);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>使用Visual Studio要在属性中添加以下参数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;chboard.png&quot; -w&#x3D;5 -h&#x3D;7 -sl&#x3D;200 -ml&#x3D;120 -d&#x3D;10</span><br></pre></td></tr></table></figure>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p>在源代码目录生成<strong>chboard.png</strong>图片，如下图所示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200822174733.png" alt=""></p>
<h2 id="步骤二：相机标定"><a href="#步骤二：相机标定" class="headerlink" title="步骤二：相机标定"></a>步骤二：相机标定</h2><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">By downloading, copying, installing or using the software you agree to this</span></span><br><span class="line"><span class="comment">license. If you do not agree to this license, do not download, install,</span></span><br><span class="line"><span class="comment">copy or use the software.</span></span><br><span class="line"><span class="comment">                          License Agreement</span></span><br><span class="line"><span class="comment">               For Open Source Computer Vision Library</span></span><br><span class="line"><span class="comment">                       (3-clause BSD License)</span></span><br><span class="line"><span class="comment">Copyright (C) 2013, OpenCV Foundation, all rights reserved.</span></span><br><span class="line"><span class="comment">Third party copyrights are property of their respective owners.</span></span><br><span class="line"><span class="comment">Redistribution and use in source and binary forms, with or without modification,</span></span><br><span class="line"><span class="comment">are permitted provided that the following conditions are met:</span></span><br><span class="line"><span class="comment">  * Redistributions of source code must retain the above copyright notice,</span></span><br><span class="line"><span class="comment">    this list of conditions and the following disclaimer.</span></span><br><span class="line"><span class="comment">  * Redistributions in binary form must reproduce the above copyright notice,</span></span><br><span class="line"><span class="comment">    this list of conditions and the following disclaimer in the documentation</span></span><br><span class="line"><span class="comment">    and/or other materials provided with the distribution.</span></span><br><span class="line"><span class="comment">  * Neither the names of the copyright holders nor the names of the contributors</span></span><br><span class="line"><span class="comment">    may be used to endorse or promote products derived from this software</span></span><br><span class="line"><span class="comment">    without specific prior written permission.</span></span><br><span class="line"><span class="comment">This software is provided by the copyright holders and contributors &quot;as is&quot; and</span></span><br><span class="line"><span class="comment">any express or implied warranties, including, but not limited to, the implied</span></span><br><span class="line"><span class="comment">warranties of merchantability and fitness for a particular purpose are</span></span><br><span class="line"><span class="comment">disclaimed. In no event shall copyright holders or contributors be liable for</span></span><br><span class="line"><span class="comment">any direct, indirect, incidental, special, exemplary, or consequential damages</span></span><br><span class="line"><span class="comment">(including, but not limited to, procurement of substitute goods or services;</span></span><br><span class="line"><span class="comment">loss of use, data, or profits; or business interruption) however caused</span></span><br><span class="line"><span class="comment">and on any theory of liability, whether in contract, strict liability,</span></span><br><span class="line"><span class="comment">or tort (including negligence or otherwise) arising in any way out of</span></span><br><span class="line"><span class="comment">the use of this software, even if advised of the possibility of such damage.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/highgui.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/calib3d.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/aruco/charuco.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/imgproc.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* about =</span><br><span class="line">        <span class="string">&quot;Calibration using a ChArUco board\n&quot;</span></span><br><span class="line">        <span class="string">&quot;  To capture a frame for calibration, press &#x27;c&#x27;,\n&quot;</span></span><br><span class="line">        <span class="string">&quot;  If input comes from video, press any key for next frame\n&quot;</span></span><br><span class="line">        <span class="string">&quot;  To finish capturing, press &#x27;ESC&#x27; key and calibration starts.\n&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* keys =</span><br><span class="line">        <span class="string">&quot;&#123;w        |       | Number of squares in X direction &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;h        |       | Number of squares in Y direction &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;sl       |       | Square side length (in meters) &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;ml       |       | Marker side length (in meters) &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;d        |       | dictionary: DICT_4X4_50=0, DICT_4X4_100=1, DICT_4X4_250=2,&quot;</span></span><br><span class="line">        <span class="string">&quot;DICT_4X4_1000=3, DICT_5X5_50=4, DICT_5X5_100=5, DICT_5X5_250=6, DICT_5X5_1000=7, &quot;</span></span><br><span class="line">        <span class="string">&quot;DICT_6X6_50=8, DICT_6X6_100=9, DICT_6X6_250=10, DICT_6X6_1000=11, DICT_7X7_50=12,&quot;</span></span><br><span class="line">        <span class="string">&quot;DICT_7X7_100=13, DICT_7X7_250=14, DICT_7X7_1000=15, DICT_ARUCO_ORIGINAL = 16&#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;@outfile |&lt;none&gt; | Output file with calibrated camera parameters &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;v        |       | Input from video file, if ommited, input comes from camera &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;ci       | 0     | Camera id if input doesnt come from video (-v) &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;dp       |       | File of marker detector parameters &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;rs       | false | Apply refind strategy &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;zt       | false | Assume zero tangential distortion &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;a        |       | Fix aspect ratio (fx/fy) to this value &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;pc       | false | Fix the principal point at the center &#125;&quot;</span></span><br><span class="line">        <span class="string">&quot;&#123;sc       | false | Show detected chessboard corners after calibration &#125;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">readDetectorParameters</span><span class="params">(<span class="built_in">string</span> filename, Ptr&lt;aruco::DetectorParameters&gt;&amp; params)</span> </span>&#123;</span><br><span class="line">    <span class="function">FileStorage <span class="title">fs</span><span class="params">(filename, FileStorage::READ)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!fs.isOpened())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    fs[<span class="string">&quot;adaptiveThreshWinSizeMin&quot;</span>] &gt;&gt; params-&gt;adaptiveThreshWinSizeMin;</span><br><span class="line">    fs[<span class="string">&quot;adaptiveThreshWinSizeMax&quot;</span>] &gt;&gt; params-&gt;adaptiveThreshWinSizeMax;</span><br><span class="line">    fs[<span class="string">&quot;adaptiveThreshWinSizeStep&quot;</span>] &gt;&gt; params-&gt;adaptiveThreshWinSizeStep;</span><br><span class="line">    fs[<span class="string">&quot;adaptiveThreshConstant&quot;</span>] &gt;&gt; params-&gt;adaptiveThreshConstant;</span><br><span class="line">    fs[<span class="string">&quot;minMarkerPerimeterRate&quot;</span>] &gt;&gt; params-&gt;minMarkerPerimeterRate;</span><br><span class="line">    fs[<span class="string">&quot;maxMarkerPerimeterRate&quot;</span>] &gt;&gt; params-&gt;maxMarkerPerimeterRate;</span><br><span class="line">    fs[<span class="string">&quot;polygonalApproxAccuracyRate&quot;</span>] &gt;&gt; params-&gt;polygonalApproxAccuracyRate;</span><br><span class="line">    fs[<span class="string">&quot;minCornerDistanceRate&quot;</span>] &gt;&gt; params-&gt;minCornerDistanceRate;</span><br><span class="line">    fs[<span class="string">&quot;minDistanceToBorder&quot;</span>] &gt;&gt; params-&gt;minDistanceToBorder;</span><br><span class="line">    fs[<span class="string">&quot;minMarkerDistanceRate&quot;</span>] &gt;&gt; params-&gt;minMarkerDistanceRate;</span><br><span class="line">    fs[<span class="string">&quot;cornerRefinementMethod&quot;</span>] &gt;&gt; params-&gt;cornerRefinementMethod;</span><br><span class="line">    fs[<span class="string">&quot;cornerRefinementWinSize&quot;</span>] &gt;&gt; params-&gt;cornerRefinementWinSize;</span><br><span class="line">    fs[<span class="string">&quot;cornerRefinementMaxIterations&quot;</span>] &gt;&gt; params-&gt;cornerRefinementMaxIterations;</span><br><span class="line">    fs[<span class="string">&quot;cornerRefinementMinAccuracy&quot;</span>] &gt;&gt; params-&gt;cornerRefinementMinAccuracy;</span><br><span class="line">    fs[<span class="string">&quot;markerBorderBits&quot;</span>] &gt;&gt; params-&gt;markerBorderBits;</span><br><span class="line">    fs[<span class="string">&quot;perspectiveRemovePixelPerCell&quot;</span>] &gt;&gt; params-&gt;perspectiveRemovePixelPerCell;</span><br><span class="line">    fs[<span class="string">&quot;perspectiveRemoveIgnoredMarginPerCell&quot;</span>] &gt;&gt; params-&gt;perspectiveRemoveIgnoredMarginPerCell;</span><br><span class="line">    fs[<span class="string">&quot;maxErroneousBitsInBorderRate&quot;</span>] &gt;&gt; params-&gt;maxErroneousBitsInBorderRate;</span><br><span class="line">    fs[<span class="string">&quot;minOtsuStdDev&quot;</span>] &gt;&gt; params-&gt;minOtsuStdDev;</span><br><span class="line">    fs[<span class="string">&quot;errorCorrectionRate&quot;</span>] &gt;&gt; params-&gt;errorCorrectionRate;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">saveCameraParams</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; filename, Size imageSize, <span class="keyword">float</span> aspectRatio, <span class="keyword">int</span> flags,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">const</span> Mat&amp; cameraMatrix, <span class="keyword">const</span> Mat&amp; distCoeffs, <span class="keyword">double</span> totalAvgErr)</span> </span>&#123;</span><br><span class="line">    <span class="function">FileStorage <span class="title">fs</span><span class="params">(filename, FileStorage::WRITE)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!fs.isOpened())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">time_t</span> tt;</span><br><span class="line">    time(&amp;tt);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tm</span>* <span class="title">t2</span> =</span> localtime(&amp;tt);</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">    strftime(buf, <span class="keyword">sizeof</span>(buf) - <span class="number">1</span>, <span class="string">&quot;%c&quot;</span>, t2);</span><br><span class="line"></span><br><span class="line">    fs &lt;&lt; <span class="string">&quot;calibration_time&quot;</span> &lt;&lt; buf;</span><br><span class="line"></span><br><span class="line">    fs &lt;&lt; <span class="string">&quot;image_width&quot;</span> &lt;&lt; imageSize.width;</span><br><span class="line">    fs &lt;&lt; <span class="string">&quot;image_height&quot;</span> &lt;&lt; imageSize.height;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (flags &amp; CALIB_FIX_ASPECT_RATIO) fs &lt;&lt; <span class="string">&quot;aspectRatio&quot;</span> &lt;&lt; aspectRatio;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (flags != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">sprintf</span>(buf, <span class="string">&quot;flags: %s%s%s%s&quot;</span>,</span><br><span class="line">            flags &amp; CALIB_USE_INTRINSIC_GUESS ? <span class="string">&quot;+use_intrinsic_guess&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">            flags &amp; CALIB_FIX_ASPECT_RATIO ? <span class="string">&quot;+fix_aspectRatio&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">            flags &amp; CALIB_FIX_PRINCIPAL_POINT ? <span class="string">&quot;+fix_principal_point&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">            flags &amp; CALIB_ZERO_TANGENT_DIST ? <span class="string">&quot;+zero_tangent_dist&quot;</span> : <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fs &lt;&lt; <span class="string">&quot;flags&quot;</span> &lt;&lt; flags;</span><br><span class="line"></span><br><span class="line">    fs &lt;&lt; <span class="string">&quot;camera_matrix&quot;</span> &lt;&lt; cameraMatrix;</span><br><span class="line">    fs &lt;&lt; <span class="string">&quot;distortion_coefficients&quot;</span> &lt;&lt; distCoeffs;</span><br><span class="line"></span><br><span class="line">    fs &lt;&lt; <span class="string">&quot;avg_reprojection_error&quot;</span> &lt;&lt; totalAvgErr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="function">CommandLineParser <span class="title">parser</span><span class="params">(argc, argv, keys)</span></span>;</span><br><span class="line">    parser.about(about);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (argc &lt; <span class="number">7</span>) &#123;</span><br><span class="line">        parser.printMessage();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> squaresX = parser.get&lt;<span class="keyword">int</span>&gt;(<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> squaresY = parser.get&lt;<span class="keyword">int</span>&gt;(<span class="string">&quot;h&quot;</span>);</span><br><span class="line">    <span class="keyword">float</span> squareLength = parser.get&lt;<span class="keyword">float</span>&gt;(<span class="string">&quot;sl&quot;</span>);</span><br><span class="line">    <span class="keyword">float</span> markerLength = parser.get&lt;<span class="keyword">float</span>&gt;(<span class="string">&quot;ml&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> dictionaryId = parser.get&lt;<span class="keyword">int</span>&gt;(<span class="string">&quot;d&quot;</span>);</span><br><span class="line">    <span class="built_in">string</span> outputFile = parser.get&lt;<span class="built_in">string</span>&gt;(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> showChessboardCorners = parser.get&lt;<span class="keyword">bool</span>&gt;(<span class="string">&quot;sc&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> calibrationFlags = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> aspectRatio = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (parser.has(<span class="string">&quot;a&quot;</span>)) &#123;</span><br><span class="line">        calibrationFlags |= CALIB_FIX_ASPECT_RATIO;</span><br><span class="line">        aspectRatio = parser.get&lt;<span class="keyword">float</span>&gt;(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (parser.get&lt;<span class="keyword">bool</span>&gt;(<span class="string">&quot;zt&quot;</span>)) calibrationFlags |= CALIB_ZERO_TANGENT_DIST;</span><br><span class="line">    <span class="keyword">if</span> (parser.get&lt;<span class="keyword">bool</span>&gt;(<span class="string">&quot;pc&quot;</span>)) calibrationFlags |= CALIB_FIX_PRINCIPAL_POINT;</span><br><span class="line"></span><br><span class="line">    Ptr&lt;aruco::DetectorParameters&gt; detectorParams = aruco::DetectorParameters::create();</span><br><span class="line">    <span class="keyword">if</span> (parser.has(<span class="string">&quot;dp&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">bool</span> readOk = readDetectorParameters(parser.get&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;dp&quot;</span>), detectorParams);</span><br><span class="line">        <span class="keyword">if</span> (!readOk) &#123;</span><br><span class="line">            <span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;Invalid detector parameters file&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> refindStrategy = parser.get&lt;<span class="keyword">bool</span>&gt;(<span class="string">&quot;rs&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> camId = parser.get&lt;<span class="keyword">int</span>&gt;(<span class="string">&quot;ci&quot;</span>);</span><br><span class="line">    String video;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (parser.has(<span class="string">&quot;v&quot;</span>)) &#123;</span><br><span class="line">        video = parser.get&lt;String&gt;(<span class="string">&quot;v&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!parser.check()) &#123;</span><br><span class="line">        parser.printErrors();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    VideoCapture inputVideo;</span><br><span class="line">    <span class="keyword">int</span> waitTime;</span><br><span class="line">    <span class="keyword">if</span> (!video.empty()) &#123;</span><br><span class="line">        inputVideo.open(video);</span><br><span class="line">        waitTime = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        inputVideo.open(camId);</span><br><span class="line">        waitTime = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Ptr&lt;aruco::Dictionary&gt; dictionary =</span><br><span class="line">        aruco::getPredefinedDictionary(aruco::PREDEFINED_DICTIONARY_NAME(dictionaryId));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// create charuco board object</span></span><br><span class="line">    Ptr&lt;aruco::CharucoBoard&gt; charucoboard =</span><br><span class="line">        aruco::CharucoBoard::create(squaresX, squaresY, squareLength, markerLength, dictionary);</span><br><span class="line">    Ptr&lt;aruco::Board&gt; board = charucoboard.staticCast&lt;aruco::Board&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// collect data from each frame</span></span><br><span class="line">    <span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt; Point2f &gt; &gt; &gt; allCorners;</span><br><span class="line">    <span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt; <span class="keyword">int</span> &gt; &gt; allIds;</span><br><span class="line">    <span class="built_in">vector</span>&lt; Mat &gt; allImgs;</span><br><span class="line">    Size imgSize;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (inputVideo.grab()) &#123;</span><br><span class="line">        Mat image, imageCopy;</span><br><span class="line">        inputVideo.retrieve(image);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">vector</span>&lt; <span class="keyword">int</span> &gt; ids;</span><br><span class="line">        <span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt; Point2f &gt; &gt; corners, rejected;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// detect markers</span></span><br><span class="line">        aruco::detectMarkers(image, dictionary, corners, ids, detectorParams, rejected);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// refind strategy to detect more markers</span></span><br><span class="line">        <span class="keyword">if</span> (refindStrategy) aruco::refineDetectedMarkers(image, board, corners, ids, rejected);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// interpolate charuco corners</span></span><br><span class="line">        Mat currentCharucoCorners, currentCharucoIds;</span><br><span class="line">        <span class="keyword">if</span> (ids.size() &gt; <span class="number">0</span>)</span><br><span class="line">            aruco::interpolateCornersCharuco(corners, ids, image, charucoboard, currentCharucoCorners,</span><br><span class="line">                currentCharucoIds);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// draw results</span></span><br><span class="line">        image.copyTo(imageCopy);</span><br><span class="line">        <span class="keyword">if</span> (ids.size() &gt; <span class="number">0</span>) aruco::drawDetectedMarkers(imageCopy, corners);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (currentCharucoCorners.total() &gt; <span class="number">0</span>)</span><br><span class="line">            aruco::drawDetectedCornersCharuco(imageCopy, currentCharucoCorners, currentCharucoIds);</span><br><span class="line"></span><br><span class="line">        putText(imageCopy, <span class="string">&quot;Press &#x27;c&#x27; to add current frame. &#x27;ESC&#x27; to finish and calibrate&quot;</span>,</span><br><span class="line">            Point(<span class="number">10</span>, <span class="number">20</span>), FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        imshow(<span class="string">&quot;out&quot;</span>, imageCopy);</span><br><span class="line">        <span class="keyword">char</span> key = (<span class="keyword">char</span>)waitKey(waitTime);</span><br><span class="line">        <span class="keyword">if</span> (key == <span class="number">27</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (key == <span class="string">&#x27;c&#x27;</span> &amp;&amp; ids.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Frame captured&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            allCorners.push_back(corners);</span><br><span class="line">            allIds.push_back(ids);</span><br><span class="line">            allImgs.push_back(image);</span><br><span class="line">            imgSize = image.size();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (allIds.size() &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;Not enough captures for calibration&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Mat cameraMatrix, distCoeffs;</span><br><span class="line">    <span class="built_in">vector</span>&lt; Mat &gt; rvecs, tvecs;</span><br><span class="line">    <span class="keyword">double</span> repError;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (calibrationFlags &amp; CALIB_FIX_ASPECT_RATIO) &#123;</span><br><span class="line">        cameraMatrix = Mat::eye(<span class="number">3</span>, <span class="number">3</span>, CV_64F);</span><br><span class="line">        cameraMatrix.at&lt; <span class="keyword">double</span> &gt;(<span class="number">0</span>, <span class="number">0</span>) = aspectRatio;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// prepare data for calibration</span></span><br><span class="line">    <span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt; Point2f &gt; &gt; allCornersConcatenated;</span><br><span class="line">    <span class="built_in">vector</span>&lt; <span class="keyword">int</span> &gt; allIdsConcatenated;</span><br><span class="line">    <span class="built_in">vector</span>&lt; <span class="keyword">int</span> &gt; markerCounterPerFrame;</span><br><span class="line">    markerCounterPerFrame.reserve(allCorners.size());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; allCorners.size(); i++) &#123;</span><br><span class="line">        markerCounterPerFrame.push_back((<span class="keyword">int</span>)allCorners[i].size());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> j = <span class="number">0</span>; j &lt; allCorners[i].size(); j++) &#123;</span><br><span class="line">            allCornersConcatenated.push_back(allCorners[i][j]);</span><br><span class="line">            allIdsConcatenated.push_back(allIds[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// calibrate camera using aruco markers</span></span><br><span class="line">    <span class="keyword">double</span> arucoRepErr;</span><br><span class="line">    arucoRepErr = aruco::calibrateCameraAruco(allCornersConcatenated, allIdsConcatenated,</span><br><span class="line">        markerCounterPerFrame, board, imgSize, cameraMatrix,</span><br><span class="line">        distCoeffs, noArray(), noArray(), calibrationFlags);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// prepare data for charuco calibration</span></span><br><span class="line">    <span class="keyword">int</span> nFrames = (<span class="keyword">int</span>)allCorners.size();</span><br><span class="line">    <span class="built_in">vector</span>&lt; Mat &gt; allCharucoCorners;</span><br><span class="line">    <span class="built_in">vector</span>&lt; Mat &gt; allCharucoIds;</span><br><span class="line">    <span class="built_in">vector</span>&lt; Mat &gt; filteredImages;</span><br><span class="line">    allCharucoCorners.reserve(nFrames);</span><br><span class="line">    allCharucoIds.reserve(nFrames);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nFrames; i++) &#123;</span><br><span class="line">        <span class="comment">// interpolate using camera parameters</span></span><br><span class="line">        Mat currentCharucoCorners, currentCharucoIds;</span><br><span class="line">        aruco::interpolateCornersCharuco(allCorners[i], allIds[i], allImgs[i], charucoboard,</span><br><span class="line">            currentCharucoCorners, currentCharucoIds, cameraMatrix,</span><br><span class="line">            distCoeffs);</span><br><span class="line"></span><br><span class="line">        allCharucoCorners.push_back(currentCharucoCorners);</span><br><span class="line">        allCharucoIds.push_back(currentCharucoIds);</span><br><span class="line">        filteredImages.push_back(allImgs[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (allCharucoCorners.size() &lt; <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;Not enough corners for calibration&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// calibrate camera using charuco</span></span><br><span class="line">    repError =</span><br><span class="line">        aruco::calibrateCameraCharuco(allCharucoCorners, allCharucoIds, charucoboard, imgSize,</span><br><span class="line">            cameraMatrix, distCoeffs, rvecs, tvecs, calibrationFlags);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> saveOk = saveCameraParams(outputFile, imgSize, aspectRatio, calibrationFlags,</span><br><span class="line">        cameraMatrix, distCoeffs, repError);</span><br><span class="line">    <span class="keyword">if</span> (!saveOk) &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;Cannot save output file&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Rep Error: &quot;</span> &lt;&lt; repError &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Rep Error Aruco: &quot;</span> &lt;&lt; arucoRepErr &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Calibration saved to &quot;</span> &lt;&lt; outputFile &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// show interpolated charuco corners for debugging</span></span><br><span class="line">    <span class="keyword">if</span> (showChessboardCorners) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> frame = <span class="number">0</span>; frame &lt; filteredImages.size(); frame++) &#123;</span><br><span class="line">            Mat imageCopy = filteredImages[frame].clone();</span><br><span class="line">            <span class="keyword">if</span> (allIds[frame].size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (allCharucoCorners[frame].total() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    aruco::drawDetectedCornersCharuco(imageCopy, allCharucoCorners[frame],</span><br><span class="line">                        allCharucoIds[frame]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            imshow(<span class="string">&quot;out&quot;</span>, imageCopy);</span><br><span class="line">            <span class="keyword">char</span> key = (<span class="keyword">char</span>)waitKey(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (key == <span class="number">27</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><ol>
<li>Visual Studio 需要在项目属性中（项目属性 -&gt; 调试），添加以下参数：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;camera.yml&quot; -dp&#x3D;&quot;detector_params.yml&quot; -w&#x3D;5 -h&#x3D;7 -sl&#x3D;0.04 -ml&#x3D;0.02 -d&#x3D;10</span><br></pre></td></tr></table></figure>
<ol>
<li>在源代码目录，新建文件，名称为“detector_params.yml”；内容如下所示：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%YAML:1.0</span><br><span class="line">nmarkers: 1024</span><br><span class="line">adaptiveThreshWinSizeMin: 3</span><br><span class="line">adaptiveThreshWinSizeMax: 23</span><br><span class="line">adaptiveThreshWinSizeStep: 10</span><br><span class="line">adaptiveThreshWinSize: 21</span><br><span class="line">adaptiveThreshConstant: 7</span><br><span class="line">minMarkerPerimeterRate: 0.03</span><br><span class="line">maxMarkerPerimeterRate: 4.0</span><br><span class="line">polygonalApproxAccuracyRate: 0.05</span><br><span class="line">minCornerDistance: 10.0</span><br><span class="line">minDistanceToBorder: 3</span><br><span class="line">minMarkerDistance: 10.0</span><br><span class="line">minMarkerDistanceRate: 0.05</span><br><span class="line">cornerRefinementMethod: 0</span><br><span class="line">cornerRefinementWinSize: 5</span><br><span class="line">cornerRefinementMaxIterations: 30</span><br><span class="line">cornerRefinementMinAccuracy: 0.1</span><br><span class="line">markerBorderBits: 1</span><br><span class="line">perspectiveRemovePixelPerCell: 8</span><br><span class="line">perspectiveRemoveIgnoredMarginPerCell: 0.13</span><br><span class="line">maxErroneousBitsInBorderRate: 0.04</span><br><span class="line">minOtsuStdDev: 5.0</span><br><span class="line">errorCorrectionRate: 0.6</span><br></pre></td></tr></table></figure>
<h3 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200822175225.png" alt=""></p>
<p>选中窗口，通过连续按键“C”，采集不同角度的图像；结束按“ESC”；</p>
<p>程序运行结束后，会在源代码目录生成文件<strong>camera.yml</strong>；里面保存着相机标定后的结果；</p>
<h2 id="步骤三：相机标定验证"><a href="#步骤三：相机标定验证" class="headerlink" title="步骤三：相机标定验证"></a>步骤三：相机标定验证</h2><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\highgui.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\videoio.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco\dictionary.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco\charuco.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\imgproc\imgproc.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">cv::VideoCapture <span class="title">inputVideo</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="comment">//VideoWriter writer(&quot;VideoTest.avi&quot;, VideoWriter::fourcc(&#x27;M&#x27;, &#x27;J&#x27;, &#x27;P&#x27;, &#x27;G&#x27;), 25.0, Size(640, 480));</span></span><br><span class="line">	cv::Mat cameraMatrix, distCoeffs; <span class="comment">// 相机参数</span></span><br><span class="line"></span><br><span class="line">	<span class="function">FileStorage <span class="title">fs</span><span class="params">(<span class="string">&quot;camera.yml&quot;</span>, FileStorage::READ)</span></span>;<span class="comment">//读取相机参数</span></span><br><span class="line">	<span class="keyword">if</span> (!fs.isOpened())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Could not open the configuration file!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	fs[<span class="string">&quot;camera_matrix&quot;</span>] &gt;&gt; cameraMatrix;</span><br><span class="line">	fs[<span class="string">&quot;distortion_coefficients&quot;</span>] &gt;&gt; distCoeffs;</span><br><span class="line">	fs.release();</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; cameraMatrix &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; distCoeffs &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	Ptr&lt;aruco::Dictionary&gt; dictionary =</span><br><span class="line">		aruco::getPredefinedDictionary(cv::aruco::DICT_4X4_50);<span class="comment">//创建字典</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (inputVideo.grab()) &#123;</span><br><span class="line">		<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">		cv::Mat image, imageCopy;</span><br><span class="line"></span><br><span class="line">		inputVideo.retrieve(image);</span><br><span class="line">		image.copyTo(imageCopy);</span><br><span class="line"></span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ids;</span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Point2f&gt; &gt; corners;</span><br><span class="line"></span><br><span class="line">		cv::aruco::detectMarkers(image, dictionary, corners, ids);<span class="comment">// 检测markers</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (ids.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			cv::aruco::drawDetectedMarkers(imageCopy, corners, ids);</span><br><span class="line">			<span class="built_in">vector</span>&lt; Vec3d &gt; rvecs, tvecs;<span class="comment">//得到旋转矢量以及平移矢量</span></span><br><span class="line">			cv::aruco::estimatePoseSingleMarkers(corners, <span class="number">100</span>, cameraMatrix, distCoeffs, rvecs, tvecs);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ids.size(); i++)</span><br><span class="line">				cv::aruco::drawAxis(imageCopy, cameraMatrix, distCoeffs, rvecs[i], tvecs[i], <span class="number">50</span>);<span class="comment">// 画方向轴</span></span><br><span class="line">			<span class="comment">//writer &lt;&lt; imageCopy;</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		cv::imshow(<span class="string">&quot;out&quot;</span>, imageCopy);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">char</span> key = (<span class="keyword">char</span>)cv::waitKey(<span class="number">20</span>);</span><br><span class="line">		<span class="keyword">if</span> (key == <span class="string">&#x27;b&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="运行结果-2"><a href="#运行结果-2" class="headerlink" title="运行结果"></a>运行结果</h3><p>将相机对准标定板（如下图所示）</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200822175801.png" alt=""></p>
<p>运行后结果</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200822175913.png" alt=""></p>
]]></content>
      <categories>
        <category>实践</category>
      </categories>
  </entry>
  <entry>
    <title> Aruco创建Board</title>
    <url>/2020/08/22/Aruco%E5%88%9B%E5%BB%BABoard/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><blockquote>
<p>参考链接：</p>
<p><a href="https://blog.csdn.net/qq_33446100/article/details/89186826">https://blog.csdn.net/qq_33446100/article/details/89186826</a></p>
</blockquote>
<a id="more"></a>
<h2 id="Board作用"><a href="#Board作用" class="headerlink" title="Board作用"></a>Board作用</h2><ul>
<li><p>board是一个aruco marker的棋盘，上面布置了许多marker。</p>
</li>
<li><p>board可用于校准（Calibrate）摄像机 </p>
</li>
</ul>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\highgui.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco\dictionary.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco\charuco.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\imgproc\imgproc.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> markersX = <span class="number">5</span>;<span class="comment">//X轴上标记的数量</span></span><br><span class="line">	<span class="keyword">int</span> markersY = <span class="number">5</span>;<span class="comment">//Y轴上标记的数量   本例生成5x5的棋盘</span></span><br><span class="line">	<span class="keyword">int</span> markerLength = <span class="number">100</span>;<span class="comment">//标记的长度，单位是像素</span></span><br><span class="line">	<span class="keyword">int</span> markerSeparation = <span class="number">20</span>;<span class="comment">//每个标记之间的间隔，单位像素</span></span><br><span class="line">	<span class="keyword">int</span> dictionaryId = cv::aruco::DICT_4X4_50;<span class="comment">//生成标记的字典ID</span></span><br><span class="line">	<span class="keyword">int</span> margins = markerSeparation;<span class="comment">//标记与边界之间的间隔</span></span><br><span class="line"> </span><br><span class="line">	<span class="keyword">int</span> borderBits = <span class="number">1</span>;<span class="comment">//标记的边界所占的bit位数</span></span><br><span class="line">	<span class="keyword">bool</span> showImage = <span class="literal">true</span>;</span><br><span class="line"> </span><br><span class="line">	Size imageSize;</span><br><span class="line">	imageSize.width = markersX * (markerLength + markerSeparation) - markerSeparation + <span class="number">2</span> * margins;</span><br><span class="line">	imageSize.height =</span><br><span class="line">		markersY * (markerLength + markerSeparation) - markerSeparation + <span class="number">2</span> * margins;</span><br><span class="line"> </span><br><span class="line">	Ptr&lt;aruco::Dictionary&gt; dictionary =</span><br><span class="line">		aruco::getPredefinedDictionary(aruco::PREDEFINED_DICTIONARY_NAME(dictionaryId));</span><br><span class="line"> </span><br><span class="line">	Ptr&lt;aruco::GridBoard&gt; board = aruco::GridBoard::create(markersX, markersY, <span class="keyword">float</span>(markerLength),</span><br><span class="line">		<span class="keyword">float</span>(markerSeparation), dictionary);</span><br><span class="line"> </span><br><span class="line">	<span class="comment">// show created board</span></span><br><span class="line">	Mat boardImage;</span><br><span class="line">	board-&gt;draw(imageSize, boardImage, margins, borderBits);</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">if</span> (showImage) &#123;</span><br><span class="line">		imshow(<span class="string">&quot;board&quot;</span>, boardImage);</span><br><span class="line">		waitKey(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200822115151.png" alt=""></p>
]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>Aruco</tag>
      </tags>
  </entry>
  <entry>
    <title> Aruco检测Marker</title>
    <url>/2020/08/22/Aruco%E6%A3%80%E6%B5%8BMarker/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><blockquote>
<p>参考链接：</p>
<p><a href="https://blog.csdn.net/qq_33446100/article/details/89115983">https://blog.csdn.net/qq_33446100/article/details/89115983</a></p>
<p><a href="https://docs.opencv.org/4.0.1/d9/d6a/group__aruco.html">https://docs.opencv.org/4.0.1/d9/d6a/group__aruco.html</a></p>
</blockquote>
<a id="more"></a>
<h2 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h2><ul>
<li><p>Azure Kinect</p>
<p>使用RGB相机，Kinect不接电源</p>
</li>
<li><p>VS2019</p>
</li>
</ul>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\highgui.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\aruco\dictionary.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2\core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat markerImage;</span><br><span class="line">	<span class="function">cv::VideoCapture <span class="title">mVideoCapture</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//创建字典，这里注意使用Ptr&lt;&gt;，不然无法显示结果</span></span><br><span class="line">	Ptr&lt;aruco::Dictionary&gt; dictionary = cv::aruco::getPredefinedDictionary(cv::aruco::DICT_4X4_50);</span><br><span class="line">	cv::aruco::drawMarker(dictionary, <span class="number">23</span>, <span class="number">240</span>, markerImage);<span class="comment">//这里取出一个marker用于检测</span></span><br><span class="line"></span><br><span class="line">	imshow(<span class="string">&quot;marker&quot;</span>, markerImage);<span class="comment">//显示待检测标记</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (mVideoCapture.grab())<span class="comment">//取得下一帧</span></span><br><span class="line">	&#123;</span><br><span class="line">		cv::Mat frame, frame_show;</span><br><span class="line">		mVideoCapture.retrieve(frame);<span class="comment">//放入Mat</span></span><br><span class="line"></span><br><span class="line">		frame.copyTo(frame_show);<span class="comment">//复制一份</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ids;</span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Point2f&gt;&gt; corners;</span><br><span class="line"></span><br><span class="line">		cv::aruco::detectMarkers(frame, dictionary, corners, ids);<span class="comment">//检测该帧是否有标记</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (ids.size() &gt; <span class="number">0</span>)</span><br><span class="line">			cv::aruco::drawDetectedMarkers(frame_show, corners, ids);<span class="comment">//如果有，则标记出来，放入另一个Mat</span></span><br><span class="line"></span><br><span class="line">		cv::imshow(<span class="string">&quot;video&quot;</span>, frame_show);<span class="comment">//显示结果</span></span><br><span class="line"></span><br><span class="line">		waitKey(<span class="number">30</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200822112653.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200822112801.png" alt=""></p>
]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>Aruco</tag>
      </tags>
  </entry>
  <entry>
    <title> Windows本地配置Aruco</title>
    <url>/2020/08/20/Windows%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AEAruco/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>环境：win10 + VS2019 + OpenCV4.30</p>
</blockquote>
<a id="more"></a>
<h2 id="下载Contrib库"><a href="#下载Contrib库" class="headerlink" title="下载Contrib库"></a>下载Contrib库</h2><p>传送门：<a href="https://github.com/opencv/opencv_contrib/releases">click it</a></p>
<p>(<strong>注意</strong>：选择与OpenCV对应的库)</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200820155046.png" alt=""></p>
<h2 id="CMake编译OpecCV"><a href="#CMake编译OpecCV" class="headerlink" title="CMake编译OpecCV"></a>CMake编译OpecCV</h2><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200820155137.png" alt=""></p>
<p>点击<em>configure</em>，如果有红色，继续点<em>configure</em>，直至红色都消失</p>
<h2 id="CMake编译OpenCV-contrib"><a href="#CMake编译OpenCV-contrib" class="headerlink" title="CMake编译OpenCV-contrib"></a>CMake编译OpenCV-contrib</h2><ul>
<li>将<em>opencv_contrib-4.3.0</em>放置在<em>F:\DownLoad\opencv</em>目录下，在CMake中找到<em>OPENCV_EXTRA_MODULES_PATH</em>，填入<em>F:\DownLoad\opencv\opencv_contrib-4.3.0\modules</em>路径，并勾选上方<em>OPENCV_ENABLE_NONFREE</em>；</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200820155702.png" alt=""></p>
<p>点击<em>configure</em>，如果有红色，继续点<em>configure</em>，直至红色都消失</p>
<p>最后点击<em>generate</em></p>
<h2 id="VS2019编译debug与release库"><a href="#VS2019编译debug与release库" class="headerlink" title="VS2019编译debug与release库"></a>VS2019编译debug与release库</h2><p>打开OpenCV.sln项目文件；</p>
<h3 id="编译debug库"><a href="#编译debug库" class="headerlink" title="编译debug库"></a>编译debug库</h3><p>解决方案 -&gt; 右键重新生成解决方案</p>
<p>完成后，找到CMakeTargets中的INSTALL，然后右键选择“仅限于项目”—&gt;“仅生成INSTALL”；</p>
<h3 id="编译release库"><a href="#编译release库" class="headerlink" title="编译release库"></a>编译release库</h3><p>和上面差不多</p>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>系统变量 -&gt; PATH ，添加 F:\DownLoad\MyBuild\install\x64\vc16\bin</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200820160215.png" alt=""></p>
<p>用户变量：</p>
<p>变量名：OPENCV</p>
<p>变量值：F:\DownLoad\MyBuild\install\include</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200820160401.png" alt=""></p>
<h2 id="配置目录"><a href="#配置目录" class="headerlink" title="配置目录"></a>配置目录</h2><p>与配置OpenCV相同，新建一个项目，新建一个属性表，为日后重复使用奠定基础</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200820160634.png" alt=""></p>
<p>属性 -&gt; VC++目录 -&gt; 包含目录，添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">F:\DownLoad\MyBuild\install\include</span><br><span class="line">F:\DownLoad\MyBuild\install\include\opencv2</span><br></pre></td></tr></table></figure>
<p>VC++目录 —&gt; 库目录，添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">F:\DownLoad\MyBuild\install\x64\vc16\lib</span><br></pre></td></tr></table></figure>
<p>链接器 -&gt; 输入 -&gt; 附加依赖项 ，添加以下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">opencv_aruco430d.lib;</span><br><span class="line">opencv_bgsegm430d.lib;</span><br><span class="line">opencv_bioinspired430d.lib;</span><br><span class="line">opencv_calib3d430d.lib;</span><br><span class="line">opencv_ccalib430d.lib;</span><br><span class="line">opencv_core430d.lib;</span><br><span class="line">opencv_datasets430d.lib;</span><br><span class="line">opencv_dnn_objdetect430d.lib;</span><br><span class="line">opencv_dnn430d.lib;</span><br><span class="line">opencv_dpm430d.lib;</span><br><span class="line">opencv_face430d.lib;</span><br><span class="line">opencv_features2d430d.lib;</span><br><span class="line">opencv_flann430d.lib;</span><br><span class="line">opencv_fuzzy430d.lib;</span><br><span class="line">opencv_hdf430d.lib;</span><br><span class="line">opencv_hfs430d.lib;</span><br><span class="line">opencv_highgui430d.lib;</span><br><span class="line">opencv_img_hash430d.lib;</span><br><span class="line">opencv_imgcodecs430d.lib;</span><br><span class="line">opencv_imgproc430d.lib;</span><br><span class="line">opencv_line_descriptor430d.lib;</span><br><span class="line">opencv_ml430d.lib;</span><br><span class="line">opencv_objdetect430d.lib;</span><br><span class="line">opencv_optflow430d.lib;</span><br><span class="line">opencv_phase_unwrapping430d.lib;</span><br><span class="line">opencv_photo430d.lib;</span><br><span class="line">opencv_plot430d.lib;</span><br><span class="line">opencv_reg430d.lib;</span><br><span class="line">opencv_rgbd430d.lib;</span><br><span class="line">opencv_saliency430d.lib;</span><br><span class="line">opencv_shape430d.lib;</span><br><span class="line">opencv_stereo430d.lib;</span><br><span class="line">opencv_stitching430d.lib;</span><br><span class="line">opencv_structured_light430d.lib;</span><br><span class="line">opencv_superres430d.lib;</span><br><span class="line">opencv_surface_matching430d.lib;</span><br><span class="line">opencv_text430d.lib;</span><br><span class="line">opencv_tracking430d.lib;</span><br><span class="line">opencv_video430d.lib;</span><br><span class="line">opencv_videoio430d.lib;</span><br><span class="line">opencv_videostab430d.lib;</span><br><span class="line">opencv_xfeatures2d430d.lib;</span><br><span class="line">opencv_ximgproc430d.lib;</span><br><span class="line">opencv_xobjdetect430d.lib;</span><br><span class="line">opencv_xphoto430d.lib;</span><br></pre></td></tr></table></figure>
<h2 id="测试-生成Aruco-board"><a href="#测试-生成Aruco-board" class="headerlink" title="测试 - 生成Aruco_board"></a>测试 - 生成Aruco_board</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;opencv2\highgui.hpp&gt;</span><br><span class="line">#include &lt;opencv2\aruco.hpp&gt;</span><br><span class="line">#include &lt;opencv2\aruco\dictionary.hpp&gt;</span><br><span class="line">#include &lt;opencv2\aruco\charuco.hpp&gt;</span><br><span class="line">#include &lt;opencv2\core.hpp&gt;</span><br><span class="line">#include &lt;opencv2\imgproc\imgproc.hpp&gt;</span><br><span class="line">#include &lt;opencv2\opencv.hpp&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">using namespace cv;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int markersX &#x3D; 5;&#x2F;&#x2F;X轴上标记的数量</span><br><span class="line">	int markersY &#x3D; 5;&#x2F;&#x2F;Y轴上标记的数量   本例生成5x5的棋盘</span><br><span class="line">	int markerLength &#x3D; 100;&#x2F;&#x2F;标记的长度，单位是像素</span><br><span class="line">	int markerSeparation &#x3D; 20;&#x2F;&#x2F;每个标记之间的间隔，单位像素</span><br><span class="line">	int dictionaryId &#x3D; cv::aruco::DICT_4X4_50;&#x2F;&#x2F;生成标记的字典ID</span><br><span class="line">	int margins &#x3D; markerSeparation;&#x2F;&#x2F;标记与边界之间的间隔</span><br><span class="line"></span><br><span class="line">	int borderBits &#x3D; 1;&#x2F;&#x2F;标记的边界所占的bit位数</span><br><span class="line">	bool showImage &#x3D; true;</span><br><span class="line"></span><br><span class="line">	Size imageSize;</span><br><span class="line"></span><br><span class="line">	imageSize.width &#x3D; markersX * (markerLength + markerSeparation) - markerSeparation + 2 * margins;</span><br><span class="line"></span><br><span class="line">	imageSize.height &#x3D; markersY * (markerLength + markerSeparation) - markerSeparation + 2 * margins;</span><br><span class="line"></span><br><span class="line">	Ptr&lt;aruco::Dictionary&gt; dictionary &#x3D; aruco::getPredefinedDictionary(aruco::PREDEFINED_DICTIONARY_NAME(dictionaryId));</span><br><span class="line"></span><br><span class="line">	Ptr&lt;aruco::GridBoard&gt; board &#x3D; aruco::GridBoard::create(markersX, markersY, float(markerLength), float(markerSeparation), dictionary);</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; show created board</span><br><span class="line">	Mat boardImage;</span><br><span class="line">	board-&gt;draw(imageSize, boardImage, margins, borderBits);</span><br><span class="line"></span><br><span class="line">	if (showImage) &#123;</span><br><span class="line">		imshow(&quot;board&quot;, boardImage);</span><br><span class="line">		waitKey(0);</span><br><span class="line">	&#125;</span><br><span class="line">	return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200820154403.png" alt=""></p>
]]></content>
      <categories>
        <category>Windows环境配置</category>
      </categories>
      <tags>
        <tag>Aruco</tag>
      </tags>
  </entry>
  <entry>
    <title>使用VS2019 创建C++ dll用于Unity</title>
    <url>/2020/08/12/%E4%BD%BF%E7%94%A8VS2019-%E5%88%9B%E5%BB%BAC-dll%E7%94%A8%E4%BA%8EUnity/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>参考博客：</p>
<p><a href="https://www.cnblogs.com/aWxvdmVseXc0/p/12857974.html">https://www.cnblogs.com/aWxvdmVseXc0/p/12857974.html</a></p>
<p><a href="https://blog.csdn.net/zhunju0089/article/details/103458855">https://blog.csdn.net/zhunju0089/article/details/103458855</a></p>
</blockquote>
<a id="more"></a>
<h3 id="创建VS项目"><a href="#创建VS项目" class="headerlink" title="创建VS项目"></a>创建VS项目</h3><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200812145559.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200812145630.png" alt=""></p>
<h3 id="创建项目成功后，打开pch-h文件，定义导出函数的定义"><a href="#创建项目成功后，打开pch-h文件，定义导出函数的定义" class="headerlink" title="创建项目成功后，打开pch.h文件，定义导出函数的定义"></a>创建项目成功后，打开<strong>pch.h</strong>文件，定义导出函数的定义</h3><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200812145856.png" style="zoom:200%;" /></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> _declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">myadd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</span><br></pre></td></tr></table></figure>
<h3 id="打开pch-cpp文件，实现上述函数的具体功能"><a href="#打开pch-cpp文件，实现上述函数的具体功能" class="headerlink" title="打开pch.cpp文件，实现上述函数的具体功能"></a>打开<strong>pch.cpp</strong>文件，实现上述函数的具体功能</h3><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200812150216.png" style="zoom:200%;" /></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myadd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="点击生成解决方案，即可生成dll文件"><a href="#点击生成解决方案，即可生成dll文件" class="headerlink" title="点击生成解决方案，即可生成dll文件"></a>点击<strong>生成解决方案</strong>，即可生成dll文件</h3><h3 id="在Unity项目中，新建文件夹Plugins，将生成的dll文件复制进此文件夹中"><a href="#在Unity项目中，新建文件夹Plugins，将生成的dll文件复制进此文件夹中" class="headerlink" title="在Unity项目中，新建文件夹Plugins，将生成的dll文件复制进此文件夹中"></a>在Unity项目中，新建文件夹<strong>Plugins</strong>，将生成的dll文件复制进此文件夹中</h3><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200812150544.png" alt=""></p>
<h3 id="脚本调用"><a href="#脚本调用" class="headerlink" title="脚本调用"></a>脚本调用</h3><p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200812150843.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200812150927.png" style="zoom:200%;" /></p>
]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>Unity</tag>
        <tag>dll</tag>
      </tags>
  </entry>
  <entry>
    <title> OpenGL调用Azure Kinect 实现过程</title>
    <url>/2020/08/03/OpenGL%E8%B0%83%E7%94%A8Azure-Kinect-%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>源代码来源：</p>
<p>源代码作者：无雨森；浙江科技大学在读博士</p>
</blockquote>
<a id="more"></a>
<h2 id="软件硬件"><a href="#软件硬件" class="headerlink" title="软件硬件"></a>软件硬件</h2><p>VS2019</p>
<p>Azure Kinect</p>
<h2 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h2><p>OpenGL_GLUT_ShowImage</p>
<h2 id="本地配置过程"><a href="#本地配置过程" class="headerlink" title="本地配置过程"></a>本地配置过程</h2><h3 id="配置OpenCV"><a href="#配置OpenCV" class="headerlink" title="配置OpenCV"></a>配置OpenCV</h3><p>略过</p>
<h3 id="配置模式与头文件路径"><a href="#配置模式与头文件路径" class="headerlink" title="配置模式与头文件路径"></a>配置模式与头文件路径</h3><ul>
<li>本地建立VS空项目，release X64模式</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200731102606.png" alt=""></p>
<ul>
<li>新建cpp文档，作为源文件，将OpenGL_GLUT_ShowImage的源代码复制进新建的cpp文档</li>
<li>配置头文件路径，本文以此为例</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200731102928.png" alt=""></p>
<p>项目 -&gt; 属性 -&gt; C/C++ -&gt; 附加包含目录</p>
<p>填入上面图片所示路径</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200731103339.png" alt=""></p>
<h3 id="安装Kinect包"><a href="#安装Kinect包" class="headerlink" title="安装Kinect包"></a>安装Kinect包</h3><p>打开包管理器，下载如下图所示包</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200731101741.png" alt=""></p>
<p>安装结束后，即可发现代码已经没有报错</p>
<h3 id="修改源代码"><a href="#修改源代码" class="headerlink" title="修改源代码"></a>修改源代码</h3><p>此时F5运行，会发现报错：</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200731105327.png" alt=""></p>
<p>解决方法：</p>
<p>在windows.h语句上方，加入以下语句：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NOMINMAX</span></span><br></pre></td></tr></table></figure>
<p>整体看起来是这样的</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200731105536.png" alt=""></p>
<p>此时F5运行，会出现更多错误</p>
<p>一种是 C++ error:LNK2005 已经在*.obj中定义</p>
<p>另一种是和OpenCV的错误一样，无法解析外部命令；这里就略过了</p>
<p>解决方法：</p>
<p>在 属性-&gt;配置属性-&gt;链接器-&gt;命令行中添加 /FORCE:MULTIPLE 即可</p>
<p>此时F5运行，出现错误：</p>
<p>fatal error LNK1179: 无效或损坏的文件: 重复的XXX</p>
<p>解决方法：</p>
<p>属性-C/C++-优化-全程序优化 选择“否”</p>
<p>此时F5运行，成功！</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200803215839.png" alt=""></p>
]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>Azure Kinect</tag>
      </tags>
  </entry>
  <entry>
    <title> OpenCV调用Azure Kinect 实现过程</title>
    <url>/2020/08/01/OpenCV%E8%B0%83%E7%94%A8Azure-Kinect-%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>源代码来源：</p>
<p>源代码作者：无雨森</p>
<p>浙江科技大学在读博士</p>
</blockquote>
<a id="more"></a>
<h2 id="软件硬件a"><a href="#软件硬件a" class="headerlink" title="软件硬件a"></a>软件硬件a</h2><p>VS2019</p>
<p>Azure Kinect</p>
<h2 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h2><p>OpenCV_OneKinect</p>
<h2 id="本地配置过程"><a href="#本地配置过程" class="headerlink" title="本地配置过程"></a>本地配置过程</h2><h3 id="配置OpenCV"><a href="#配置OpenCV" class="headerlink" title="配置OpenCV"></a>配置OpenCV</h3><p>略过</p>
<h3 id="配置模式与头文件路径"><a href="#配置模式与头文件路径" class="headerlink" title="配置模式与头文件路径"></a>配置模式与头文件路径</h3><ul>
<li>本地建立VS空项目，release X64模式</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200731102606.png" alt=""></p>
<ul>
<li>新建cpp文档，作为源文件，将OpenCV_OneKinect的源代码复制进新建的cpp文档</li>
<li>配置头文件路径，本文以此为例</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200731102928.png" alt=""></p>
<p>项目 -&gt; 属性 -&gt; C/C++ -&gt; 附加包含目录</p>
<p>填入上面图片所示路径</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200731103339.png" alt=""></p>
<h3 id="安装Kinect包"><a href="#安装Kinect包" class="headerlink" title="安装Kinect包"></a>安装Kinect包</h3><p>打开包管理器，下载如下图所示包</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200731103706.png" alt=""></p>
<p>安装结束后，即可发现代码已经没有报错</p>
<h3 id="修改源代码"><a href="#修改源代码" class="headerlink" title="修改源代码"></a>修改源代码</h3><p>此时F5运行，会发现报错：</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200731104137.png" alt=""><br>错误    LNK2001    无法解析的外部符号 “void <strong>cdecl sen::ColorizeDepthImage(class k4a::image const &amp;,struct sen::Pixel (</strong>cdecl<em>)(unsigned short const &amp;,unsigned short const &amp;,unsigned short const &amp;),struct std::pair<unsigned short,unsigned short>,class std::vector<struct sen::Pixel,class std::allocator<struct sen::Pixel> &gt; </em>)” (?ColorizeDepthImage@sen@@YAXAEBVimage@k4a@@P6A?AUPixel@1@AEBG11@ZU?$pair@GG@std@@PEAV?$vector@UPixel@sen@@V?$allocator@UPixel@sen@@@std@@@6@@Z)    Test    F:\VS_Area\Test\源.obj    1    </p>
<p>原因：</p>
<p>StaticImageProperties.h头文件中，缺少ColorizeDepthImage的函数体</p>
<p>解决方法：</p>
<p>在StaticImageProperties.h头文件中添加即可</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ColorizeDepthImage</span><span class="params">(<span class="keyword">const</span> k4a::image&amp; depthImage,</span></span></span><br><span class="line"><span class="function"><span class="params">		DepthPixelVisualizationFunction visualizationFn,</span></span></span><br><span class="line"><span class="function"><span class="params">		<span class="built_in">std</span>::<span class="built_in">pair</span>&lt;<span class="keyword">uint16_t</span>, <span class="keyword">uint16_t</span>&gt; expectedValueRange,</span></span></span><br><span class="line"><span class="function"><span class="params">		<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Pixel&gt;* buffer)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">k4a_image_format_t</span> imageFormat = depthImage.get_format();</span><br><span class="line">		<span class="keyword">if</span> (imageFormat != K4A_IMAGE_FORMAT_DEPTH16 &amp;&amp; imageFormat != K4A_IMAGE_FORMAT_IR16)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="built_in">std</span>::logic_error(<span class="string">&quot;Attempted to colorize a non-depth image!&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> width = depthImage.get_width_pixels();</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> height = depthImage.get_height_pixels();</span><br><span class="line"></span><br><span class="line">		buffer-&gt;resize(<span class="keyword">static_cast</span>&lt;<span class="keyword">size_t</span>&gt;(width * height));</span><br><span class="line"></span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">uint16_t</span>* depthData = <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">uint16_t</span>*&gt;(depthImage.get_buffer());</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> h = <span class="number">0</span>; h &lt; height; ++h)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> w = <span class="number">0</span>; w &lt; width; ++w)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">const</span> <span class="keyword">size_t</span> currentPixel = <span class="keyword">static_cast</span>&lt;<span class="keyword">size_t</span>&gt;(h * width + w);</span><br><span class="line">				(*buffer)[currentPixel] = visualizationFn(depthData[currentPixel], expectedValueRange.first, expectedValueRange.second);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>运行成功：</p>
<p><img src="https://cdn.jsdelivr.net/gh/junlin49/up/20200801211404.png" alt=""></p>
]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>Azure Kinect</tag>
      </tags>
  </entry>
  <entry>
    <title>HOLOLENS2开发1</title>
    <url>/2020/05/20/HOLOLENS2%E5%BC%80%E5%8F%911/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Hololens初步上手</p>
<a id="more"></a>
<h2 id="HOLOLENS2-开发-环境配置"><a href="#HOLOLENS2-开发-环境配置" class="headerlink" title="HOLOLENS2 开发 - 环境配置"></a>HOLOLENS2 开发 - 环境配置</h2><blockquote>
<p>现在毕设项目已经做完，现在复盘下走过的坑</p>
<p>可通过邮件2998963449@qq.com联系</p>
</blockquote>
<h3 id="第1步：单独安装Win10-SDK"><a href="#第1步：单独安装Win10-SDK" class="headerlink" title="第1步：单独安装Win10 SDK"></a>第1步：单独安装Win10 SDK</h3><p>SDK下载链接：<a href="https://developer.microsoft.com/zh-cn/windows/downloads/windows-10-sdk/">I am here</a></p>
<ol>
<li>安装时必须使用短路径！（建议放在C盘），如<code>C:\SDK</code></li>
<li>请记住这个路径，因为后续在VS中部署时，解决错误时需要用到此路径</li>
</ol>
<h3 id="第2步：安装Unity，VS2019"><a href="#第2步：安装Unity，VS2019" class="headerlink" title="第2步：安装Unity，VS2019"></a>第2步：安装Unity，VS2019</h3><p>安装完Win10 SDK后</p>
<h3 id="1-安装Unity"><a href="#1-安装Unity" class="headerlink" title="1. 安装Unity"></a>1. 安装Unity</h3><p>链接：<a href="https://unity.cn/releases">传送门</a></p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ol>
<li>推荐下载下图所示，因为其他的安装渠道，博主并没有看到有单独安装组件的界面；不过需要外网才能提高网速，博主在不开启外网情况下，网速在30-40k/s<br><img src="https://img-blog.csdnimg.cn/20200302144820699.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjU2MjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ol>
<ol>
<li><p>安装组件界面：（不必勾选这么多）<br><img src="https://img-blog.csdnimg.cn/20200302145208244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjU2MjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>下载完成后，如需要 Vuforia 组件，请<a href="https://blog.csdn.net/qq_43656250/article/details/104475189">参考此链接</a></p>
</li>
</ol>
<h3 id="2-安装VS2019"><a href="#2-安装VS2019" class="headerlink" title="2. 安装VS2019"></a>2. 安装VS2019</h3><p>链接：<a href="https://visualstudio.microsoft.com/zh-hans/vs/">传送门</a></p>
<h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h4><ol>
<li>组件选择：<br><img src="https://img-blog.csdnimg.cn/20200302145823352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjU2MjUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ol>
<ol>
<li><p>使用Unity的游戏开发：不要勾选编辑器！之前装过了</p>
</li>
<li><p>通用Windows平台开发中会包含Win10 SDK，没办法</p>
</li>
</ol>
<h3 id="3-后续问题"><a href="#3-后续问题" class="headerlink" title="3.后续问题"></a>3.后续问题</h3><p>到此基本就已经结束了，但是在Unity做完项目以后，使用VS2019打开项目时，并不能直接使用，会出现以下报错。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MSB3774找不到SDK“ WindowsMo​​bile，版本&#x3D; 10.0.17763.0”</span><br></pre></td></tr></table></figure>
<p>解决方案：</p>
<p><a href="https://developercommunity.visualstudio.com/content/problem/402362/msb3774-could-not-find-sdk-windowsmobile-version10.html">https://developercommunity.visualstudio.com/content/problem/402362/msb3774-could-not-find-sdk-windowsmobile-version10.html</a></p>
<p><img src="https://i.loli.net/2020/05/20/jcPnxkgND3opC8a.png" alt=""></p>
]]></content>
      <categories>
        <category>Windows环境配置</category>
      </categories>
      <tags>
        <tag>毕设</tag>
      </tags>
  </entry>
  <entry>
    <title>VisonLib SDK 初接触</title>
    <url>/2020/05/18/VisonLib-SDK-%E5%88%9D%E6%8E%A5%E8%A7%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>AR质检方案</p>
<a id="more"></a>
<h2 id="接触VisonLib-SDK"><a href="#接触VisonLib-SDK" class="headerlink" title="接触VisonLib SDK"></a>接触VisonLib SDK</h2><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>由于毕设需求，在网上寻找能够解决质量检测或者测量方面的<em>AR SDK</em>，找到了这篇报道：<a href="https://www.toutiao.com/a6674774916132241931/">VisionLib推跨平台AR质检解决方案，可结合CAD对比检测</a></p>
<p>所以开始准备尝试下</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol>
<li>进<a href="https://visionlib.com/#sect-6">官网</a></li>
<li>注册申请使用<em>SDK</em>（会有人员审核，我是隔一天以后收到的登录密码）</li>
<li>等待邮件通知审核通过，复制账号密码</li>
<li><p>登录官网</p>
</li>
<li><p>直接下载<em>vlUnitySDK v20.3.1 Gengral Release</em></p>
</li>
<li>网页页面拉到底，下载许可证文件</li>
</ol>
<p><img src="https://i.loli.net/2020/05/18/7Nf4r9JIo6HvBKi.png" alt=""></p>
<ol>
<li>新建Unity 项目</li>
<li>导入下载好的<em>package</em></li>
</ol>
<p><img src="C:\Users\VR5\AppData\Roaming\Typora\typora-user-images\image-20200518191431453.png" alt="image-20200518191431453"></p>
<h3 id="配置工作"><a href="#配置工作" class="headerlink" title="配置工作"></a>配置工作</h3><ol>
<li>进入<em>StreamingAssets-&gt;VisionLib</em>目录，将下载的许可证文件（<em>license.xml</em>）复制进此目录下</li>
<li>将电脑接上摄像头</li>
</ol>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>官方demo使用的是折纸折起来的各种汽车，官方资源链接在此 <a href="https://visionlib.com/customer-area/resources/">Resources</a></p>
<p>使用的话可以查看<em>SDK</em>本身自带的<em>demo</em></p>
<p>由于后续写的文章，没有拍摄图片下来，希望各位自己做一下</p>
<h3 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h3><p>感觉和<em>Vuforia</em>功能上差别不大，<em>model target</em>（识别实物）的功能，这个<em>SDK</em>支持多个识别，<em>Vuforia</em>试过不可以。</p>
<p>另外，识别过程中的官方水印也太强了，真的是。。。。</p>
]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>VisonLib</tag>
      </tags>
  </entry>
  <entry>
    <title>word中美观地插入代码方法</title>
    <url>/2020/05/18/word%E4%B8%AD%E7%BE%8E%E8%A7%82%E5%9C%B0%E6%8F%92%E5%85%A5%E4%BB%A3%E7%A0%81%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>如何在word中美观的写入code呢？</p>
<a id="more"></a>
<h2 id="优雅的在-Microsoft-word中插入代码，使文档更美观！！！"><a href="#优雅的在-Microsoft-word中插入代码，使文档更美观！！！" class="headerlink" title="优雅的在 Microsoft word中插入代码，使文档更美观！！！"></a>优雅的在 Microsoft word中插入代码，使文档更美观！！！</h2><blockquote>
<p>本文转载自 <a href="https://blog.csdn.net/u011303443/article/details/50992651?utm_source=copy">https://blog.csdn.net/u011303443/article/details/50992651?utm_source=copy</a></p>
</blockquote>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://i.loli.net/2020/05/18/a7OuKt9znPI5xHM.png" alt=""></p>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><ol>
<li><p>浏览器打开网页<a href="http://www.planetb.ca/syntax-highlight-word">PlanetB</a></p>
<p><img src="https://i.loli.net/2020/05/18/d9HalcCbJYkyULP.png" alt=""></p>
</li>
<li><p>将要复制的代码粘贴进网页下方的<em>code</em>白框中</p>
<p><img src="https://i.loli.net/2020/05/18/mIeGjQL6f1FYbJ3.png" alt=""></p>
</li>
<li><p>选择语言类型</p>
</li>
<li><p>点击<em>Show HighLighted</em></p>
</li>
<li><p>在新打开的页面上<em>Ctrl+A</em>全选，复制，粘贴进<em>word</em>中。</p>
<p><img src="https://i.loli.net/2020/05/18/lEaDSFz5gIA3ctH.png" alt=""></p>
</li>
</ol>
]]></content>
      <categories>
        <category>奇淫技巧</category>
      </categories>
      <tags>
        <tag>word中插入代码</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity重新激活许可证</title>
    <url>/2020/05/06/Unity%E9%87%8D%E6%96%B0%E6%BF%80%E6%B4%BB%E8%AE%B8%E5%8F%AF%E8%AF%81/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>关于出现 <em>your license does not cover Universal Windows Platform Publishing</em> 的错误</p>
<a id="more"></a>
<h2 id="关于出现-your-license-does-not-cover-Universal-Windows-Platform-Publishing-的错误"><a href="#关于出现-your-license-does-not-cover-Universal-Windows-Platform-Publishing-的错误" class="headerlink" title="关于出现 your license does not cover Universal Windows Platform Publishing 的错误"></a>关于出现 <em>your license does not cover Universal Windows Platform Publishing</em> 的错误</h2><p>错误截图如下：</p>
<p><a href="https://imgchr.com/i/YPoiYn"><img src="https://s1.ax1x.com/2020/05/05/YPoiYn.png" alt="YPoiYn.png"></a></p>
<p>解决方法：重新激活许可证即可解决</p>
]]></content>
      <categories>
        <category>错误合集</category>
      </categories>
      <tags>
        <tag>Unity</tag>
      </tags>
  </entry>
  <entry>
    <title>AR资源</title>
    <url>/2020/04/19/AR%E8%B5%84%E6%BA%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>AR视频课程资源与书籍资源汇总</p>
<a id="more"></a>
<blockquote>
<p>本文转载于<a href="https://mp.weixin.qq.com/s?__biz=MzIwMDk2OTQ2MQ==&amp;mid=2247485416&amp;idx=1&amp;sn=e7cc50d5c06b61892b1370f71632a4e8&amp;chksm=96f45a72a183d3641bfca0c3e29bdaf9ec0bdf2e464071cee2ca535191fa23d611403d08f622&amp;mpshare=1&amp;scene=23&amp;srcid=&amp;sharer_sharetime=1587217180782&amp;sharer_shareid=93eb2711304121e2bbb43bede39aadd0#rd">https://mp.weixin.qq.com/s?__biz=MzIwMDk2OTQ2MQ==&amp;mid=2247485416&amp;idx=1&amp;sn=e7cc50d5c06b61892b1370f71632a4e8&amp;chksm=96f45a72a183d3641bfca0c3e29bdaf9ec0bdf2e464071cee2ca535191fa23d611403d08f622&amp;mpshare=1&amp;scene=23&amp;srcid=&amp;sharer_sharetime=1587217180782&amp;sharer_shareid=93eb2711304121e2bbb43bede39aadd0#rd</a></p>
</blockquote>
<p>本文主要整理了一些AR开发过程中会用到的视频课程（公开课）和相关开发书籍，适合AR初级开发者和一些资深程序员学习。</p>
<h2 id="视频课程"><a href="#视频课程" class="headerlink" title="视频课程"></a>视频课程</h2><hr>
<h3 id="EasyAR"><a href="#EasyAR" class="headerlink" title="EasyAR"></a>EasyAR</h3><ol>
<li><p><strong>EasyAR Scene 4.0使用系列教程</strong></p>
<p>课程介绍：EasyAR4.0的简单的使用说明，包括了基本设置，平面图像跟踪，3D物体跟踪，表面跟踪，运动跟踪和稀疏空间云。</p>
<p>image1</p>
<p><a href="https://v.qq.com/vplus/6d186ec7b4372bc7#uin=6d186ec7b4372bc7?page=video">https://v.qq.com/vplus/6d186ec7b4372bc7#uin=6d186ec7b4372bc7?page=video</a></p>
</li>
<li><p><strong>EasyAR4.0官方示例演示</strong></p>
<p><a href="https://v.qq.com/x/page/v0948ktcrbo.html">https://v.qq.com/x/page/v0948ktcrbo.html</a></p>
<p><a href="https://v.qq.com/x/page/q0948767iwz.html">https://v.qq.com/x/page/q0948767iwz.html</a></p>
</li>
<li><p><strong>实现室内AR导航教程</strong></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzIwMDk2OTQ2MQ==&amp;mid=2247485173&amp;idx=1&amp;sn=4bef5df0b2cf08951909d5eab47e8809&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s/LMP5x5jaQkfoH52ILWA5tw</a></p>
</li>
<li><p><strong>小程序AR教程</strong></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzI1NDYzNjcyOQ==&amp;mid=2247484130&amp;idx=1&amp;sn=2a02d650f6a4f365e18d1a6f523ea626&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s/g5mBhw73t54Wl2Tgs2gxtA</a></p>
</li>
<li><p><strong>AR互动大屏项目实战课程（付费）</strong></p>
<p>课程介绍：课程会完整的从整体设计、AR环境搭建、动画制作、动画控制、脚本编写、服务器交互、二维码生成、跨平台修改等进行全流程讲解。</p>
<p><a href="https://edu.manew.com/course/216">https://edu.manew.com/course/216</a></p>
</li>
<li><p><strong>国产AR引擎 EasyAR的使用流程演示</strong></p>
<p><a href="https://www.bilibili.com/video/BV11W411m79a">https://www.bilibili.com/video/BV11W411m79a</a></p>
</li>
<li><p><strong>拓展阅读</strong></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzIwMDk2OTQ2MQ==&amp;mid=2247485383&amp;idx=1&amp;sn=6f5d252057104bc7e4c43dcf4c624caa&amp;chksm=96f45a5da183d34bf2ea3ab6530840deac791c0ef11a2c3805cbdad0adcf1ea6f52a45102889&amp;scene=21#wechat_redirect">完备的EasyAR学习路线，最详细的资源整理！</a></p>
</li>
</ol>
<hr>
<h3 id="ARKit"><a href="#ARKit" class="headerlink" title="ARKit"></a>ARKit</h3><ol>
<li><p><strong>ARKit入门到精通-1.0 -基础内容</strong></p>
<p>课程介绍：其视频内容涵盖了ARKit 1.0版本的实现原理、启动相机、Remote的使用、开启／控制检测、自定义平面、自定义点云、API介绍等。</p>
<p><a href="https://www.bilibili.com/video/BV13W411Z78Z?from=search&amp;seid=15033026591829912754">https://www.bilibili.com/video/BV13W411Z78Z?from=search&amp;seid=15033026591829912754</a></p>
</li>
</ol>
<ol>
<li><p><strong>ARKit入门到精通 1.0 - 实战案例 AR打地鼠</strong></p>
<p>课程介绍：主要通过一个实际案例【AR打地鼠】对ARKit1.0版本的使用做一个复习强化。</p>
<p><a href="https://www.bilibili.com/video/BV1GW411Z7Pb?from=search&amp;seid=15033026591829912754">https://www.bilibili.com/video/BV1GW411Z7Pb?from=search&amp;seid=15033026591829912754</a></p>
<ol>
<li><p><strong>ARKit入门到精通-1.5 -基础内容</strong></p>
<p>课程介绍：其视频介绍了ARKit 1.5版本的面部追踪、人脸检测、垂直平面检测、图片识别等特性。</p>
<p><a href="https://www.bilibili.com/video/BV1AW411Z7zu?from=search&amp;seid=15033026591829912754">https://www.bilibili.com/video/BV1AW411Z7zu?from=search&amp;seid=15033026591829912754</a></p>
</li>
<li><p><strong>ARKit入门到精通-2.0 -基础内容</strong></p>
<p>课程介绍：其视频介绍了ARKit 2.0版本多人互动、数据共享等功能。</p>
<p><a href="https://www.bilibili.com/video/BV1JW411C7oc?from=search&amp;seid=15033026591829912754">https://www.bilibili.com/video/BV1JW411C7oc?from=search&amp;seid=15033026591829912754</a></p>
</li>
</ol>
</li>
<li><p><strong>ARKit视觉风暴</strong></p>
<p>课程介绍：本套课程从技术理念到项目实践，教大家系统掌握ARKit技术开发，随心打造iOS端AR增强现实应用。由一开始的开发环境搭建，到Unity ARKit Plugin、ARFoundation ARKit等不同时期技术的讲解。从平面模型放置、识别图片、手势交互、3D物体识别、面部AR贴纸、光照估计、环境探针、多人AR技术，甚至包含ARKit3.0的动作捕捉技术等。</p>
<p><a href="https://edu.csdn.net/course/detail/27549?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158718710819726869002335%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fcourse.%2522%257D&amp;request_id=158718710819726869002335&amp;biz_id=3&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~first_rank_v2~rank_v25-4">https://edu.csdn.net/course/detail/27549?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158718710819726869002335%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fcourse.%2522%257D&amp;request_id=158718710819726869002335&amp;biz_id=3&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~first_rank_v2~rank_v25-4</a></p>
</li>
<li><p><strong>ARKit玩起来 - AR卡通秀</strong></p>
<p>课程介绍：此课程使用ARKit 面部检测功能,将虚拟物体放置到面部</p>
<p><a href="https://www.bilibili.com/video/BV1AW411Z77u?from=search&amp;seid=15033026591829912754">https://www.bilibili.com/video/BV1AW411Z77u?from=search&amp;seid=15033026591829912754</a></p>
</li>
<li><p><strong>零基础，17分钟制作AR丧尸游戏</strong></p>
<p><a href="https://www.bilibili.com/video/BV1Rx411i764?from=search&amp;seid=15033026591829912754">https://www.bilibili.com/video/BV1Rx411i764?from=search&amp;seid=15033026591829912754</a></p>
</li>
<li><p><strong>ARkit实战开发视频教程</strong></p>
<p>课程介绍：通过多个实战案例实际操作开发，从而掌握ARkit的相关开发技能：1.认知ARkit的工作流。2.slam与imu的实际应用。3.平面检测与打击测试。4.光照捕获原理。5.在三维引擎上开发内容。6.物体追踪摄像机。7.实现简易版测量尺。8.实现任意门效果（空间穿越）。</p>
<p><a href="https://edu.51cto.com/course/10845.html">https://edu.51cto.com/course/10845.html</a></p>
</li>
<li><p><strong>ARKit玩起来 - AR预览唱片</strong></p>
<p>课程介绍：使用ARKit-1.5 图片检测功能, 在识别到图片之后播放视频</p>
<p><a href="https://www.bilibili.com/video/BV1AW411Z7Ju?from=search&amp;seid=15033026591829912754">https://www.bilibili.com/video/BV1AW411Z7Ju?from=search&amp;seid=15033026591829912754</a></p>
</li>
<li><p><strong>拓展阅读</strong></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzIwMDk2OTQ2MQ==&amp;mid=2247485061&amp;idx=2&amp;sn=d32a791c4e658cf9a44f0746190585ff&amp;chksm=96f45b1fa183d2092b002e564f3522f95cb2c2e862d2af8f8d7130b001068b31d4c81ee75725&amp;scene=21#wechat_redirect">ARKit开发资源合集</a></p>
</li>
</ol>
<hr>
<h3 id="ARCore"><a href="#ARCore" class="headerlink" title="ARCore"></a>ARCore</h3><ol>
<li><p><strong>ARCore增强现实开发从0到1</strong></p>
<p>课程介绍：课程由浅入深，教快速掌握ARCore开发技术，打造出属于自己的AR增强现实应用。由一开始的开发环境搭建，到ARCore的讲解，再到识别图片、手势交互、甚至可以做出热门短视频的AR贴纸特效。</p>
<p><a href="https://ke.qq.com/course/436124">https://ke.qq.com/course/436124</a></p>
</li>
<li><p><strong>10分钟unity上ARCore发布流程</strong></p>
<p><a href="https://www.bilibili.com/video/av837691674/">https://www.bilibili.com/video/av837691674/</a></p>
</li>
<li><p><strong>Unity ARCore 开发全流程演示</strong><br><a href="https://www.bilibili.com/video/BV1SW411o7zj?from=search&amp;seid=11224329855409183560">https://www.bilibili.com/video/BV1SW411o7zj?from=search&amp;seid=11224329855409183560</a></p>
</li>
<li><p><strong>Unity+ARcore 实现传送门</strong></p>
<p><a href="https://www.bilibili.com/video/BV1tb411N7i6?from=search&amp;seid=11224329855409183560">https://www.bilibili.com/video/BV1tb411N7i6?from=search&amp;seid=11224329855409183560</a></p>
</li>
<li><p><strong>如何在Unity中创建ARCore的应用</strong></p>
<p><a href="https://www.bilibili.com/video/BV1Yx41177nV?from=search&amp;seid=11224329855409183560">https://www.bilibili.com/video/BV1Yx41177nV?from=search&amp;seid=11224329855409183560</a></p>
</li>
<li><p><strong>HoloLens与ARcore第三视角开发</strong></p>
<p>课程介绍：使用ARcore实现HoloLens第三视角开发，课程包括客户端及服务端Socket异步套接字网络开发，HoloLens接入VuforiaSDK，ARcore与HoloLens空间同步，房间系统，命令同步等。</p>
<p><a href="https://edu.csdn.net/course/detail/23985">https://edu.csdn.net/course/detail/23985</a></p>
</li>
<li><p><strong>拓展阅读</strong></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzIwMDk2OTQ2MQ==&amp;mid=2247484948&amp;idx=1&amp;sn=bb7a11416021adcd9b8d305756098a7c&amp;chksm=96f45b8ea183d298805439eca4fb5c6feb247cf4bd838f1f2a05031108a43cdcceceb3d0f469&amp;scene=21#wechat_redirect">【AR优秀开源项目】ARCore项目工程汇总</a></p>
</li>
</ol>
<hr>
<h3 id="Hololens"><a href="#Hololens" class="headerlink" title="Hololens"></a>Hololens</h3><ol>
<li><p><strong>Hololens开发入门篇</strong></p>
<p>课程介绍：学会Hololens模拟器开发环境的配置及使用方法 应用凝视（Gaze）、手势（Guesture）、英文语音控制（Voice）、立体音效（Spatial sound）、空间映射（Spatial mapping）功能整合开发一个应用并在模拟器上部署运行。</p>
<p><a href="https://edu.csdn.net/course/detail/6639">https://edu.csdn.net/course/detail/6639</a></p>
</li>
<li><p><strong>Hololens MR 技术分享</strong></p>
<p><a href="https://edu.manew.com/my/course/204">https://edu.manew.com/my/course/204</a></p>
</li>
<li><p><strong>HoloLens开发教程</strong></p>
<p><a href="https://space.bilibili.com/109590528?from=search&amp;seid=11372730618997738226">https://space.bilibili.com/109590528?from=search&amp;seid=11372730618997738226</a></p>
</li>
<li><p><strong>PP先生帮你5分钟搞定HoloLens2程序</strong></p>
<p><a href="https://www.bilibili.com/video/BV1hJ411U7Mb?from=search&amp;seid=6201309428496584363">https://www.bilibili.com/video/BV1hJ411U7Mb?from=search&amp;seid=6201309428496584363</a></p>
</li>
<li><p><strong>Unity HoloLens 开发教程系列</strong></p>
<p><a href="https://space.bilibili.com/19357096/video">https://space.bilibili.com/19357096/video</a></p>
</li>
<li><p><strong>HoloLens与ARcore第三视角开发</strong></p>
<p>课程介绍：使用ARcore实现HoloLens第三视角开发，课程包括客户端及服务端Socket异步套接字网络开发，HoloLens接入VuforiaSDK，ARcore与HoloLens空间同步，房间系统，命令同步等。</p>
<p><a href="https://edu.csdn.net/course/detail/23985">https://edu.csdn.net/course/detail/23985</a></p>
</li>
<li><p><strong>HoloLens全息应用开发</strong></p>
<p><a href="https://edu.csdn.net/course/detail/4897/88469?ops_request_misc=&amp;request_id=&amp;biz_id=105&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~sobaiduweb~default-0">https://edu.csdn.net/course/detail/4897/88469?ops_request_misc=&amp;request_id=&amp;biz_id=105&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~sobaiduweb~default-0</a></p>
</li>
<li><p><strong>Hololens全息房产项目（上）</strong></p>
<p>课程介绍：讲解hololens的环境配置：模拟器安装配置，VS配置，系统配置，Unity配置。基础功能：语音、凝视以及手势控制，空间扫描与定位。经典的hololens设计方式——传送门，通过传送门在现实空间与虚拟空间穿梭。</p>
<p><a href="https://edu.manew.com/course/350">https://edu.manew.com/course/350</a></p>
</li>
<li><p><strong>拓展阅读</strong></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzIwMDk2OTQ2MQ==&amp;mid=2247484878&amp;idx=1&amp;sn=db93b4334cc4781d038eaf7cc078e260&amp;chksm=96f45854a183d1421303227f11ffb5af22d81c0205f222f9858ca6b1d2b35262439a5bfb5222&amp;scene=21#wechat_redirect">HoloLens应用场景大盘点（上）</a></p>
</li>
</ol>
<hr>
<h3 id="Vuforia"><a href="#Vuforia" class="headerlink" title="Vuforia"></a>Vuforia</h3><ol>
<li><p><strong>【SiKi学院Unity3D视频教程】AR系列教程 - Vuforia入门</strong></p>
<p><a href="https://www.bilibili.com/video/BV134411s725?from=search&amp;seid=819133152602426925">https://www.bilibili.com/video/BV134411s725?from=search&amp;seid=819133152602426925</a></p>
</li>
<li><p><strong>Unity AR开发实践之Vuforia详解</strong></p>
<p><a href="https://www.bilibili.com/video/BV1At41117J9?from=search&amp;seid=13345706439745907767">https://www.bilibili.com/video/BV1At41117J9?from=search&amp;seid=13345706439745907767</a></p>
</li>
<li><p><strong>Unity + Vuforia 构建企业级AR应用</strong></p>
<p><a href="https://www.bilibili.com/video/BV1CJ411t7qp/?spm_id_from=333.788.videocard.3">https://www.bilibili.com/video/BV1CJ411t7qp/?spm_id_from=333.788.videocard.3</a></p>
</li>
<li><p><strong>教你用Unity制作一个AR初音尬舞</strong></p>
<p><a href="https://www.bilibili.com/video/BV1Ux411h75b/?spm_id_from=333.788.videocard.1">https://www.bilibili.com/video/BV1Ux411h75b/?spm_id_from=333.788.videocard.1</a></p>
</li>
<li><p><strong>Vuforia远程视频AR标注</strong></p>
<p>课程介绍：Vuforia+UnityChatSDK开发远程视频AR标注，实现Vuforia Chalk的功能，支持PC、Android、IOS平台。</p>
<p><a href="https://edu.csdn.net/course/detail/27280?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158719585119724845045607%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fcourse.%2522%257D&amp;request_id=158719585119724845045607&amp;biz_id=3&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~first_rank_v2~rank_v25-2">https://edu.csdn.net/course/detail/27280?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158719585119724845045607%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fcourse.%2522%257D&amp;request_id=158719585119724845045607&amp;biz_id=3&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~first_rank_v2~rank_v25-2</a></p>
</li>
<li><p><strong>Vuforia Studio工业增强现实应用技术及最佳实践</strong></p>
<p>课程介绍：Vuforia Studio是PTC基于全球最领先的增强现实平台Vuforia开发的AR企业级工具，可通过简单的拖放操作界面，打造以企业为重点的AR体验。企业可利用现有的3D资产创建可扩展的服务应用程序、专注于培训体验、销售和营销虚拟演示，甚至是利用Vuforia Studio实现制造流程序列。介绍企业级AR的应用价值，使用PTC Vuforia Studio如何降低企业开发成本，简化系统可扩展性，利用企业丰富的三维数据和物联网资源，加速创建引人注目的增强现实内容，轻松提供洞察力。</p>
<p><a href="https://edu.csdn.net/course/detail/20764?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158719585119724845045607%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fcourse.%2522%257D&amp;request_id=158719585119724845045607&amp;biz_id=3&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~first_rank_v2~rank_v25-1">https://edu.csdn.net/course/detail/20764?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158719585119724845045607%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fcourse.%2522%257D&amp;request_id=158719585119724845045607&amp;biz_id=3&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~first_rank_v2~rank_v25-1</a></p>
</li>
<li><p><strong>增强现实，超凡体验 Qualcomm Vuforia SDK在线培训</strong></p>
<p>课程介绍：Qualcomm Vuforia 移动视觉平台和开发套件的功能特点作深度讲解，同时也包括相关配套工具，新的云端识别服务和资费方案概况。除此之外培训中还将详细介绍新发布的Vuforia 5新功能</p>
<p><a href="https://edu.csdn.net/course/detail/1467?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158719585119724845045607%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fcourse.%2522%257D&amp;request_id=158719585119724845045607&amp;biz_id=3&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~first_rank_v2~rank_v25-3">https://edu.csdn.net/course/detail/1467?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158719585119724845045607%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fcourse.%2522%257D&amp;request_id=158719585119724845045607&amp;biz_id=3&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~first_rank_v2~rank_v25-3</a></p>
</li>
<li><p><strong>基于Unity 的AR 游戏开发实践</strong></p>
<p>课程介绍：本次课程将以一个具体的坦克游戏为例，介绍AR技术在Unity中的使用。AR技术通过在真实场景中增加虚拟场景，创造了一种全新的交互体验。目前，这项技术已经应用到了游戏，教育等诸多领域， 比如火遍全球的Pokemongo游戏。Unity通过集成Vuforia插件，帮助开发者可以方便的把AR技术应用到自己开发的游戏或者应用中。</p>
<p><a href="https://edu.csdn.net/course/detail/5659?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158719585119724845045607%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fcourse.%2522%257D&amp;request_id=158719585119724845045607&amp;biz_id=3&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~first_rank_v2~rank_v25-6">https://edu.csdn.net/course/detail/5659?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158719585119724845045607%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fcourse.%2522%257D&amp;request_id=158719585119724845045607&amp;biz_id=3&amp;utm_source=distribute.pc_search_result.none-task-course-2~course~first_rank_v2~rank_v25-6</a></p>
</li>
<li><p><strong>Vuforia AR实战教程</strong></p>
<p><a href="https://www.taikr.com/course/531">https://www.taikr.com/course/531</a></p>
</li>
<li><p><strong>PokemonGo-LBS AR项目实战</strong></p>
<p>课程介绍：基于Unity2017.3.1 本课程将带领大家制作AR游戏中最火的PokemonGO，侧重于快速简单的实现LBS基于地理的GPS定位技术、AR捕捉功能。</p>
<p><a href="https://edu.manew.com/course/516">https://edu.manew.com/course/516</a></p>
</li>
<li><p><strong>AR - 双卡互动 专题讲解</strong></p>
<p><a href="https://edu.manew.com/my/course/175">https://edu.manew.com/my/course/175</a></p>
</li>
<li><p><strong>AR房地产 - 实战讲解</strong></p>
<p><a href="https://edu.manew.com/course/172">https://edu.manew.com/course/172</a></p>
</li>
<li><p><strong>AR涂涂乐 （Vuforia） - 实战讲解</strong></p>
<p>课程介绍：本课程将带领大家使用VuforiaSDK（高通）制作涂色AR，课程重点在于如何获取画面，a获取后的画面如何计算得出正确的位置，b拉伸贴图匹配UV，c通过UI来判断识别图在屏幕中的位置。课程会完整的从平面图形制作，模型制作，C#,Shader编写进行全流程讲解。并将思路与详细制作过程分开，适合不同基础的学员学习。制作中使用的PS、Maya、Unity软件操作细节都会一一讲解并将课程源码，操作方式，快捷键说明附在课程资料中供大家下载。即使零基础也可完整制作最终APP(安卓和IOS)。</p>
<p><a href="https://edu.manew.com/course/162">https://edu.manew.com/course/162</a></p>
</li>
<li><p><strong>增强现实AR基础实例讲解</strong></p>
<p><a href="https://edu.manew.com/course/106">https://edu.manew.com/course/106</a></p>
</li>
</ol>
<hr>
<h3 id="其他SDK"><a href="#其他SDK" class="headerlink" title="其他SDK"></a>其他SDK</h3><ol>
<li><p><strong>Nreal SDK教程 - 10分钟创建Nreal AR应用程序</strong></p>
<p><a href="https://www.bilibili.com/video/BV1j4411z7Us?from=search&amp;seid=7664168149376911358">https://www.bilibili.com/video/BV1j4411z7Us?from=search&amp;seid=7664168149376911358</a></p>
</li>
<li><p><strong>Nreal MR眼镜快速开发教程</strong></p>
<p><a href="https://www.bilibili.com/video/BV1zJ411C7BJ?from=search&amp;seid=7664168149376911358">https://www.bilibili.com/video/BV1zJ411C7BJ?from=search&amp;seid=7664168149376911358</a></p>
</li>
<li><p><strong>百度AR开发系列教程</strong></p>
<p><a href="https://ai.baidu.com/support/video">https://ai.baidu.com/support/video</a></p>
</li>
</ol>
<hr>
<h2 id="开发书籍"><a href="#开发书籍" class="headerlink" title="开发书籍"></a>开发书籍</h2><h3 id="ARKit开发实战"><a href="#ARKit开发实战" class="headerlink" title="ARKit开发实战"></a>ARKit开发实战</h3><p>本书主要介绍ARKit的原生API，分别从世界跟踪、场景理解、几何渲染、人脸跟踪4个方面详细叙述ARKit的功能，以及在Unity中接入ARKit的方法。并且在开始部分添加了使用ARKit所必需的一些基础知识，为了减少接受难度，本书只会叙述用到的知识点。本书的最后一部分介绍了EasyAR和Vuforia这两款AR SDK的功能和使用方法。本书适合对ARKit感兴趣的iOS开发者，以及其他想要了解ARKit原生API的读者阅读。</p>
<h3 id="Unity-AR-增强现实完全自学教程"><a href="#Unity-AR-增强现实完全自学教程" class="headerlink" title="Unity AR 增强现实完全自学教程"></a>Unity AR 增强现实完全自学教程</h3><p>本书是初学者快速学习AR应用的全面教程，从基础理论到经典的AR案例都进行了详尽的讲解。保证即便是零基础的读者也可以通过本书学习并制作出常见的AR应用。本书共分10章，基础部分会介绍Unity的安装配置、基础操作、C#编程基础、坐标系统、UI系统以及AR应用在常用平台（PC、Android、iOS）的发布等。AR案例部分会以涂色类AR、多卡互动AR、恐龙博物馆AR大屏互动为例，在实际制作过程中教大家AR应用的通用设计方式，以及如何处理AR应用在制作过程中常见的问题。为了方便读者学习，本书随书提供课程中案例的所有资源及源文件，可以随时查阅对比。本书适合于想要进入AR行业的兴趣爱好者，传统行业转型AR的管理者、投资人，以及针对AR中特定案例有需求的从业人员。</p>
<h3 id="Unity-2018-Augmented-Reality-Projects"><a href="#Unity-2018-Augmented-Reality-Projects" class="headerlink" title="Unity 2018 Augmented Reality Projects"></a>Unity 2018 Augmented Reality Projects</h3><p>这本书教你如何使用Unity来开发AR应用程序，可以通过HoloLens和Daydream等设备来体验。在逐步实现基于传感器的AR应用程序之前，你将学习如何在你的相机上集成、动画和覆盖3D对象。</p>
<h3 id="沉浸感：不可错过的虚拟现实革命"><a href="#沉浸感：不可错过的虚拟现实革命" class="headerlink" title="沉浸感：不可错过的虚拟现实革命"></a>沉浸感：不可错过的虚拟现实革命</h3><p>本书是作者关于虚拟现实（VR）的长期思考，深入讨论了虚拟现实的本质、特点、应用前景，以及商业价值。通过虚拟现实这一个大趋势，作者也讲解了增强现实、混合现实、IP、模因、注意力经济等重要话题。</p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>ARCore导入Unity，打包HelloAR</title>
    <url>/2020/04/03/ARCore%E5%AF%BC%E5%85%A5Unity%EF%BC%8C%E6%89%93%E5%8C%85HelloAR/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>记录第一次使用ARCore的报错经历</p>
<a id="more"></a>
<h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><h4 id="前提要求"><a href="#前提要求" class="headerlink" title="前提要求"></a>前提要求</h4><p>硬件：<a href="https://developers.google.com/ar/discover/supported-devices">支持ARCore的手机</a></p>
<p>软件：</p>
<ul>
<li>Unity2017.4.9f1及以上版本</li>
<li>ARCore SDK for Unity 1.5.0 或更高版本</li>
<li>使用<a href="https://developer.android.com/studio">Android Studio</a> 中的 SDK 管理器安装的 Android SDK <strong>7.0（API 级别 24）或更高版本</strong></li>
</ul>
<h4 id="第一步：下载SDK包"><a href="#第一步：下载SDK包" class="headerlink" title="第一步：下载SDK包"></a>第一步：下载SDK包</h4><p>下载 <a href="https://github.com/google-ar/arcore-unity-sdk/releases">ARCore SDK for Unity <strong>1.5.0 或更高版本</strong></a>，下载的 SDK 文件名为 <code>arcore-unity-sdk-v1.5.0.unitypackage</code>。</p>
<h4 id="第二步：新建项目并导入SDK"><a href="#第二步：新建项目并导入SDK" class="headerlink" title="第二步：新建项目并导入SDK"></a>第二步：新建项目并导入SDK</h4><ol>
<li>打开 Unity 并新建一个 <strong>3D</strong> 项目。</li>
<li>选择 <strong>Assets &gt; Import Package &gt; Custom Package</strong>。</li>
<li>选择您上面下载的 <code>arcore-unity-sdk-v1.5.0.unitypackage</code> Unity 软件包。</li>
<li>在 <strong>Importing Package</strong> 对话框中，确保已选择所有软件包选项，并点击 <strong>Import</strong>。</li>
<li>出现提示时接受任何 <a href="https://docs.unity3d.com/Manual/APIUpdater.html">API 升级</a>。</li>
</ol>
<h4 id="第三步：配置"><a href="#第三步：配置" class="headerlink" title="第三步：配置"></a>第三步：配置</h4><ol>
<li><p>转到 <strong>File &gt; Build Settings</strong> 以打开 <strong><a href="https://docs.unity3d.com/Manual/BuildSettings.html">Build Settings</a></strong> 窗口。</p>
</li>
<li><p>选择 <strong>Android</strong> 并点击 <strong>Switch Platform</strong>。</p>
</li>
<li><p>在 <strong>Build Settings</strong> 窗口中，点击 <strong>Player Settings</strong>。</p>
</li>
<li><p>在Inspector窗口中，配置下列播放器设置：</p>
<p>| 设置                                                         | 值                                                           |<br>| :—————————————————————————————- | :—————————————————————————————- |<br>| <strong>Player Settings</strong> &gt; <strong>Other Settings</strong> &gt; <strong>Package Name</strong>  | 创建一个 Java 软件包名称格式的唯一应用 ID。 例如，使用 <code>com.example.helloAR</code> |<br>| <strong>Player Settings</strong> &gt; <strong>Other Settings</strong> &gt; <strong>Minimum API Level</strong> | Android 7.0 或更高版本                                       |<br>| <strong>Player Settings</strong> &gt; <strong>Other Settings</strong> &gt; <strong>Target API Level</strong> | <del>Android 7.0 或更高版本</del> 直接自动最高版本                  |<br>| <strong>Player Settings</strong> &gt; <strong>XR Settings</strong> &gt; <strong>ARCore Supported</strong> | 启用                                                         |</p>
</li>
</ol>
<h4 id="第四步：解决报错"><a href="#第四步：解决报错" class="headerlink" title="第四步：解决报错"></a>第四步：解决报错</h4><p>导入SDK后，控制台报错如下：</p>
<blockquote>
<p>The type or namespace name ‘SpatialTracking’ does not exist in the namespace ‘UnityEngine’</p>
</blockquote>
<p>大概有17条错误</p>
<p><strong>解决方法：</strong></p>
<ol>
<li>打开windows -&gt; package manger</li>
<li>分别搜索 <strong>Multiplayer HLAPI </strong>和 <strong>XR Legacy Input Helper </strong>,安装即可</li>
</ol>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><blockquote>
<p><a href="https://developers.google.com/ar/develop/unity/quickstart-android">https://developers.google.com/ar/develop/unity/quickstart-android</a></p>
<p><a href="https://forum.unity.com/threads/he-type-or-namespace-name-spatialtracking-does-not-exist-in-the-namespace-unityengine-are-you-m.650662/">https://forum.unity.com/threads/he-type-or-namespace-name-spatialtracking-does-not-exist-in-the-namespace-unityengine-are-you-m.650662/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>ARCore</tag>
        <tag>HelloAR</tag>
      </tags>
  </entry>
  <entry>
    <title>Vuforia-在Unity2019.3.4中安装Vuforia</title>
    <url>/2020/04/02/Vuforia-%E5%9C%A8Unity2019-3-4%E4%B8%AD%E5%AE%89%E8%A3%85Vuforia/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>安装unity</p>
<a id="more"></a>
<h3 id="下载安装Unity2019-3-4-f1"><a href="#下载安装Unity2019-3-4-f1" class="headerlink" title="下载安装Unity2019.3.4.f1"></a>下载安装Unity2019.3.4.f1</h3><h4 id="方式1："><a href="#方式1：" class="headerlink" title="方式1："></a>方式1：</h4><ul>
<li>进入官方网站 <a href="https://unity.com/">https://unity.com/</a></li>
<li>在页面最下方找到 download unity</li>
<li>在页面最下方找到 older versions</li>
<li>下载安装在线版即可</li>
</ul>
<h4 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a>方式二：</h4><ul>
<li>unityHub上直接下载</li>
</ul>
<p>PS：方式二有离线文档可供选择</p>
<h3 id="安装Vuforia"><a href="#安装Vuforia" class="headerlink" title="安装Vuforia"></a>安装Vuforia</h3><ul>
<li>windows -&gt; package manager -&gt; 搜索 Vuforia 即可</li>
</ul>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>Vuforia</tag>
      </tags>
  </entry>
  <entry>
    <title>Vuforia-ImageTarget阶段Demo小总结</title>
    <url>/2020/04/02/Vuforia-%E9%98%B6%E6%AE%B5Demo%E5%B0%8F%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p><a href="https://github.com/junlin49/VuforiaDemo">https://github.com/junlin49/VuforiaDemo</a></p>
<p>VuforiaImageDemo_1_Ashe</p>
<hr>
<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>实现如下效果：</p>
<ul>
<li>相机对准黑桃K后，出现人物</li>
<li>人物先从纸牌中出现，后跳舞，再奔跑，最后攻击</li>
<li>有特效要求</li>
<li>要有截屏，闪光灯，自动对焦功能</li>
<li>双击人物，人物消失</li>
<li>可以两指放大，缩小</li>
<li>可旋转</li>
</ul>
<hr>
<h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><ol>
<li><p>自动对焦</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">       <span class="keyword">var</span> vuforia = VuforiaARController.Instance;</span><br><span class="line">       vuforia.RegisterVuforiaStartedCallback(OnVuforiaStarted);<span class="comment">// Vuforia启动完成时的回调函数</span></span><br><span class="line">       vuforia.RegisterOnPauseCallback(OnVuforiaPaused);<span class="comment">//Vuforia暂停时的回调函数</span></span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnVuforiaStarted</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">       <span class="comment">//程序启动，自动对焦</span></span><br><span class="line">       CameraDevice.Instance.SetFocusMode(CameraDevice.FocusMode.FOCUS_MODE_CONTINUOUSAUTO);<span class="comment">//连续自动对焦</span></span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnVuforiaPaused</span>(<span class="params"><span class="built_in">bool</span> isPaused</span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetCameraFocus</span>(<span class="params"></span>)<span class="comment">//手动单次对焦</span></span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">       CameraDevice.Instance.SetFocusMode(CameraDevice.FocusMode.FOCUS_MODE_TRIGGERAUTO);<span class="comment">//手动单次对焦</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>闪光灯</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetFlash</span>(<span class="params"></span>)<span class="comment">//设置闪光灯</span></span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        CameraDevice.Instance.SetFlashTorchMode(openFlash);</span><br><span class="line">        openFlash = !openFlash;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>双击消失</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> touchTime;</span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">bool</span> touchNew = <span class="literal">false</span>;</span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">       <span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))<span class="comment">//有触屏</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="comment">//从点击位置发射射线</span></span><br><span class="line">           Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class="line">          <span class="comment">//接受返回信息</span></span><br><span class="line">           RaycastHit hitInfor;</span><br><span class="line">   </span><br><span class="line">           <span class="keyword">if</span> (Physics.Raycast(ray,<span class="keyword">out</span> hitInfor))<span class="comment">//如果接受到信息</span></span><br><span class="line">           &#123;</span><br><span class="line">             <span class="comment">//  if(Input.touchCount == 1 &amp;&amp; Input.GetTouch(0).phase == TouchPhase.Began)//1根手指点击，且刚刚点击</span></span><br><span class="line">              <span class="comment">// &#123;</span></span><br><span class="line">                   <span class="comment">//双击</span></span><br><span class="line">                   <span class="comment">//if(Input.GetTouch(0).tapCount == 2)//双击</span></span><br><span class="line">                   <span class="comment">//&#123;</span></span><br><span class="line">                   <span class="comment">//    Destroy(hitInfor.collider.gameObject);//射线射到的collider所属的游戏物体，销毁</span></span><br><span class="line">                   <span class="comment">//&#125;</span></span><br><span class="line">   </span><br><span class="line">                   <span class="comment">//长按aixi，销毁</span></span><br><span class="line">                   <span class="keyword">if</span> (Input.touchCount == <span class="number">1</span>)<span class="comment">//1根手指按</span></span><br><span class="line">                   &#123;</span><br><span class="line">                       Touch touch = Input.GetTouch(<span class="number">0</span>);<span class="comment">//第一根触摸的手指</span></span><br><span class="line">                       <span class="keyword">if</span> (touch.phase == TouchPhase.Began)<span class="comment">//刚按，A finger touched the screen.</span></span><br><span class="line">                   &#123;</span><br><span class="line">                           touchNew = <span class="literal">true</span>;</span><br><span class="line">                           touchTime = Time.time;<span class="comment">//记录开始按的时候的时间</span></span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="keyword">else</span> <span class="keyword">if</span> (touch.phase == TouchPhase.Stationary)<span class="comment">//按住静止不动；A finger is touching the screen but hasn&#x27;t moved.</span></span><br><span class="line">                   &#123;</span><br><span class="line">                         <span class="keyword">if</span> (touchNew == <span class="literal">true</span> &amp;&amp; Time.time-touchTime&gt;<span class="number">1</span>)<span class="comment">//长按1s后</span></span><br><span class="line">                           &#123;</span><br><span class="line">                               touchNew = <span class="literal">false</span>;</span><br><span class="line">                               Destroy(hitInfor.collider.gameObject);</span><br><span class="line">                           &#125;</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="keyword">else</span></span><br><span class="line">                       &#123;</span><br><span class="line">                           touchNew = <span class="literal">false</span>;</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">              <span class="comment">// &#125;</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>旋转放缩</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))<span class="comment">//触屏了</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Input.touchCount == <span class="number">1</span>)<span class="comment">//一个手指头</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Input.GetTouch(<span class="number">0</span>).phase == TouchPhase.Moved)<span class="comment">//状态移动</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">this</span>.transform.Rotate(<span class="number">0</span>, -xRotationSpeed * Time.deltaTime * Input.GetAxis (<span class="string">&quot;Mouse X&quot;</span>),<span class="number">0</span>,Space.World);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Input.touchCount == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Input.GetTouch(<span class="number">0</span>).phase == TouchPhase.Moved || Input.GetTouch(<span class="number">1</span>).phase == TouchPhase.Moved)</span><br><span class="line">                &#123;</span><br><span class="line">                    Vector2 temPositon1 = Input.GetTouch(<span class="number">0</span>).position;</span><br><span class="line">                    Vector2 temPositon2 = Input.GetTouch(<span class="number">1</span>).position;</span><br><span class="line">                    <span class="keyword">if</span> (IsLarge(oldPositon1,oldPositon2,temPositon1,temPositon2))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//arCamera.fieldOfView -= arCamera.fieldOfView*0.01*</span></span><br><span class="line">                        <span class="keyword">this</span>.transform.localScale = <span class="keyword">new</span> Vector3(</span><br><span class="line">                            <span class="keyword">this</span>.transform.localScale.x * scaleOut, <span class="keyword">this</span>.transform.localScale.y * scaleOut, <span class="keyword">this</span>.transform.localScale.z * scaleOut);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">this</span>.transform.localScale = <span class="keyword">new</span> Vector3(</span><br><span class="line">                           <span class="keyword">this</span>.transform.localScale.x * scaleIn, <span class="keyword">this</span>.transform.localScale.y * scaleIn, <span class="keyword">this</span>.transform.localScale.z * scaleIn);</span><br><span class="line">                    &#125;</span><br><span class="line">                    oldPositon1 = temPositon1;</span><br><span class="line">                    oldPositon2 = temPositon2;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">IsLarge</span>(<span class="params">Vector2 oldPoint1, Vector2 oldPoint2 , Vector2 newPoint1 , Vector2 newPoint2</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Vector2.Distance(oldPoint1, oldPoint2) &lt; Vector2.Distance(newPoint1,newPoint2))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></h2><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p><a href="https://imgchr.com/i/8OLECj"><img src="https://s1.ax1x.com/2020/03/25/8OLECj.jpg" alt="8OLECj.jpg"></a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>Vuforia</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity-场景切换</title>
    <url>/2020/04/02/Unity-%E5%9C%BA%E6%99%AF%E5%88%87%E6%8D%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文记录如何在Unity中实现场景切换</p>
<a id="more"></a>
<p>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public void Click()</span><br><span class="line">&#123;</span><br><span class="line">      Invoke(&quot;ChangeScene&quot;, 1);  # 1s后切换场景，延时作用</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">void ChangeScene()</span><br><span class="line">&#123;</span><br><span class="line">      SceneManager.LoadScene(&quot;场景名字&quot;);  &#x2F;&#x2F; 登陆成功则切换到游戏界面</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="加载当前场景"><a href="#加载当前场景" class="headerlink" title="加载当前场景"></a>加载当前场景</h3><p>比如点击重新开始按钮后，重新开始游戏。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SceneManager.LoadScene(SceneManager.GetActiveScene().name);</span><br></pre></td></tr></table></figure>
<p>注意该语句执行的时候，仍会执行<code>update</code>函数。因此在<code>update</code>中置位标志位要多加留意。</p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><blockquote>
<p><a href="https://www.jianshu.com/p/fb688b80986b?tdsourcetag=s_pcqq_aiomsg">https://www.jianshu.com/p/fb688b80986b?tdsourcetag=s_pcqq_aiomsg</a></p>
</blockquote>
]]></content>
      <categories>
        <category>实践</category>
      </categories>
      <tags>
        <tag>Unity</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-Vuforia更新错误:Failed to resolve packages</title>
    <url>/2020/04/02/%E9%97%AE%E9%A2%98-Vuforia%E6%9B%B4%E6%96%B0%E9%94%99%E8%AF%AF-Failed-to-resolve-packages/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>新冠期间总是不开学，最近Vuforia更新了9.0版本，所以尝试下</p>
<a id="more"></a>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>错误提示：</p>
<p>Failed to resolve packages: Cannot read property ‘scopedRegistries’ of undefined. No packages loaded.</p>
<p>如果使用 Unity 2019及以上版本，可以发现 AR camera 的输入密钥页面，已经提示有新版本可用，如下：</p>
<p><a href="https://imgchr.com/i/G3Lmzn"><img src="https://s1.ax1x.com/2020/04/01/G3Lmzn.png" alt="G3Lmzn.png"></a></p>
<p><a href="https://imgchr.com/i/G3LZGj"><img src="https://s1.ax1x.com/2020/04/01/G3LZGj.png" alt="G3LZGj.png"></a></p>
<p>点击后，直接跳转到此界面：</p>
<p> <a href="https://library.vuforia.com/content/vuforia-library/en/articles/Solution/vuforia-engine-package-hosting-for-unity.html">https://library.vuforia.com/content/vuforia-library/en/articles/Solution/vuforia-engine-package-hosting-for-unity.html</a></p>
<p>第一种方式最简单，直接下载 SDK 升级即可，但是博主下载导入到 Unity 后，发现不仅没有升级，还出现了很多错误，而且在package manager 界面上，完全没有内容，似乎有文件找不到</p>
<p><a href="https://imgchr.com/i/G3LViQ"><img src="https://s1.ax1x.com/2020/04/01/G3LViQ.png" alt="G3LViQ.png"></a></p>
<p>错误提示：</p>
<p>Failed to resolve packages: Cannot read property ‘scopedRegistries’ of undefined. No packages loaded.</p>
<p>Cannot perform upm operation: Cannot read property ‘scopedRegistries’ of undefined [NotFound]<br>UnityEditor.EditorApplication:Internal_CallUpdateFunctions()</p>
<p>Error fetching package list.<br>UnityEditor.EditorApplication:Internal_CallUpdateFunctions()</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>按照官方链接的最后一个方法，下载 Vuforia Engine软件包，解压后将原名为<em>package</em>的文件夹，改名为<em>com.ptc.vuforia.engine</em>，放进项目对应的 package 目录，即可发现 Unity 界面已经开始导入。</p>
<p><a href="https://imgchr.com/i/G3L5TS"><img src="https://s1.ax1x.com/2020/04/01/G3L5TS.png" alt="G3L5TS.png"></a></p>
<h2 id="后续问题"><a href="#后续问题" class="headerlink" title="后续问题"></a>后续问题</h2><p><del>发现不能直接拖拽 .unitypackage 文件进行导入，只能通过右键菜单里的导入进行操作</del></p>
]]></content>
      <categories>
        <category>错误合集</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-Vuforia错误：Failed-load-data-set-xxx</title>
    <url>/2020/04/02/%E9%97%AE%E9%A2%98-Vuforia%E9%94%99%E8%AF%AF%EF%BC%9AFailed-load-data-set-xxx/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>vuforia运行问题</p>
<a id="more"></a>
<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>按照常规套路，布置好AR Camera , 2个model target 之后，运行会报错。提示 failed-load-data-set-xxx </p>
<!-- more -->
<p>错误提示：</p>
<blockquote>
<p>Failed to load data set all.<br>UnityEngine.Debug:LogError(Object)<br>Vuforia.DatabaseLoadARController:LoadDatasets()<br>Vuforia.VuforiaARController:StartAfterInitializationCompleted()<br>Vuforia.VuforiaARController:Start()<br>System.Delegate:DynamicInvoke(Object[])<br>Vuforia.DelegateHelper:InvokeDelegate(Delegate, Object[])<br>Vuforia.DelegateHelper:InvokeWithExceptionHandling(Action)<br>Vuforia.VuforiaBehaviour:Start()</p>
</blockquote>
<h3 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h3><p>推荐 Vuforia 官方论坛搜索，此问题已经有人反映过，链接：<a href="https://developer.vuforia.com/forum/model-targets/failed-load-data-set-xxx">https://developer.vuforia.com/forum/model-targets/failed-load-data-set-xxx</a> ；</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>尝试换Key，但是没啥用；</p>
<p>亲测解决方法：Unity 版本2019及以上，Vuforia 9.0 即可，就没有报错了</p>
<p>Vuforia 更新可以看我的另一篇文章：<a href="https://junlu.club/2020/04/02/问题-Vuforia更新错误-Failed-to-resolve-packages/">https://junlu.club/2020/04/02/%E9%97%AE%E9%A2%98-Vuforia%E6%9B%B4%E6%96%B0%E9%94%99%E8%AF%AF-Failed-to-resolve-packages/</a></p>
]]></content>
      <categories>
        <category>错误合集</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-Unity移动不连续</title>
    <url>/2020/04/02/%E9%97%AE%E9%A2%98-Unity%E7%A7%BB%E5%8A%A8%E4%B8%8D%E8%BF%9E%E7%BB%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>初学Unity的问题</p>
<a id="more"></a>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>刚刚装了Unity2019.3.4.f1 ，在scene页面移动cube时，发现移动不连续，即按照网格移动，类似于建模软件中的情况</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>so easy</p>
<p><a href="https://imgchr.com/i/GKKNGt"><img src="https://s1.ax1x.com/2020/03/31/GKKNGt.png" alt="GKKNGt.png"></a></p>
<p>点击一下就行了</p>
]]></content>
      <categories>
        <category>错误合集</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>下载YouTuBe字幕</title>
    <url>/2020/04/02/%E4%B8%8B%E8%BD%BDYouTuBe%E5%AD%97%E5%B9%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>字幕下载方法</p>
<a id="more"></a>
<h3 id="1-Keepvid"><a href="#1-Keepvid" class="headerlink" title="1. Keepvid"></a>1. Keepvid</h3><p><a href="https://keepvid.com/">https://keepvid.com/</a></p>
<h3 id="2-Dbxdb"><a href="#2-Dbxdb" class="headerlink" title="2.Dbxdb"></a>2.Dbxdb</h3><p><a href="http://mo.dbxdb.com/setting.html">http://mo.dbxdb.com/setting.html</a></p>
<h3 id="3-Zhuwei"><a href="#3-Zhuwei" class="headerlink" title="3. Zhuwei"></a>3. Zhuwei</h3><p><a href="https://zhuwei.me/y2b/">https://zhuwei.me/y2b/</a></p>
<h3 id="4-FindYoutube"><a href="#4-FindYoutube" class="headerlink" title="4. FindYoutube"></a>4. FindYoutube</h3><p><a href="https://www.findyoutube.net/">https://www.findyoutube.net/</a></p>
]]></content>
      <categories>
        <category>奇淫技巧</category>
      </categories>
      <tags>
        <tag>YouTuBe</tag>
      </tags>
  </entry>
  <entry>
    <title>Opencv-VS2019环境配置</title>
    <url>/2020/04/02/Opencv-VS2019%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文记录Win10操作系统下，Opencv+VS2019的环境配置，具体Opencv版本为4.1.0</p>
<a id="more"></a>
<h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>Opencv 官网下载链接：<a href="https://opencv.org/releases/">传送门</a></p>
<h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ol>
<li><p>下载好的文件解压到合适的目录下，本文以<code>D:\OpenCV</code>目录放置解压文件，如下图</p>
<p><a href="https://imgchr.com/i/8sQycT"><img src="https://s1.ax1x.com/2020/03/19/8sQycT.md.png" alt="8sQycT.md.png"></a></p>
</li>
<li><p>打开资源管理器窗口，在<code>此电脑</code>上右击，点击<code>属性</code>，弹出<code>控制面板中的系统窗口</code>，点击<code>高级系统设置</code>，弹出<code>系统属性窗口</code>，点击<code>环境变量</code></p>
</li>
<li><p>在窗口上方的<code>用户变量</code>中，选中Path变量，点击下方编辑，在编辑系统变量窗口中，新增以下变量：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\OpenCV\opencv\build\x64\vc15\bin</span><br></pre></td></tr></table></figure></li>
<li>连续点击3个确定，关闭系统窗口</li>
</ol>
<h3 id="配置VS"><a href="#配置VS" class="headerlink" title="配置VS"></a>配置VS</h3><ol>
<li><p>打开VS2019，选择创建新项目</p>
<p><a href="https://imgchr.com/i/8slUxK"><img src="https://s1.ax1x.com/2020/03/19/8slUxK.md.png" alt="8slUxK.md.png"></a></p>
</li>
<li><p>在弹出的创建新项目面板中，选择C++语言的空项目，点击右下方的下一步</p>
<p><a href="https://imgchr.com/i/8sQs3V"><img src="https://s1.ax1x.com/2020/03/19/8sQs3V.md.png" alt="8sQs3V.md.png"></a></p>
</li>
<li><p>结合自身情况，选择储存位置，点击创建</p>
</li>
<li><p>在新打开的VS界面中，找到右侧<code>解决方案资源管理器</code>，右键单击【源文件】-&gt;【添加】-&gt;【新建项】，新建一个命名为“main”的<code>C++文件</code></p>
</li>
<li><p>点开【视图】-&gt;【其他窗口】-&gt;【属性管理器】，打开属性管理器面板</p>
</li>
<li><p>调试模式改为<code>Debug x64</code>模式。</p>
</li>
<li><p>找到Opencv的安装目录<code>D:\OpenCV\opencv\build\x64\vc15\bin</code>，将如下图所示的三个文件（dll文件），复制粘贴到系统路径<code>C:\Windows\System32</code>文件夹内。</p>
<p><a href="https://imgchr.com/i/8sQ0Nn"><img src="https://s1.ax1x.com/2020/03/19/8sQ0Nn.md.png" alt="8sQ0Nn.md.png"></a></p>
</li>
<li><p>接下来，开始为软件配置目录和附加项。右键点击【属性管理器】中的【Debug | x64】选项，选择【添加新的项目属性表】</p>
</li>
<li><p>将新建的项目属性表重命名为<code>Opencv410Debugx64</code>，之后双击打开，选中【VC++ 目录】-&gt;【包含目录】，新增以下路径：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\OpenCV\opencv\build\include</span><br><span class="line">D:\OpenCV\opencv\build\include\opencv2</span><br></pre></td></tr></table></figure></li>
<li><p>在【库目录】中添加以下路径：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\OpenCV\opencv\build\x64\vc15\lib</span><br></pre></td></tr></table></figure></li>
<li><p>打开【链接器】-&gt;【输入】-&gt;【附加依赖项】，添加以下名称：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">opencv_world410d.lib</span><br></pre></td></tr></table></figure>
<p>PS：opencv_world410d.lib 是指 Debug 编辑模式，opencv_world410.lib 是指Relsase 编辑模式。</p>
</li>
</ol>
<h3 id="程序测试"><a href="#程序测试" class="headerlink" title="程序测试"></a>程序测试</h3><p>在main.cpp中粘贴以下程序：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &quot;opencv.hpp&quot; &#x2F;&#x2F;opencv 的头文件</span><br><span class="line">using namespace std;</span><br><span class="line">using namespace cv; &#x2F;&#x2F;opencv 的命名空间</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	printf(&quot;Hello Open CV!&quot;);</span><br><span class="line">	Mat srcImage &#x3D; imread(&quot;1.jpg&quot;);	&#x2F;&#x2F;图片需要在工程目录下</span><br><span class="line">	Mat temImage, dstImage1;</span><br><span class="line">	temImage &#x3D; srcImage;</span><br><span class="line">	&#x2F;&#x2F;尺寸调整</span><br><span class="line">	resize(temImage, dstImage1, Size(0, 0), 0.25, 0.25, INTER_LINEAR);     &#x2F;&#x2F;长宽缩小1&#x2F;4</span><br><span class="line">	imshow(&quot;缩小&quot;, dstImage1);</span><br><span class="line">	waitKey();</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="后续工作"><a href="#后续工作" class="headerlink" title="后续工作"></a>后续工作</h3><p>调试时如果在下方出现 <code>xxx符号在加载</code>，并且很久都没有出现图片，需要做以下工作：</p>
<p>进入【工具】-&gt;【选项】-&gt;【调试】-&gt;【符号】，看右边有个<code>Microsoft符号服务器</code>，将前面的勾去掉</p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><blockquote>
<p><a href="https://blog.csdn.net/qingzai_/article/details/73838709">https://blog.csdn.net/qingzai_/article/details/73838709</a></p>
<p><a href="https://blog.csdn.net/qq_24912401/article/details/90475290?utm_source=app">https://blog.csdn.net/qq_24912401/article/details/90475290?utm_source=app</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Windows环境配置</category>
      </categories>
      <tags>
        <tag>OpenCV</tag>
        <tag>VS2019</tag>
      </tags>
  </entry>
  <entry>
    <title>Next主题优化记录</title>
    <url>/2020/04/02/Next%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>经典主题！</p>
<a id="more"></a>
<h3 id="名词说明"><a href="#名词说明" class="headerlink" title="名词说明"></a>名词说明</h3><ul>
<li>站点配置文件：指文件所在路径为：根目录\_config.yml </li>
<li>主题配置文件：指文件所在路径为：根目录\themes\next\_config.yml </li>
</ul>
<h3 id="配置1：语言与基本信息更改"><a href="#配置1：语言与基本信息更改" class="headerlink" title="配置1：语言与基本信息更改"></a>配置1：语言与基本信息更改</h3><p>改变博客的语言为中文，博客标题，博客作者</p>
<ul>
<li>打开站点配置文件</li>
<li>找到代码并修改如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: JunLuBlog #要修改的内容区域</span><br><span class="line">subtitle: &#39;&#39;</span><br><span class="line">description: &#39;&#39;</span><br><span class="line">keywords:</span><br><span class="line">author: JunLu #要修改的内容区域</span><br><span class="line">language: zh-Hans #要修改的内容区域</span><br><span class="line">timezone: &#39;&#39;</span><br></pre></td></tr></table></figure>
<h3 id="配置2：主题样式修改"><a href="#配置2：主题样式修改" class="headerlink" title="配置2：主题样式修改"></a>配置2：主题样式修改</h3><p>Next主题提供了多种样式以供选择</p>
<ul>
<li>打开主题配置文件</li>
<li>修改代码如下</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces 若选择此样式，将其前面的#去掉即可</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure>
<h3 id="配置3：菜单设置"><a href="#配置3：菜单设置" class="headerlink" title="配置3：菜单设置"></a>配置3：菜单设置</h3><p>在博客顶端需要有标签，分类，关于等菜单栏</p>
<ul>
<li>在根目录开启 <code>Git Bash Here</code></li>
<li>命令：<code>hexo new page &quot;tags&quot;</code></li>
<li>命令：<code>hexo new page &quot;categories&quot;</code></li>
<li>命令：<code>hexo new page &quot;about&quot;</code></li>
<li>进入路径：根目录\source，可以看到新建了分类，标签，关于的文件夹</li>
<li>打开主题配置文件，修改代码如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;|| home</span><br><span class="line">  about: &#x2F;about&#x2F;|| user</span><br><span class="line">  tags: &#x2F;tags&#x2F;|| tags</span><br><span class="line">  categories: &#x2F;categories&#x2F;|| th</span><br><span class="line">  archives: &#x2F;archives&#x2F;|| archive</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure>
<p>PS：一丁点空格也不许错</p>
<h3 id="配置3-：侧边栏"><a href="#配置3-：侧边栏" class="headerlink" title="配置3 ：侧边栏"></a>配置3 ：侧边栏</h3><p>Next主题提供了侧边栏的左右放置方向</p>
<ul>
<li>打开主题配置文件</li>
<li>修改代码如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position, available value: left | right (only for Pisces | Gemini).</span><br><span class="line">  #position: left</span><br><span class="line">  position: right</span><br></pre></td></tr></table></figure>
<h3 id="配置4：-开启动态背景"><a href="#配置4：-开启动态背景" class="headerlink" title="配置4： 开启动态背景"></a>配置4： 开启动态背景</h3><ul>
<li>打开主题配置文件</li>
<li>修改代码如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Canvas-nest</span><br><span class="line">canvas_nest: true</span><br></pre></td></tr></table></figure>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><blockquote>
<p><a href="http://theme-next.iissnan.com/">http://theme-next.iissnan.com/</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-Next-支持数学公式输入配置</title>
    <url>/2020/04/02/Hexo-Next-%E6%94%AF%E6%8C%81%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E8%BE%93%E5%85%A5%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>忘记是哪个版本适用来着</p>
<a id="more"></a>
<h3 id="1-使用Kramed-代替-Marked"><a href="#1-使用Kramed-代替-Marked" class="headerlink" title="1. 使用Kramed 代替 Marked"></a>1. 使用Kramed 代替 Marked</h3><p>渲染引擎kramed支持mathjax</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure>
<p>打开:博客根目录<code>/node_modules/hexo-renderer-kramed/lib/renderer.js</code><br>将下面这几句进行更改</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; Change inline math rule</span><br><span class="line">function formatText(text) &#123;</span><br><span class="line">  &#x2F;&#x2F; Fit kramed&#39;s rule: $$ + \1 + $$</span><br><span class="line">  return text.replace(&#x2F;&#96;\$(.*?)\$&#96;&#x2F;g, &#39;$$$$$1$$$$&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>更改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; Change inline math rule</span><br><span class="line">function formatText(text) &#123;</span><br><span class="line">  &#x2F;&#x2F; Fit kramed&#39;s rule: $$ + \1 + $$</span><br><span class="line">    return text;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-使用hexo-renderer-mathjax-代替-hexo-math"><a href="#2-使用hexo-renderer-mathjax-代替-hexo-math" class="headerlink" title="2. 使用hexo-renderer-mathjax 代替 hexo-math"></a>2. 使用hexo-renderer-mathjax 代替 hexo-math</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-math --save</span><br><span class="line">npm install hexo-renderer-mathjax --save</span><br></pre></td></tr></table></figure>
<h3 id="3-更新-Mathjax-的-CDN-链接"><a href="#3-更新-Mathjax-的-CDN-链接" class="headerlink" title="3. 更新 Mathjax 的 CDN 链接"></a>3. 更新 Mathjax 的 CDN 链接</h3><p>打开:<code>博客根目录/node_modules/hexo-renderer-mathjax/mathjax.html</code><br>将最下面&lt;script src=后的url改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;mathjax&#x2F;2.7.1&#x2F;MathJax.js?config&#x3D;TeX-MML-AM_CHTML</span><br></pre></td></tr></table></figure>
<h3 id="4-更改默认转义规则"><a href="#4-更改默认转义规则" class="headerlink" title="4. 更改默认转义规则"></a>4. 更改默认转义规则</h3><p>打开:<code>博客根目录/node_modules/kramed/lib/rules/inline.js</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;escape: &#x2F;^\\([\\&#96;*&#123;&#125;\[\]()#$+\-.!_&gt;])&#x2F;,      第11行，将其修改为</span><br><span class="line">escape: &#x2F;^\\([&#96;*\[\]()#$+\-.!_&gt;])&#x2F;,</span><br><span class="line">&#x2F;&#x2F;em: &#x2F;^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)&#x2F;,    第20行，将其修改为</span><br><span class="line">em: &#x2F;^\*((?:\*\*|[\s\S])+?)\*(?!\*)&#x2F;,</span><br></pre></td></tr></table></figure>
<h3 id="5-开启mathjax"><a href="#5-开启mathjax" class="headerlink" title="5. 开启mathjax"></a>5. 开启mathjax</h3><p>在主题的配置文件中,我用的是next主题,那么在其_config.yml中找到mathjax并设置为true</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># MathJax Support</span><br><span class="line">mathjax:</span><br><span class="line">  enable: true</span><br><span class="line">  per_page: true</span><br><span class="line">  cdn: &#x2F;&#x2F;cdn.bootcss.com&#x2F;mathjax&#x2F;2.7.1&#x2F;latest.js?config&#x3D;TeX-AMS-MML_HTMLorMML</span><br></pre></td></tr></table></figure>
<p>之后再写文章时,加上mathjax: true</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">date: 2017&#x2F;8&#x2F;3 18:20:00</span><br><span class="line">tags: hexo</span><br><span class="line">mathjax: true</span><br><span class="line">title: hexo博客</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><blockquote>
<p><a href="https://blog.csdn.net/littlehaes/article/details/84370393">https://blog.csdn.net/littlehaes/article/details/84370393</a></p>
<p><a href="https://andyvj.coding.me/2019/02/26/190226-02/">https://andyvj.coding.me/2019/02/26/190226-02/</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo静态博客配置</title>
    <url>/2020/04/02/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>博客搭建第一步！</p>
<a id="more"></a>
<h3 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h3><ol>
<li><p>github 账号。</p>
</li>
<li><p><del>购买一个域名的钱</del></p>
<p><a href="https://www.freenom.com/zh/index.html?lang=zh">免费域名传送门</a></p>
</li>
</ol>
<hr>
<h3 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h3><h4 id="github-创建仓库"><a href="#github-创建仓库" class="headerlink" title="github 创建仓库"></a>github 创建仓库</h4><ul>
<li><p>登录 github 账号，<a href="https://github.com/">传送门</a></p>
</li>
<li><p>Start Project</p>
<p><a href="https://imgchr.com/i/G0YxHI"><img src="https://s1.ax1x.com/2020/04/04/G0YxHI.png" alt="G0YxHI.png"></a></p>
</li>
<li><p>在Repository name中输入新建仓库的名称，yourname.github.io，点击Create Repository</p>
<p><a href="https://imgchr.com/i/G0YvDA"><img src="https://s1.ax1x.com/2020/04/04/G0YvDA.png" alt="G0YvDA.png"></a></p>
</li>
</ul>
<hr>
<h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h4><ul>
<li>下载安装地址：<ul>
<li>官网：<a href="https://gitforwindows.org/">传送门</a></li>
<li>蓝奏云：<a href="https://www.lanzous.com/iazxt2j">传送门</a></li>
</ul>
</li>
<li>一路默认安装即可</li>
</ul>
<hr>
<h4 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h4><blockquote>
<p>为了把本地的仓库中的内容传输到GitHub上，需要配置ssh key，无论是上传自己的博客还是上传其他的仓库都需要连接Github，ssh key是一个token，作用是身份验证。</p>
</blockquote>
<ul>
<li><p><strong>打开Git Bash，输入命令：</strong>（email是注册Github时使用的邮箱）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;email&quot;</span><br></pre></td></tr></table></figure></li>
<li><p>输入上面的命令后<strong>按Enter键</strong>，Git Bash会提示: </p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter passphrase &lt;empty for no passphrase&gt;:_</span><br></pre></td></tr></table></figure></li>
<li><p><strong>直接按 Enter</strong>，Git Bash会在默认路径C:\users\用户名.ssh下生成几个文件。然后Git Bash又给出提示：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter passphrase &lt;empty for no passphrase&gt;:_</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这是在提示我们输入密码，直接回车表示不设置密码</p>
</blockquote>
</li>
<li><p><strong>直接回车</strong>，然后Git Bash要求我们重复密码，也<strong>直接回车</strong>，然后就会提示ssh key已经生成。</p>
</li>
<li><p><strong>进入到默认的地址</strong>中查看ssh key文件</p>
<p><a href="https://imgchr.com/i/G0YOjH"><img src="https://s1.ax1x.com/2020/04/04/G0YOjH.png" alt="G0YOjH.png"></a></p>
</li>
<li><p>使用记事本或者其他软件<strong>打开 id_rsa.pub 文件，复制全部内容</strong></p>
</li>
<li><p>浏览器<strong>进入 github ，进入博客仓库</strong></p>
<p><a href="https://imgchr.com/i/G0YLge"><img src="https://s1.ax1x.com/2020/04/04/G0YLge.png" alt="G0YLge.png"></a></p>
</li>
</ul>
<p>​        <a href="https://imgchr.com/i/G0tpUP"><img src="https://s1.ax1x.com/2020/04/04/G0tpUP.png" alt="G0tpUP.png"></a></p>
<ul>
<li><p><strong>点击设置</strong></p>
<p><a href="https://imgchr.com/i/G0t94f"><img src="https://s1.ax1x.com/2020/04/04/G0t94f.png" alt="G0t94f.png"></a></p>
</li>
<li><p>在页面左侧<strong>找到Deploy keys并点击</strong></p>
<p><a href="https://imgchr.com/i/G0tPC8"><img src="https://s1.ax1x.com/2020/04/04/G0tPC8.png" alt="G0tPC8.png"></a></p>
</li>
<li><p>点击右侧的<strong>Add deploy key</strong>按钮，title填什么都可以，Key中<strong>粘贴</strong>我们刚刚在ssh key文件中复制的key；点击Add Key，<strong>保存ssh key</strong></p>
<p><a href="https://imgchr.com/i/G0tFgg"><img src="https://s1.ax1x.com/2020/04/04/G0tFgg.png" alt="G0tFgg.png"></a></p>
<p>​        <a href="https://imgchr.com/i/G0tSEt"><img src="https://s1.ax1x.com/2020/04/04/G0tSEt.png" alt="G0tSEt.png"></a></p>
</li>
<li><p>在本地验证ssh key设置是否成功，<strong>打开Git Bash，输入命令</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p><strong>回车</strong>后，如果看到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;You’ve successfully authenticated, but GitHub does not provide shell access&#96;</span><br></pre></td></tr></table></figure>
<p>表示当前已经成功地连接上了自己的GitHub账户。</p>
</li>
<li><p>接下来，设置一下自己的用户名和邮箱，<strong>输入以下命令：</strong>（name 和 email 每个人不同）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;my name&quot;</span><br><span class="line">git config --global user.email &quot;my email&quot;</span><br></pre></td></tr></table></figure></li>
<li>到此为止，我们已经成功地将个人电脑和Github账号连接。</li>
</ul>
<hr>
<h4 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h4><ul>
<li><p>下载</p>
<ul>
<li>官网： <a href="https://nodejs.org/en/">传送门</a></li>
<li>城通（win）：<a href="https://474b.com/file/14976410-435186222">传送门</a></li>
</ul>
</li>
<li><p>按照需要选择不同的版本，下载到本地之后，<strong>直接双击安装，一路默认</strong></p>
</li>
<li><p>检验是否安装成功：</p>
<p>打开windows的控制台，<strong>输入命令：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure></li>
<li>电脑若显示当前安装的node.js的版本，则安装成功</li>
</ul>
<hr>
<h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><ul>
<li><p>在电脑的磁盘里<strong>新建一个空文件夹</strong>，如E:\HexoB，用于存放本地仓库</p>
</li>
<li><p>在<strong>windows控制台中输入命令</strong>，跳转至D:\GIT\hexotext；代码如下：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd E:\HexoB</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装Hexo，<strong>输入命令：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo -g</span><br></pre></td></tr></table></figure></li>
<li><p>检查Hexo是否安装成功，<strong>输入命令：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h4 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h4><ul>
<li><p>初始化 E:\HexoB 这个文件夹，打开Git Bash进入此目录，<strong>输入命令：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></li>
<li><p>安装Hexo所需要的组件，<strong>输入命令：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li>
<li><p>产生webapp文件，<strong>输入命令：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></li>
<li><p>开启服务器，<strong>输入命令：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li>
<li><p>此时控制台提示：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO Start processing</span><br><span class="line">INFO Hexo is running at http:&#x2F;&#x2F;localhost:4000&#x2F;. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></li>
<li><p><strong>浏览器输入</strong>地址：localhost:4000 预览</p>
</li>
<li><p><strong>新建markdown文件</strong>，保存为.md文件到本地，并移至E:\HexoB\source\_posts中</p>
</li>
<li><p>和上次一样，打开的Git Bash，<strong>执行以下命令</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li>
<li>打开浏览器，访问：localhost:4000，此时可以看到刚刚发布的内容</li>
</ul>
<hr>
<h4 id="连接Hexo和Github-Pages及部署博客"><a href="#连接Hexo和Github-Pages及部署博客" class="headerlink" title="连接Hexo和Github Pages及部署博客"></a>连接Hexo和Github Pages及部署博客</h4><ul>
<li>打开 E:\HexoB 中的<strong>_config.yml文件</strong>，找到deploy字段，改为如下内容</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: git@github.com:someurl&#x2F;someurl.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure>
<blockquote>
<p> git@github.com:someurl/someurl.github.io.git 是博客仓库的地址，获取方式是登录GitHub，找到自己的博客的仓库</p>
<p><a href="https://imgchr.com/i/GBEbB4"><img src="https://s1.ax1x.com/2020/04/05/GBEbB4.png" alt="GBEbB4.png"></a></p>
</blockquote>
<ul>
<li><p>现在将Hexo部署到GitHub的仓库里</p>
</li>
<li><p>在仓库中点击<strong>Settings，往下拉，找到GitHub Pages</strong></p>
<p><a href="https://imgchr.com/i/GBETjU"><img src="https://s1.ax1x.com/2020/04/05/GBETjU.png" alt="GBETjU.png"></a></p>
</li>
<li><p>Source选择 <strong>master branch</strong></p>
</li>
<li><p>在 E:\HexoB 中打开Git Bash，<strong>输入命令：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>
<li><p><strong>输入命令：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></li>
<li>部署完成之后，在浏览器中输入地址 www.yourname.github.io，这个地址就是在repository的Setting页面中看到的那个，就可以访问自己的博客啦，以后写了新的博客，保存成md文件放到source_post文件夹中，执行</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>
<ul>
<li>就可以发布到GitHub上啦</li>
</ul>
<hr>
<h3 id="购买域名并解析"><a href="#购买域名并解析" class="headerlink" title="购买域名并解析"></a>购买域名并解析</h3><ul>
<li>已腾讯云为例，<a href="https://cloud.tencent.com/">传送门</a></li>
</ul>
<p><a href="https://imgchr.com/i/834tYj"><img src="https://s1.ax1x.com/2020/03/15/834tYj.png" alt="834tYj.png"></a></p>
<ul>
<li>点击 产品-&gt;域名注册</li>
</ul>
<p><a href="https://imgchr.com/i/835CNQ"><img src="https://s1.ax1x.com/2020/03/15/835CNQ.png" alt="835CNQ.png"></a></p>
<ul>
<li>选择一个域名进行购买</li>
<li>购买后进入 控制台</li>
<li>进入域名管理界面</li>
<li>首先，实名认证</li>
<li>成功后，解析</li>
</ul>
<p><a href="https://imgchr.com/i/83ozB6"><img src="https://s1.ax1x.com/2020/03/15/83ozB6.png" alt="83ozB6.png"></a></p>
<ul>
<li>记录值的获取方式：<ul>
<li>打开windows控制台，ping www.yourname.github.io</li>
<li>将IP地址填写进入记录值</li>
</ul>
</li>
<li>在本地的D:\GIT\hexotext\source中新建一个名为CNAME的文件，内容则是刚刚申请的域名，然后重新发布</li>
<li>到此成功</li>
</ul>
<h3 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h3><ul>
<li><p>对于nmp工具</p>
<ul>
<li>更换淘宝源<code>npm install --registry=https://registry.npm.taobao.org</code></li>
<li>安装cnmp <code>$ npm install -g cnpm --registry=https://registry.npm.taobao.org</code></li>
</ul>
</li>
<li><p><a href="https://blog.csdn.net/zyupupup/article/details/85098366">https://blog.csdn.net/zyupupup/article/details/85098366</a></p>
</li>
</ul>
<h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ul>
<li><a href="https://blog.csdn.net/qq_34229391/article/details/82251852">https://blog.csdn.net/qq_34229391/article/details/82251852</a></li>
<li><a href="https://blog.csdn.net/zyupupup/article/details/85098366">https://blog.csdn.net/zyupupup/article/details/85098366</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>chorme插件记录</title>
    <url>/2020/04/02/chorme%E6%8F%92%E4%BB%B6%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>小小插件小记录</p>
<a id="more"></a>
<h2 id="chorme-插件"><a href="#chorme-插件" class="headerlink" title="chorme 插件"></a>chorme 插件</h2><hr>
<p>chorme 浏览器成功的地方在于，其强大的扩展能力。在chorme 网上商店强大的加持下，chorme浏览器成为市面上最好用的浏览器，通过安装不同的插件，达到其他浏览器无法达到的效果</p>
<hr>
<h3 id="必备插件"><a href="#必备插件" class="headerlink" title="必备插件"></a>必备插件</h3><hr>
<ol>
<li><p>GHelpera</p>
<p>对于大陆用户，此插件的目的在于链接上chorme官方的网上商店，以获取更多的其他插件。</p>
<p>除此之外，GHelper 可以用于科研，访问谷歌学术等</p>
</li>
<li><p>Adblock</p>
<p>作用：拦截广告</p>
</li>
<li><p>stylus</p>
<p>作用：美化界面</p>
</li>
<li><p>IDM</p>
<p>作用：强大的下载功能，装机必备</p>
</li>
<li><p>SimpleExtManger</p>
<p>作用：管理所有插件，不需要的可以随时关闭，加快浏览器速度</p>
</li>
<li><p>Toby</p>
<p>作用：保存标签页，工作必备</p>
</li>
<li><p>chorme better history</p>
<p>作用：历史记录，更好的历史记录</p>
</li>
<li><p>whatFont</p>
<p>作用：查询网页字体</p>
</li>
<li><p>Picture in Picture for every website</p>
<p>作用：对于视频网站，达到画中画的效果播放</p>
</li>
<li><p>Global Rank</p>
<p>作用：发现相似网站</p>
</li>
<li><p>微信同步助手</p>
<p>作用：将微信文章同步到简书，知乎等平台</p>
</li>
<li><p>open write助手</p>
<p>作用：分发文章，在各个平台</p>
</li>
</ol>
]]></content>
      <categories>
        <category>奇淫技巧</category>
      </categories>
      <tags>
        <tag>chorme插件</tag>
      </tags>
  </entry>
</search>
